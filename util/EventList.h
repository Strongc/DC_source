/****************************************************************************/
/*                                                                          */
/*                                                                          */
/*                                 GRUNDFOS                                 */
/*                           DK-8850 BJERRINGBRO                            */
/*                                 DENMARK                                  */
/*               --------------------------------------------               */
/*                Project: WW Midrange                                      */
/*               --------------------------------------------               */
/*                                                                          */
/*               (C) Copyright Grundfos                                     */
/*               All rights reserved                                        */
/*               --------------------------------------------               */
/*                                                                          */
/*               As this is the  property of  GRUNDFOS  it                  */
/*               must not be passed on to any person not aut-               */
/*               horized  by GRUNDFOS or be  copied or other-               */
/*               wise  utilized by anybody without GRUNDFOS'                */
/*               expressed written permission.                              */
/****************************************************************************/
/* CLASS NAME       : EventList                                             */
/*                                                                          */
/* FILE NAME        : EventList.h                                           */
/*                                                                          */
/* CREATED DATE     : 08-07-2008 dd-mm-yyyy                                 */
/*                                                                          */
/* SHORT FILE DESCRIPTION :  Defines event list class                       */
/* List of events. An event can be used to draw a graph. Each event has a   */
/* time and a corresponding value                                           */
/****************************************************************************/
/*****************************************************************************
   Protect against multiple inclusion through the use of guards:
 ****************************************************************************/
#ifndef mrcEventList_h
#define mrcEventList_h

/*****************************************************************************
  SYSTEM INCLUDES
 *****************************************************************************/

/*****************************************************************************
  PROJECT INCLUDES
 *****************************************************************************/
#include <cu351_cpu_types.h>
#include <Factory.h>

/*****************************************************************************
  DEFINES
 *****************************************************************************/
#define MAX_ELEMENTS 21

/*****************************************************************************
  TYPE DEFINES
 *****************************************************************************/

/*****************************************************************************
  Forward declaration
 *****************************************************************************/
 class EventItem;

 /*****************************************************************************
 * CLASS:
 * DESCRIPTION:
 *
 *****************************************************************************/
class EventList
{
  public:
    /********************************************************************
    LIFECYCLE - Default constructor.
    ********************************************************************/
    EventList();
    /********************************************************************
    LIFECYCLE - Destructor.
    ********************************************************************/
    ~EventList(void);
    /********************************************************************
    ASSIGNMENT OPERATOR
    ********************************************************************/

    /********************************************************************
    OPERATIONS
    ********************************************************************/
    void AddEvent(int time, int value);   //Add new event to the list
    int GetValue(int time);               //Returns the value for the given time
    int GetEvent(int index, int *time, int *value);  //Returns a specific event
    void SortEvents(void);              // Sort the elements
    int QueryEvents(int startTime, int stopTime, int * start, int * count);  //Returns the events in the time span given
    int GetTimeForNextEvent(int time);  //Returns the time for the next event

  private:
    /********************************************************************
    OPERATIONS
    ********************************************************************/

    /********************************************************************
    ATTRIBUTE
    ********************************************************************/
    int mNoOfEvents;                    // Number of elements in the list
    EventItem * mEvents[MAX_ELEMENTS];  // Pointers to events;

  protected:
    /********************************************************************
    OPERATIONS
    ********************************************************************/

    /********************************************************************
    ATTRIBUTE
    ********************************************************************/
};

 /*****************************************************************************
 * CLASS:  EventItem
 * DESCRIPTION:
 *****************************************************************************/
class EventItem
{
  public:
    /********************************************************************
    LIFECYCLE - Default constructor.
    ********************************************************************/
    EventItem(int aTime, int aValue);

    /********************************************************************
    LIFECYCLE - Destructor.
    ********************************************************************/
    ~EventItem();

    /********************************************************************
    ASSIGNMENT OPERATOR
    ********************************************************************/

    /********************************************************************
    OPERATIONS
    ********************************************************************/
    bool operator > (EventItem& event);
    bool operator < (EventItem& event);
    bool operator <= (EventItem& event);
    bool operator >= (EventItem& event);

    /********************************************************************
    ATTRIBUTE
    ********************************************************************/
    int value;        // The value corresponding to the time
    int time;         // time in seconds

  private:
    /********************************************************************
    OPERATIONS
    ********************************************************************/

    /********************************************************************
    ATTRIBUTE
    ********************************************************************/

  protected:
    /********************************************************************
    OPERATIONS
    ********************************************************************/

    /********************************************************************
    ATTRIBUTE
    ********************************************************************/

};

#endif

