/**************************************************************************
 This file is auto-generated by FactoryGenerator, do not modify it manually
**************************************************************************/

#include <BaseGeniAppIf.h>

/**************************************************************************
 Constructor/Destructor implementation
**************************************************************************/

BaseGeniAppIf::BaseGeniAppIf()
{
}

BaseGeniAppIf::~BaseGeniAppIf()
{
}

/**************************************************************************
 Observer implementation
**************************************************************************/

void BaseGeniAppIf::SetSubjectPointer(int /*id*/, Subject* pSubject)
{
  bool notAssigned = false;
  // attach subject
  switch (pSubject->GetSubjectId())
  {
  case SUBJECT_ID_ACTUAL_ALARM:
    mp_actual_alarm.Attach(pSubject);
    break;
  case SUBJECT_ID_ACTUAL_WARNING:
    mp_actual_warning.Attach(pSubject);
    break;
  case SUBJECT_ID_ADV_FLOW_CALCULATION_START_LEARNING_EVENT:
    mp_adv_flow_calculation_start_learning_event.Attach(pSubject);
    break;
  case SUBJECT_ID_ALARM_CLEAR_ALARM_LOG_EVENT:
    mp_alarm_clear_alarm_log_event.Attach(pSubject);
    break;
  case SUBJECT_ID_ALARM_RESET_EVENT:
    mp_alarm_reset_event.Attach(pSubject);
    break;
  case SUBJECT_ID_ANA_IN_1_CONF_MEASURED_VALUE:
    mp_ana_in_1_conf_measured_value.Attach(pSubject);
    break;
  case SUBJECT_ID_ANA_IN_2_CONF_MEASURED_VALUE:
    mp_ana_in_2_conf_measured_value.Attach(pSubject);
    break;
  case SUBJECT_ID_ANA_IN_3_CONF_MEASURED_VALUE:
    mp_ana_in_3_conf_measured_value.Attach(pSubject);
    break;
  case SUBJECT_ID_ANA_IN_4_CONF_MEASURED_VALUE:
    mp_ana_in_4_conf_measured_value.Attach(pSubject);
    break;
  case SUBJECT_ID_ANA_IN_5_CONF_MEASURED_VALUE:
    mp_ana_in_5_conf_measured_value.Attach(pSubject);
    break;
  case SUBJECT_ID_ANA_IN_6_CONF_MEASURED_VALUE:
    mp_ana_in_6_conf_measured_value.Attach(pSubject);
    break;
  case SUBJECT_ID_ANA_IN_7_CONF_MEASURED_VALUE:
    mp_ana_in_7_conf_measured_value.Attach(pSubject);
    break;
  case SUBJECT_ID_ANA_OUT_1_CONF_FUNC:
    mp_ana_out_1_conf_func.Attach(pSubject);
    break;
  case SUBJECT_ID_ANA_OUT_2_CONF_FUNC:
    mp_ana_out_2_conf_func.Attach(pSubject);
    break;
  case SUBJECT_ID_ANA_OUT_3_CONF_FUNC:
    mp_ana_out_3_conf_func.Attach(pSubject);
    break;
  case SUBJECT_ID_ANA_OUT_4_CONF_FUNC:
    mp_ana_out_4_conf_func.Attach(pSubject);
    break;
  case SUBJECT_ID_ANA_OUT_5_CONF_FUNC:
    mp_ana_out_5_conf_func.Attach(pSubject);
    break;
  case SUBJECT_ID_ANA_OUT_6_CONF_FUNC:
    mp_ana_out_6_conf_func.Attach(pSubject);
    break;
  case SUBJECT_ID_ANA_OUT_USER_1:
    mp_ana_out_user_1.Attach(pSubject);
    break;
  case SUBJECT_ID_ANA_OUT_USER_2:
    mp_ana_out_user_2.Attach(pSubject);
    break;
  case SUBJECT_ID_ANA_OUT_USER_3:
    mp_ana_out_user_3.Attach(pSubject);
    break;
  case SUBJECT_ID_ANTI_BLOCKING_PERFORMED_COUNTER_PUMP_1:
    mp_anti_blocking_performed_counter_pump_1.Attach(pSubject);
    break;
  case SUBJECT_ID_ANTI_BLOCKING_PERFORMED_COUNTER_PUMP_2:
    mp_anti_blocking_performed_counter_pump_2.Attach(pSubject);
    break;
  case SUBJECT_ID_ANTI_BLOCKING_PERFORMED_COUNTER_PUMP_3:
    mp_anti_blocking_performed_counter_pump_3.Attach(pSubject);
    break;
  case SUBJECT_ID_ANTI_BLOCKING_PERFORMED_COUNTER_PUMP_4:
    mp_anti_blocking_performed_counter_pump_4.Attach(pSubject);
    break;
  case SUBJECT_ID_ANTI_BLOCKING_PERFORMED_COUNTER_PUMP_5:
    mp_anti_blocking_performed_counter_pump_5.Attach(pSubject);
    break;
  case SUBJECT_ID_ANTI_BLOCKING_PERFORMED_COUNTER_PUMP_6:
    mp_anti_blocking_performed_counter_pump_6.Attach(pSubject);
    break;
  case SUBJECT_ID_ANTIBLOCK_NORMAL_STORE_PARAMETERS_EVENT:
    mp_antiblock_normal_store_parameters_event.Attach(pSubject);
    break;
  case SUBJECT_ID_APPLICATION_MODE:
    mp_application_mode.Attach(pSubject);
    break;
  case SUBJECT_ID_BUS_CMD_PUMP_1_AUTO:
    mp_bus_cmd_pump_1_auto.Attach(pSubject);
    break;
  case SUBJECT_ID_BUS_CMD_PUMP_1_START:
    mp_bus_cmd_pump_1_start.Attach(pSubject);
    break;
  case SUBJECT_ID_BUS_CMD_PUMP_1_STOP:
    mp_bus_cmd_pump_1_stop.Attach(pSubject);
    break;
  case SUBJECT_ID_BUS_CMD_PUMP_2_AUTO:
    mp_bus_cmd_pump_2_auto.Attach(pSubject);
    break;
  case SUBJECT_ID_BUS_CMD_PUMP_2_START:
    mp_bus_cmd_pump_2_start.Attach(pSubject);
    break;
  case SUBJECT_ID_BUS_CMD_PUMP_2_STOP:
    mp_bus_cmd_pump_2_stop.Attach(pSubject);
    break;
  case SUBJECT_ID_BUS_CMD_PUMP_3_AUTO:
    mp_bus_cmd_pump_3_auto.Attach(pSubject);
    break;
  case SUBJECT_ID_BUS_CMD_PUMP_3_START:
    mp_bus_cmd_pump_3_start.Attach(pSubject);
    break;
  case SUBJECT_ID_BUS_CMD_PUMP_3_STOP:
    mp_bus_cmd_pump_3_stop.Attach(pSubject);
    break;
  case SUBJECT_ID_BUS_CMD_PUMP_4_AUTO:
    mp_bus_cmd_pump_4_auto.Attach(pSubject);
    break;
  case SUBJECT_ID_BUS_CMD_PUMP_4_START:
    mp_bus_cmd_pump_4_start.Attach(pSubject);
    break;
  case SUBJECT_ID_BUS_CMD_PUMP_4_STOP:
    mp_bus_cmd_pump_4_stop.Attach(pSubject);
    break;
  case SUBJECT_ID_BUS_CMD_PUMP_5_AUTO:
    mp_bus_cmd_pump_5_auto.Attach(pSubject);
    break;
  case SUBJECT_ID_BUS_CMD_PUMP_5_START:
    mp_bus_cmd_pump_5_start.Attach(pSubject);
    break;
  case SUBJECT_ID_BUS_CMD_PUMP_5_STOP:
    mp_bus_cmd_pump_5_stop.Attach(pSubject);
    break;
  case SUBJECT_ID_BUS_CMD_PUMP_6_AUTO:
    mp_bus_cmd_pump_6_auto.Attach(pSubject);
    break;
  case SUBJECT_ID_BUS_CMD_PUMP_6_START:
    mp_bus_cmd_pump_6_start.Attach(pSubject);
    break;
  case SUBJECT_ID_BUS_CMD_PUMP_6_STOP:
    mp_bus_cmd_pump_6_stop.Attach(pSubject);
    break;
  case SUBJECT_ID_CHEMICAL_TOTAL_DOSED:
    mp_chemical_total_dosed.Attach(pSubject);
    break;
  case SUBJECT_ID_CIU_COMMUNICATION:
    mp_ciu_communication.Attach(pSubject);
    break;
  case SUBJECT_ID_CLEAR_PENDING_SCADA_EVENT:
    mp_clear_pending_scada_event.Attach(pSubject);
    break;
  case SUBJECT_ID_COMMUNICATION_CARD_RECEIVED:
    mp_communication_card_received.Attach(pSubject);
    break;
  case SUBJECT_ID_CUE_PUMP_1_DEVICE_STATUS:
    mp_cue_pump_1_device_status.Attach(pSubject);
    break;
  case SUBJECT_ID_CUE_PUMP_1_TORQUE:
    mp_cue_pump_1_torque.Attach(pSubject);
    break;
  case SUBJECT_ID_CUE_PUMP_2_DEVICE_STATUS:
    mp_cue_pump_2_device_status.Attach(pSubject);
    break;
  case SUBJECT_ID_CUE_PUMP_2_TORQUE:
    mp_cue_pump_2_torque.Attach(pSubject);
    break;
  case SUBJECT_ID_CUE_PUMP_3_DEVICE_STATUS:
    mp_cue_pump_3_device_status.Attach(pSubject);
    break;
  case SUBJECT_ID_CUE_PUMP_3_TORQUE:
    mp_cue_pump_3_torque.Attach(pSubject);
    break;
  case SUBJECT_ID_CUE_PUMP_4_DEVICE_STATUS:
    mp_cue_pump_4_device_status.Attach(pSubject);
    break;
  case SUBJECT_ID_CUE_PUMP_4_TORQUE:
    mp_cue_pump_4_torque.Attach(pSubject);
    break;
  case SUBJECT_ID_CUE_PUMP_5_DEVICE_STATUS:
    mp_cue_pump_5_device_status.Attach(pSubject);
    break;
  case SUBJECT_ID_CUE_PUMP_5_TORQUE:
    mp_cue_pump_5_torque.Attach(pSubject);
    break;
  case SUBJECT_ID_CUE_PUMP_6_DEVICE_STATUS:
    mp_cue_pump_6_device_status.Attach(pSubject);
    break;
  case SUBJECT_ID_CUE_PUMP_6_TORQUE:
    mp_cue_pump_6_torque.Attach(pSubject);
    break;
  case SUBJECT_ID_CUSTOM_RELAY_ACTIVATE_CMD_EVENT:
    mp_custom_relay_activate_cmd_event.Attach(pSubject);
    break;
  case SUBJECT_ID_CUSTOM_RELAY_DEACTIVATE_CMD_EVENT:
    mp_custom_relay_deactivate_cmd_event.Attach(pSubject);
    break;
  case SUBJECT_ID_CUSTOM_RELAY_PULSE_CMD_EVENT:
    mp_custom_relay_pulse_cmd_event.Attach(pSubject);
    break;
  case SUBJECT_ID_DAY_LOGGING_START_HOUR:
    mp_day_logging_start_hour.Attach(pSubject);
    break;
  case SUBJECT_ID_DEMO_SUITCASE_MODE_ENABLED:
    mp_demo_suitcase_mode_enabled.Attach(pSubject);
    break;
  case SUBJECT_ID_DEVICE_NO_SIM:
    mp_device_no_sim.Attach(pSubject);
    break;
  case SUBJECT_ID_DEVICE_TYPE_CODE_SIM:
    mp_device_type_code_sim.Attach(pSubject);
    break;
  case SUBJECT_ID_DIG_IN_FUNC_INPUT_ENERGY_CNT:
    mp_dig_in_func_input_energy_cnt.Attach(pSubject);
    break;
  case SUBJECT_ID_DISABLE_TEST_MODE:
    mp_disable_test_mode.Attach(pSubject);
    break;
  case SUBJECT_ID_DISPLAY_CURRENT_NO_OF_FLOAT_SWITCHES:
    mp_display_current_no_of_float_switches.Attach(pSubject);
    break;
  case SUBJECT_ID_DISPLAY_WIZARD_ENABLE:
    mp_display_wizard_enable.Attach(pSubject);
    break;
  case SUBJECT_ID_DOSING_FEED_TANK_LEVEL:
    mp_dosing_feed_tank_level.Attach(pSubject);
    break;
  case SUBJECT_ID_EFFICIENCY_ONE_HOUR_AVG:
    mp_efficiency_one_hour_avg.Attach(pSubject);
    break;
  case SUBJECT_ID_ENABLE_TEST_MODE:
    mp_enable_test_mode.Attach(pSubject);
    break;
  case SUBJECT_ID_ENERGY_CONSUMPTION_TODAY_LOG:
    mp_energy_consumption_today_log.Attach(pSubject);
    break;
  case SUBJECT_ID_ENERGY_CONSUMPTION_YESTERDAY_LOG:
    mp_energy_consumption_yesterday_log.Attach(pSubject);
    break;
  case SUBJECT_ID_ETHERNET_MAC_ADDRESS_HI:
    mp_ethernet_mac_address_hi.Attach(pSubject);
    break;
  case SUBJECT_ID_ETHERNET_MAC_ADDRESS_LO:
    mp_ethernet_mac_address_lo.Attach(pSubject);
    break;
  case SUBJECT_ID_EVENT_ACTION_TYPE_SIM:
    mp_event_action_type_sim.Attach(pSubject);
    break;
  case SUBJECT_ID_EVENT_CODE_SIM:
    mp_event_code_sim.Attach(pSubject);
    break;
  case SUBJECT_ID_EVENT_LOG_CLEAR_ID:
    mp_event_log_clear_id.Attach(pSubject);
    break;
  case SUBJECT_ID_EVENT_LOG_LATEST_ID:
    mp_event_log_latest_id.Attach(pSubject);
    break;
  case SUBJECT_ID_EVENT_RESET_TYPE_SIM:
    mp_event_reset_type_sim.Attach(pSubject);
    break;
  case SUBJECT_ID_EVENT_SIM_ACTIVATE:
    mp_event_sim_activate.Attach(pSubject);
    break;
  case SUBJECT_ID_FILL_SIMULATED_LOG_DATA:
    mp_fill_simulated_log_data.Attach(pSubject);
    break;
  case SUBJECT_ID_FIRST_PUMP_IN_PUMP_GROUP_2:
    mp_first_pump_in_pump_group_2.Attach(pSubject);
    break;
  case SUBJECT_ID_FLOAT_SWITCH_1_CNF:
    mp_float_switch_1_cnf.Attach(pSubject);
    break;
  case SUBJECT_ID_FLOAT_SWITCH_2_CNF:
    mp_float_switch_2_cnf.Attach(pSubject);
    break;
  case SUBJECT_ID_FLOAT_SWITCH_3_CNF:
    mp_float_switch_3_cnf.Attach(pSubject);
    break;
  case SUBJECT_ID_FLOAT_SWITCH_4_CNF:
    mp_float_switch_4_cnf.Attach(pSubject);
    break;
  case SUBJECT_ID_FLOAT_SWITCH_5_CNF:
    mp_float_switch_5_cnf.Attach(pSubject);
    break;
  case SUBJECT_ID_FLOAT_SWITCH_DI_STATUS:
    mp_float_switch_di_status.Attach(pSubject);
    break;
  case SUBJECT_ID_FLOAT_SWITCH_WATER_LEVEL:
    mp_float_switch_water_level.Attach(pSubject);
    break;
  case SUBJECT_ID_FLOW_QUALITY:
    mp_flow_quality.Attach(pSubject);
    break;
  case SUBJECT_ID_FOAM_START_LEVEL:
    mp_foam_start_level.Attach(pSubject);
    break;
  case SUBJECT_ID_GENI_BAUD_RATE_CONFIG:
    mp_geni_baud_rate_config.Attach(pSubject);
    break;
  case SUBJECT_ID_GENI_BAUD_RATE_SET:
    mp_geni_baud_rate_set.Attach(pSubject);
    break;
  case SUBJECT_ID_GENI_DUMMY_CLASS_11_PAR_1:
    mp_geni_dummy_class_11_par_1.Attach(pSubject);
    break;
  case SUBJECT_ID_GENI_DUMMY_CLASS_11_PAR_2:
    mp_geni_dummy_class_11_par_2.Attach(pSubject);
    break;
  case SUBJECT_ID_GENI_DUMMY_CLASS_11_PAR_3:
    mp_geni_dummy_class_11_par_3.Attach(pSubject);
    break;
  case SUBJECT_ID_GENI_DUMMY_DATA_POINT:
    mp_geni_dummy_data_point.Attach(pSubject);
    break;
  case SUBJECT_ID_GENI_MIN_REPLY_DELAY_CONFIG:
    mp_geni_min_reply_delay_config.Attach(pSubject);
    break;
  case SUBJECT_ID_GENI_MIN_REPLY_DELAY_SET:
    mp_geni_min_reply_delay_set.Attach(pSubject);
    break;
  case SUBJECT_ID_GENI_SETUP:
    mp_geni_setup.Attach(pSubject);
    break;
  case SUBJECT_ID_GENI_SLAVE_GROUP_ADDRESS:
    mp_geni_slave_group_address.Attach(pSubject);
    break;
  case SUBJECT_ID_GENI_SLAVE_UNIT_ADDRESS:
    mp_geni_slave_unit_address.Attach(pSubject);
    break;
  case SUBJECT_ID_GENI_UNIT_FAMILY:
    mp_geni_unit_family.Attach(pSubject);
    break;
  case SUBJECT_ID_GENI_UNIT_TYPE:
    mp_geni_unit_type.Attach(pSubject);
    break;
  case SUBJECT_ID_GENI_UNIT_VERSION:
    mp_geni_unit_version.Attach(pSubject);
    break;
  case SUBJECT_ID_GPRS_IP_ADDRESS:
    mp_gprs_ip_address.Attach(pSubject);
    break;
  case SUBJECT_ID_GSM_SETUP:
    mp_gsm_setup.Attach(pSubject);
    break;
  case SUBJECT_ID_GSM_STATE:
    mp_gsm_state.Attach(pSubject);
    break;
  case SUBJECT_ID_H2S_LEVEL_ACT:
    mp_h2s_level_act.Attach(pSubject);
    break;
  case SUBJECT_ID_H2S_LEVEL_TODAY:
    mp_h2s_level_today.Attach(pSubject);
    break;
  case SUBJECT_ID_H2S_LEVEL_YESTERDAY:
    mp_h2s_level_yesterday.Attach(pSubject);
    break;
  case SUBJECT_ID_INTERLOCK_OFF_REQUEST:
    mp_interlock_off_request.Attach(pSubject);
    break;
  case SUBJECT_ID_INTERLOCK_REQUEST:
    mp_interlock_request.Attach(pSubject);
    break;
  case SUBJECT_ID_INTERLOCK_TIMEOUT:
    mp_interlock_timeout.Attach(pSubject);
    break;
  case SUBJECT_ID_LATEST_VALUE_MOTOR_CURRENT_PUMP_1:
    mp_latest_value_motor_current_pump_1.Attach(pSubject);
    break;
  case SUBJECT_ID_LATEST_VALUE_MOTOR_CURRENT_PUMP_2:
    mp_latest_value_motor_current_pump_2.Attach(pSubject);
    break;
  case SUBJECT_ID_LATEST_VALUE_MOTOR_CURRENT_PUMP_3:
    mp_latest_value_motor_current_pump_3.Attach(pSubject);
    break;
  case SUBJECT_ID_LATEST_VALUE_MOTOR_CURRENT_PUMP_4:
    mp_latest_value_motor_current_pump_4.Attach(pSubject);
    break;
  case SUBJECT_ID_LATEST_VALUE_MOTOR_CURRENT_PUMP_5:
    mp_latest_value_motor_current_pump_5.Attach(pSubject);
    break;
  case SUBJECT_ID_LATEST_VALUE_MOTOR_CURRENT_PUMP_6:
    mp_latest_value_motor_current_pump_6.Attach(pSubject);
    break;
  case SUBJECT_ID_LOWEST_START_LEVEL_VARIATION:
    mp_lowest_start_level_variation.Attach(pSubject);
    break;
  case SUBJECT_ID_LOWEST_START_LEVEL_VARIATION_ENABLED:
    mp_lowest_start_level_variation_enabled.Attach(pSubject);
    break;
  case SUBJECT_ID_MEASURED_VALUE_OUTLET_PRESSURE:
    mp_measured_value_outlet_pressure.Attach(pSubject);
    break;
  case SUBJECT_ID_MEASURED_VALUE_USER_DEFINED_SOURCE_1:
    mp_measured_value_user_defined_source_1.Attach(pSubject);
    break;
  case SUBJECT_ID_MEASURED_VALUE_USER_DEFINED_SOURCE_2:
    mp_measured_value_user_defined_source_2.Attach(pSubject);
    break;
  case SUBJECT_ID_MEASURED_VALUE_USER_DEFINED_SOURCE_3:
    mp_measured_value_user_defined_source_3.Attach(pSubject);
    break;
  case SUBJECT_ID_MIXER_OPERATING_MODE:
    mp_mixer_operating_mode.Attach(pSubject);
    break;
  case SUBJECT_ID_MIXER_RUN_TIME:
    mp_mixer_run_time.Attach(pSubject);
    break;
  case SUBJECT_ID_MIXER_START_CNT:
    mp_mixer_start_cnt.Attach(pSubject);
    break;
  case SUBJECT_ID_MIXER_STARTS_PR_HOUR:
    mp_mixer_starts_pr_hour.Attach(pSubject);
    break;
  case SUBJECT_ID_MODEM_CTRL:
    mp_modem_ctrl.Attach(pSubject);
    break;
  case SUBJECT_ID_MP204_1_COS_PHI:
    mp_mp204_1_cos_phi.Attach(pSubject);
    break;
  case SUBJECT_ID_MP204_1_CURRENT_ASYMMETRY:
    mp_mp204_1_current_asymmetry.Attach(pSubject);
    break;
  case SUBJECT_ID_MP204_1_DEVICE_STATUS:
    mp_mp204_1_device_status.Attach(pSubject);
    break;
  case SUBJECT_ID_MP204_2_COS_PHI:
    mp_mp204_2_cos_phi.Attach(pSubject);
    break;
  case SUBJECT_ID_MP204_2_CURRENT_ASYMMETRY:
    mp_mp204_2_current_asymmetry.Attach(pSubject);
    break;
  case SUBJECT_ID_MP204_2_DEVICE_STATUS:
    mp_mp204_2_device_status.Attach(pSubject);
    break;
  case SUBJECT_ID_MP204_3_COS_PHI:
    mp_mp204_3_cos_phi.Attach(pSubject);
    break;
  case SUBJECT_ID_MP204_3_CURRENT_ASYMMETRY:
    mp_mp204_3_current_asymmetry.Attach(pSubject);
    break;
  case SUBJECT_ID_MP204_3_DEVICE_STATUS:
    mp_mp204_3_device_status.Attach(pSubject);
    break;
  case SUBJECT_ID_MP204_4_COS_PHI:
    mp_mp204_4_cos_phi.Attach(pSubject);
    break;
  case SUBJECT_ID_MP204_4_CURRENT_ASYMMETRY:
    mp_mp204_4_current_asymmetry.Attach(pSubject);
    break;
  case SUBJECT_ID_MP204_4_DEVICE_STATUS:
    mp_mp204_4_device_status.Attach(pSubject);
    break;
  case SUBJECT_ID_MP204_5_COS_PHI:
    mp_mp204_5_cos_phi.Attach(pSubject);
    break;
  case SUBJECT_ID_MP204_5_CURRENT_ASYMMETRY:
    mp_mp204_5_current_asymmetry.Attach(pSubject);
    break;
  case SUBJECT_ID_MP204_5_DEVICE_STATUS:
    mp_mp204_5_device_status.Attach(pSubject);
    break;
  case SUBJECT_ID_MP204_6_COS_PHI:
    mp_mp204_6_cos_phi.Attach(pSubject);
    break;
  case SUBJECT_ID_MP204_6_CURRENT_ASYMMETRY:
    mp_mp204_6_current_asymmetry.Attach(pSubject);
    break;
  case SUBJECT_ID_MP204_6_DEVICE_STATUS:
    mp_mp204_6_device_status.Attach(pSubject);
    break;
  case SUBJECT_ID_NO_OF_OVERFLOWS:
    mp_no_of_overflows.Attach(pSubject);
    break;
  case SUBJECT_ID_OPERATION_MODE_ACTUAL_PUMP_1:
    mp_operation_mode_actual_pump_1.Attach(pSubject);
    break;
  case SUBJECT_ID_OPERATION_MODE_ACTUAL_PUMP_2:
    mp_operation_mode_actual_pump_2.Attach(pSubject);
    break;
  case SUBJECT_ID_OPERATION_MODE_ACTUAL_PUMP_3:
    mp_operation_mode_actual_pump_3.Attach(pSubject);
    break;
  case SUBJECT_ID_OPERATION_MODE_ACTUAL_PUMP_4:
    mp_operation_mode_actual_pump_4.Attach(pSubject);
    break;
  case SUBJECT_ID_OPERATION_MODE_ACTUAL_PUMP_5:
    mp_operation_mode_actual_pump_5.Attach(pSubject);
    break;
  case SUBJECT_ID_OPERATION_MODE_ACTUAL_PUMP_6:
    mp_operation_mode_actual_pump_6.Attach(pSubject);
    break;
  case SUBJECT_ID_OPERATION_MODE_REQ_PUMP_1:
    mp_operation_mode_req_pump_1.Attach(pSubject);
    break;
  case SUBJECT_ID_OPERATION_MODE_REQ_PUMP_2:
    mp_operation_mode_req_pump_2.Attach(pSubject);
    break;
  case SUBJECT_ID_OPERATION_MODE_REQ_PUMP_3:
    mp_operation_mode_req_pump_3.Attach(pSubject);
    break;
  case SUBJECT_ID_OPERATION_MODE_REQ_PUMP_4:
    mp_operation_mode_req_pump_4.Attach(pSubject);
    break;
  case SUBJECT_ID_OPERATION_MODE_REQ_PUMP_5:
    mp_operation_mode_req_pump_5.Attach(pSubject);
    break;
  case SUBJECT_ID_OPERATION_MODE_REQ_PUMP_6:
    mp_operation_mode_req_pump_6.Attach(pSubject);
    break;
  case SUBJECT_ID_OVERFLOW_COUNT_TODAY_LOG:
    mp_overflow_count_today_log.Attach(pSubject);
    break;
  case SUBJECT_ID_OVERFLOW_COUNT_YESTERDAY_LOG:
    mp_overflow_count_yesterday_log.Attach(pSubject);
    break;
  case SUBJECT_ID_OVERFLOW_TIME:
    mp_overflow_time.Attach(pSubject);
    break;
  case SUBJECT_ID_OVERFLOW_TIME_TODAY_LOG:
    mp_overflow_time_today_log.Attach(pSubject);
    break;
  case SUBJECT_ID_OVERFLOW_TIME_YESTERDAY_LOG:
    mp_overflow_time_yesterday_log.Attach(pSubject);
    break;
  case SUBJECT_ID_OVERFLOW_VOLUME_LITRE_FOR_LOG:
    mp_overflow_volume_litre_for_log.Attach(pSubject);
    break;
  case SUBJECT_ID_OVERFLOW_VOLUME_TODAY_LOG:
    mp_overflow_volume_today_log.Attach(pSubject);
    break;
  case SUBJECT_ID_OVERFLOW_VOLUME_YESTERDAY_LOG:
    mp_overflow_volume_yesterday_log.Attach(pSubject);
    break;
  case SUBJECT_ID_PIT_DEPTH:
    mp_pit_depth.Attach(pSubject);
    break;
  case SUBJECT_ID_PIT_LEVEL_CTRL_TYPE:
    mp_pit_level_ctrl_type.Attach(pSubject);
    break;
  case SUBJECT_ID_PIT_LEVEL_SIM_ENABLED:
    mp_pit_level_sim_enabled.Attach(pSubject);
    break;
  case SUBJECT_ID_POWER_ON_CNT:
    mp_power_on_cnt.Attach(pSubject);
    break;
  case SUBJECT_ID_PRODUCTION_REV_DATE_CODE:
    mp_production_rev_date_code.Attach(pSubject);
    break;
  case SUBJECT_ID_PRODUCTION_SERIAL_NO:
    mp_production_serial_no.Attach(pSubject);
    break;
  case SUBJECT_ID_PRODUCTION_TYPE_CODE:
    mp_production_type_code.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_1_ALARM_STATUS_1:
    mp_pump_1_alarm_status_1.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_1_ALARM_STATUS_2:
    mp_pump_1_alarm_status_2.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_1_ALARM_STATUS_3:
    mp_pump_1_alarm_status_3.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_1_ALARM_STATUS_4:
    mp_pump_1_alarm_status_4.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_1_CALCULATED_FLOW_FILTERED:
    mp_pump_1_calculated_flow_filtered.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_1_CALCULATED_FLOW_RAW:
    mp_pump_1_calculated_flow_raw.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_1_CONTROL_SOURCE:
    mp_pump_1_control_source.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_1_ENERGY:
    mp_pump_1_energy.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_1_INSULATION_RESISTANCE:
    mp_pump_1_insulation_resistance.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_1_IO111_DEVICE_STATUS:
    mp_pump_1_io111_device_status.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_1_LATEST_RUNTIME:
    mp_pump_1_latest_runtime.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_1_MAINS_VOLTAGE:
    mp_pump_1_mains_voltage.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_1_NO_OF_STARTS_TODAY_LOG:
    mp_pump_1_no_of_starts_today_log.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_1_NO_OF_STARTS_YESTERDAY_LOG:
    mp_pump_1_no_of_starts_yesterday_log.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_1_OPERATION_TIME_TODAY_LOG:
    mp_pump_1_operation_time_today_log.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_1_OPERATION_TIME_YESTERDAY_LOG:
    mp_pump_1_operation_time_yesterday_log.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_1_POWER:
    mp_pump_1_power.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_1_RUN_TIME:
    mp_pump_1_run_time.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_1_RUN_TIME_TO_SERVICE:
    mp_pump_1_run_time_to_service.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_1_START_CNT:
    mp_pump_1_start_cnt.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_1_STARTS_PR_HOUR:
    mp_pump_1_starts_pr_hour.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_1_TEMPERATURE:
    mp_pump_1_temperature.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_1_WARNING_STATUS_1:
    mp_pump_1_warning_status_1.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_1_WARNING_STATUS_2:
    mp_pump_1_warning_status_2.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_1_WARNING_STATUS_3:
    mp_pump_1_warning_status_3.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_1_WARNING_STATUS_4:
    mp_pump_1_warning_status_4.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_2_ALARM_STATUS_1:
    mp_pump_2_alarm_status_1.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_2_ALARM_STATUS_2:
    mp_pump_2_alarm_status_2.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_2_ALARM_STATUS_3:
    mp_pump_2_alarm_status_3.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_2_ALARM_STATUS_4:
    mp_pump_2_alarm_status_4.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_2_CALCULATED_FLOW_FILTERED:
    mp_pump_2_calculated_flow_filtered.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_2_CALCULATED_FLOW_RAW:
    mp_pump_2_calculated_flow_raw.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_2_CONTROL_SOURCE:
    mp_pump_2_control_source.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_2_ENERGY:
    mp_pump_2_energy.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_2_INSULATION_RESISTANCE:
    mp_pump_2_insulation_resistance.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_2_IO111_DEVICE_STATUS:
    mp_pump_2_io111_device_status.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_2_LATEST_RUNTIME:
    mp_pump_2_latest_runtime.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_2_MAINS_VOLTAGE:
    mp_pump_2_mains_voltage.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_2_NO_OF_STARTS_TODAY_LOG:
    mp_pump_2_no_of_starts_today_log.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_2_NO_OF_STARTS_YESTERDAY_LOG:
    mp_pump_2_no_of_starts_yesterday_log.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_2_OPERATION_TIME_TODAY_LOG:
    mp_pump_2_operation_time_today_log.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_2_OPERATION_TIME_YESTERDAY_LOG:
    mp_pump_2_operation_time_yesterday_log.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_2_POWER:
    mp_pump_2_power.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_2_RUN_TIME:
    mp_pump_2_run_time.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_2_RUN_TIME_TO_SERVICE:
    mp_pump_2_run_time_to_service.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_2_START_CNT:
    mp_pump_2_start_cnt.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_2_STARTS_PR_HOUR:
    mp_pump_2_starts_pr_hour.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_2_TEMPERATURE:
    mp_pump_2_temperature.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_2_WARNING_STATUS_1:
    mp_pump_2_warning_status_1.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_2_WARNING_STATUS_2:
    mp_pump_2_warning_status_2.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_2_WARNING_STATUS_3:
    mp_pump_2_warning_status_3.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_2_WARNING_STATUS_4:
    mp_pump_2_warning_status_4.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_3_ALARM_STATUS_1:
    mp_pump_3_alarm_status_1.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_3_ALARM_STATUS_2:
    mp_pump_3_alarm_status_2.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_3_ALARM_STATUS_3:
    mp_pump_3_alarm_status_3.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_3_ALARM_STATUS_4:
    mp_pump_3_alarm_status_4.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_3_CALCULATED_FLOW_FILTERED:
    mp_pump_3_calculated_flow_filtered.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_3_CALCULATED_FLOW_RAW:
    mp_pump_3_calculated_flow_raw.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_3_CONTROL_SOURCE:
    mp_pump_3_control_source.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_3_ENERGY:
    mp_pump_3_energy.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_3_INSULATION_RESISTANCE:
    mp_pump_3_insulation_resistance.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_3_IO111_DEVICE_STATUS:
    mp_pump_3_io111_device_status.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_3_LATEST_RUNTIME:
    mp_pump_3_latest_runtime.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_3_MAINS_VOLTAGE:
    mp_pump_3_mains_voltage.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_3_NO_OF_STARTS_TODAY_LOG:
    mp_pump_3_no_of_starts_today_log.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_3_NO_OF_STARTS_YESTERDAY_LOG:
    mp_pump_3_no_of_starts_yesterday_log.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_3_OPERATION_TIME_TODAY_LOG:
    mp_pump_3_operation_time_today_log.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_3_OPERATION_TIME_YESTERDAY_LOG:
    mp_pump_3_operation_time_yesterday_log.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_3_POWER:
    mp_pump_3_power.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_3_RUN_TIME:
    mp_pump_3_run_time.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_3_RUN_TIME_TO_SERVICE:
    mp_pump_3_run_time_to_service.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_3_START_CNT:
    mp_pump_3_start_cnt.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_3_STARTS_PR_HOUR:
    mp_pump_3_starts_pr_hour.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_3_TEMPERATURE:
    mp_pump_3_temperature.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_3_WARNING_STATUS_1:
    mp_pump_3_warning_status_1.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_3_WARNING_STATUS_2:
    mp_pump_3_warning_status_2.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_3_WARNING_STATUS_3:
    mp_pump_3_warning_status_3.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_3_WARNING_STATUS_4:
    mp_pump_3_warning_status_4.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_4_ALARM_STATUS_1:
    mp_pump_4_alarm_status_1.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_4_ALARM_STATUS_2:
    mp_pump_4_alarm_status_2.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_4_ALARM_STATUS_3:
    mp_pump_4_alarm_status_3.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_4_ALARM_STATUS_4:
    mp_pump_4_alarm_status_4.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_4_CALCULATED_FLOW_FILTERED:
    mp_pump_4_calculated_flow_filtered.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_4_CALCULATED_FLOW_RAW:
    mp_pump_4_calculated_flow_raw.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_4_CONTROL_SOURCE:
    mp_pump_4_control_source.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_4_ENERGY:
    mp_pump_4_energy.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_4_INSULATION_RESISTANCE:
    mp_pump_4_insulation_resistance.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_4_IO111_DEVICE_STATUS:
    mp_pump_4_io111_device_status.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_4_LATEST_RUNTIME:
    mp_pump_4_latest_runtime.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_4_MAINS_VOLTAGE:
    mp_pump_4_mains_voltage.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_4_NO_OF_STARTS_TODAY_LOG:
    mp_pump_4_no_of_starts_today_log.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_4_NO_OF_STARTS_YESTERDAY_LOG:
    mp_pump_4_no_of_starts_yesterday_log.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_4_OPERATION_TIME_TODAY_LOG:
    mp_pump_4_operation_time_today_log.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_4_OPERATION_TIME_YESTERDAY_LOG:
    mp_pump_4_operation_time_yesterday_log.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_4_POWER:
    mp_pump_4_power.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_4_RUN_TIME:
    mp_pump_4_run_time.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_4_RUN_TIME_TO_SERVICE:
    mp_pump_4_run_time_to_service.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_4_START_CNT:
    mp_pump_4_start_cnt.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_4_STARTS_PR_HOUR:
    mp_pump_4_starts_pr_hour.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_4_TEMPERATURE:
    mp_pump_4_temperature.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_4_WARNING_STATUS_1:
    mp_pump_4_warning_status_1.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_4_WARNING_STATUS_2:
    mp_pump_4_warning_status_2.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_4_WARNING_STATUS_3:
    mp_pump_4_warning_status_3.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_4_WARNING_STATUS_4:
    mp_pump_4_warning_status_4.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_5_ALARM_STATUS_1:
    mp_pump_5_alarm_status_1.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_5_ALARM_STATUS_2:
    mp_pump_5_alarm_status_2.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_5_ALARM_STATUS_3:
    mp_pump_5_alarm_status_3.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_5_ALARM_STATUS_4:
    mp_pump_5_alarm_status_4.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_5_CALCULATED_FLOW_FILTERED:
    mp_pump_5_calculated_flow_filtered.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_5_CALCULATED_FLOW_RAW:
    mp_pump_5_calculated_flow_raw.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_5_CONTROL_SOURCE:
    mp_pump_5_control_source.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_5_ENERGY:
    mp_pump_5_energy.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_5_INSULATION_RESISTANCE:
    mp_pump_5_insulation_resistance.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_5_IO111_DEVICE_STATUS:
    mp_pump_5_io111_device_status.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_5_LATEST_RUNTIME:
    mp_pump_5_latest_runtime.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_5_MAINS_VOLTAGE:
    mp_pump_5_mains_voltage.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_5_NO_OF_STARTS_TODAY_LOG:
    mp_pump_5_no_of_starts_today_log.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_5_NO_OF_STARTS_YESTERDAY_LOG:
    mp_pump_5_no_of_starts_yesterday_log.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_5_OPERATION_TIME_TODAY_LOG:
    mp_pump_5_operation_time_today_log.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_5_OPERATION_TIME_YESTERDAY_LOG:
    mp_pump_5_operation_time_yesterday_log.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_5_POWER:
    mp_pump_5_power.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_5_RUN_TIME:
    mp_pump_5_run_time.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_5_RUN_TIME_TO_SERVICE:
    mp_pump_5_run_time_to_service.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_5_START_CNT:
    mp_pump_5_start_cnt.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_5_STARTS_PR_HOUR:
    mp_pump_5_starts_pr_hour.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_5_TEMPERATURE:
    mp_pump_5_temperature.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_5_WARNING_STATUS_1:
    mp_pump_5_warning_status_1.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_5_WARNING_STATUS_2:
    mp_pump_5_warning_status_2.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_5_WARNING_STATUS_3:
    mp_pump_5_warning_status_3.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_5_WARNING_STATUS_4:
    mp_pump_5_warning_status_4.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_6_ALARM_STATUS_1:
    mp_pump_6_alarm_status_1.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_6_ALARM_STATUS_2:
    mp_pump_6_alarm_status_2.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_6_ALARM_STATUS_3:
    mp_pump_6_alarm_status_3.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_6_ALARM_STATUS_4:
    mp_pump_6_alarm_status_4.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_6_CALCULATED_FLOW_FILTERED:
    mp_pump_6_calculated_flow_filtered.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_6_CALCULATED_FLOW_RAW:
    mp_pump_6_calculated_flow_raw.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_6_CONTROL_SOURCE:
    mp_pump_6_control_source.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_6_ENERGY:
    mp_pump_6_energy.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_6_INSULATION_RESISTANCE:
    mp_pump_6_insulation_resistance.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_6_IO111_DEVICE_STATUS:
    mp_pump_6_io111_device_status.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_6_LATEST_RUNTIME:
    mp_pump_6_latest_runtime.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_6_MAINS_VOLTAGE:
    mp_pump_6_mains_voltage.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_6_NO_OF_STARTS_TODAY_LOG:
    mp_pump_6_no_of_starts_today_log.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_6_NO_OF_STARTS_YESTERDAY_LOG:
    mp_pump_6_no_of_starts_yesterday_log.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_6_OPERATION_TIME_TODAY_LOG:
    mp_pump_6_operation_time_today_log.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_6_OPERATION_TIME_YESTERDAY_LOG:
    mp_pump_6_operation_time_yesterday_log.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_6_POWER:
    mp_pump_6_power.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_6_RUN_TIME:
    mp_pump_6_run_time.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_6_RUN_TIME_TO_SERVICE:
    mp_pump_6_run_time_to_service.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_6_START_CNT:
    mp_pump_6_start_cnt.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_6_STARTS_PR_HOUR:
    mp_pump_6_starts_pr_hour.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_6_TEMPERATURE:
    mp_pump_6_temperature.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_6_WARNING_STATUS_1:
    mp_pump_6_warning_status_1.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_6_WARNING_STATUS_2:
    mp_pump_6_warning_status_2.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_6_WARNING_STATUS_3:
    mp_pump_6_warning_status_3.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_6_WARNING_STATUS_4:
    mp_pump_6_warning_status_4.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_FAULT_STATUS:
    mp_pump_fault_status.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_GROUP_1_ALARM_MOTOR_CURRENT_OVERLOAD_ALARM_CONF:
    mp_pump_group_1_alarm_motor_current_overload_alarm_conf.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_GROUP_1_ALARM_MOTOR_CURRENT_UNDERLOAD_ALARM_CONF:
    mp_pump_group_1_alarm_motor_current_underload_alarm_conf.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_GROUP_2_ALARM_MOTOR_CURRENT_OVERLOAD_ALARM_CONF:
    mp_pump_group_2_alarm_motor_current_overload_alarm_conf.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_GROUP_2_ALARM_MOTOR_CURRENT_UNDERLOAD_ALARM_CONF:
    mp_pump_group_2_alarm_motor_current_underload_alarm_conf.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_MONITORING_FAULT:
    mp_pump_monitoring_fault.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_RUN_TIME_0_PUMPS:
    mp_pump_run_time_0_pumps.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_RUN_TIME_0_PUMPS_TODAY_LOG:
    mp_pump_run_time_0_pumps_today_log.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_RUN_TIME_0_PUMPS_YESTERDAY_LOG:
    mp_pump_run_time_0_pumps_yesterday_log.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_RUN_TIME_1_PUMPS:
    mp_pump_run_time_1_pumps.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_RUN_TIME_1_PUMPS_TODAY_LOG:
    mp_pump_run_time_1_pumps_today_log.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_RUN_TIME_1_PUMPS_YESTERDAY_LOG:
    mp_pump_run_time_1_pumps_yesterday_log.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_RUN_TIME_2_PUMPS:
    mp_pump_run_time_2_pumps.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_RUN_TIME_2_PUMPS_TODAY_LOG:
    mp_pump_run_time_2_pumps_today_log.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_RUN_TIME_2_PUMPS_YESTERDAY_LOG:
    mp_pump_run_time_2_pumps_yesterday_log.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_RUN_TIME_3_PUMPS:
    mp_pump_run_time_3_pumps.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_RUN_TIME_3_PUMPS_TODAY_LOG:
    mp_pump_run_time_3_pumps_today_log.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_RUN_TIME_3_PUMPS_YESTERDAY_LOG:
    mp_pump_run_time_3_pumps_yesterday_log.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_RUN_TIME_4_PUMPS:
    mp_pump_run_time_4_pumps.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_RUN_TIME_4_PUMPS_TODAY_LOG:
    mp_pump_run_time_4_pumps_today_log.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_RUN_TIME_4_PUMPS_YESTERDAY_LOG:
    mp_pump_run_time_4_pumps_yesterday_log.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_RUN_TIME_5_PUMPS:
    mp_pump_run_time_5_pumps.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_RUN_TIME_5_PUMPS_TODAY_LOG:
    mp_pump_run_time_5_pumps_today_log.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_RUN_TIME_5_PUMPS_YESTERDAY_LOG:
    mp_pump_run_time_5_pumps_yesterday_log.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_RUN_TIME_6_PUMPS:
    mp_pump_run_time_6_pumps.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_RUN_TIME_6_PUMPS_TODAY_LOG:
    mp_pump_run_time_6_pumps_today_log.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMP_RUN_TIME_6_PUMPS_YESTERDAY_LOG:
    mp_pump_run_time_6_pumps_yesterday_log.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMPED_VOLUME_LITRE_FOR_LOG:
    mp_pumped_volume_litre_for_log.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMPED_VOLUME_TODAY_LOG:
    mp_pumped_volume_today_log.Attach(pSubject);
    break;
  case SUBJECT_ID_PUMPED_VOLUME_YESTERDAY_LOG:
    mp_pumped_volume_yesterday_log.Attach(pSubject);
    break;
  case SUBJECT_ID_RELAY_FUNC_OUTPUT_PUMP_1:
    mp_relay_func_output_pump_1.Attach(pSubject);
    break;
  case SUBJECT_ID_RELAY_FUNC_OUTPUT_PUMP_2:
    mp_relay_func_output_pump_2.Attach(pSubject);
    break;
  case SUBJECT_ID_RELAY_FUNC_OUTPUT_PUMP_3:
    mp_relay_func_output_pump_3.Attach(pSubject);
    break;
  case SUBJECT_ID_RELAY_FUNC_OUTPUT_PUMP_4:
    mp_relay_func_output_pump_4.Attach(pSubject);
    break;
  case SUBJECT_ID_RELAY_FUNC_OUTPUT_PUMP_5:
    mp_relay_func_output_pump_5.Attach(pSubject);
    break;
  case SUBJECT_ID_RELAY_FUNC_OUTPUT_PUMP_6:
    mp_relay_func_output_pump_6.Attach(pSubject);
    break;
  case SUBJECT_ID_RELAY_STATUS_RELAY_FUNC_MIXER:
    mp_relay_status_relay_func_mixer.Attach(pSubject);
    break;
  case SUBJECT_ID_RELAY_STATUS_RELAY_FUNC_RELAY_CUSTOM:
    mp_relay_status_relay_func_relay_custom.Attach(pSubject);
    break;
  case SUBJECT_ID_RELAY_STATUS_RELAY_FUNC_USER_IO_1:
    mp_relay_status_relay_func_user_io_1.Attach(pSubject);
    break;
  case SUBJECT_ID_RELAY_STATUS_RELAY_FUNC_USER_IO_2:
    mp_relay_status_relay_func_user_io_2.Attach(pSubject);
    break;
  case SUBJECT_ID_RELAY_STATUS_RELAY_FUNC_USER_IO_3:
    mp_relay_status_relay_func_user_io_3.Attach(pSubject);
    break;
  case SUBJECT_ID_RELAY_STATUS_RELAY_FUNC_USER_IO_4:
    mp_relay_status_relay_func_user_io_4.Attach(pSubject);
    break;
  case SUBJECT_ID_RELAY_STATUS_RELAY_FUNC_USER_IO_5:
    mp_relay_status_relay_func_user_io_5.Attach(pSubject);
    break;
  case SUBJECT_ID_RELAY_STATUS_RELAY_FUNC_USER_IO_6:
    mp_relay_status_relay_func_user_io_6.Attach(pSubject);
    break;
  case SUBJECT_ID_RELAY_STATUS_RELAY_FUNC_USER_IO_7:
    mp_relay_status_relay_func_user_io_7.Attach(pSubject);
    break;
  case SUBJECT_ID_RELAY_STATUS_RELAY_FUNC_USER_IO_8:
    mp_relay_status_relay_func_user_io_8.Attach(pSubject);
    break;
  case SUBJECT_ID_RESET_EVENT_LOG:
    mp_reset_event_log.Attach(pSubject);
    break;
  case SUBJECT_ID_RESET_USD_CNT_1_EVENT:
    mp_reset_usd_cnt_1_event.Attach(pSubject);
    break;
  case SUBJECT_ID_RESET_USD_CNT_2_EVENT:
    mp_reset_usd_cnt_2_event.Attach(pSubject);
    break;
  case SUBJECT_ID_RESET_USD_CNT_3_EVENT:
    mp_reset_usd_cnt_3_event.Attach(pSubject);
    break;
  case SUBJECT_ID_RESULTING_VALUE_MOTOR_CURRENT_PUMP_1:
    mp_resulting_value_motor_current_pump_1.Attach(pSubject);
    break;
  case SUBJECT_ID_RESULTING_VALUE_MOTOR_CURRENT_PUMP_2:
    mp_resulting_value_motor_current_pump_2.Attach(pSubject);
    break;
  case SUBJECT_ID_RESULTING_VALUE_MOTOR_CURRENT_PUMP_3:
    mp_resulting_value_motor_current_pump_3.Attach(pSubject);
    break;
  case SUBJECT_ID_RESULTING_VALUE_MOTOR_CURRENT_PUMP_4:
    mp_resulting_value_motor_current_pump_4.Attach(pSubject);
    break;
  case SUBJECT_ID_RESULTING_VALUE_MOTOR_CURRENT_PUMP_5:
    mp_resulting_value_motor_current_pump_5.Attach(pSubject);
    break;
  case SUBJECT_ID_RESULTING_VALUE_MOTOR_CURRENT_PUMP_6:
    mp_resulting_value_motor_current_pump_6.Attach(pSubject);
    break;
  case SUBJECT_ID_RESULTING_VALUE_WATER_IN_OIL_PUMP_1:
    mp_resulting_value_water_in_oil_pump_1.Attach(pSubject);
    break;
  case SUBJECT_ID_RESULTING_VALUE_WATER_IN_OIL_PUMP_2:
    mp_resulting_value_water_in_oil_pump_2.Attach(pSubject);
    break;
  case SUBJECT_ID_RESULTING_VALUE_WATER_IN_OIL_PUMP_3:
    mp_resulting_value_water_in_oil_pump_3.Attach(pSubject);
    break;
  case SUBJECT_ID_RESULTING_VALUE_WATER_IN_OIL_PUMP_4:
    mp_resulting_value_water_in_oil_pump_4.Attach(pSubject);
    break;
  case SUBJECT_ID_RESULTING_VALUE_WATER_IN_OIL_PUMP_5:
    mp_resulting_value_water_in_oil_pump_5.Attach(pSubject);
    break;
  case SUBJECT_ID_RESULTING_VALUE_WATER_IN_OIL_PUMP_6:
    mp_resulting_value_water_in_oil_pump_6.Attach(pSubject);
    break;
  case SUBJECT_ID_RTC_DAY_OF_MONTH:
    mp_rtc_day_of_month.Attach(pSubject);
    break;
  case SUBJECT_ID_RTC_DAY_OF_WEEK:
    mp_rtc_day_of_week.Attach(pSubject);
    break;
  case SUBJECT_ID_RTC_DAY_SET:
    mp_rtc_day_set.Attach(pSubject);
    break;
  case SUBJECT_ID_RTC_HOUR:
    mp_rtc_hour.Attach(pSubject);
    break;
  case SUBJECT_ID_RTC_HOUR_SET:
    mp_rtc_hour_set.Attach(pSubject);
    break;
  case SUBJECT_ID_RTC_MINUTE:
    mp_rtc_minute.Attach(pSubject);
    break;
  case SUBJECT_ID_RTC_MINUTE_SET:
    mp_rtc_minute_set.Attach(pSubject);
    break;
  case SUBJECT_ID_RTC_MONTH_OF_YEAR:
    mp_rtc_month_of_year.Attach(pSubject);
    break;
  case SUBJECT_ID_RTC_MONTH_SET:
    mp_rtc_month_set.Attach(pSubject);
    break;
  case SUBJECT_ID_RTC_SECOND:
    mp_rtc_second.Attach(pSubject);
    break;
  case SUBJECT_ID_RTC_SECOND_SET:
    mp_rtc_second_set.Attach(pSubject);
    break;
  case SUBJECT_ID_RTC_SECONDS_SINCE_1970_ACT:
    mp_rtc_seconds_since_1970_act.Attach(pSubject);
    break;
  case SUBJECT_ID_RTC_SECONDS_SINCE_1970_SET:
    mp_rtc_seconds_since_1970_set.Attach(pSubject);
    break;
  case SUBJECT_ID_RTC_USE_NEW_TIME_EVENT:
    mp_rtc_use_new_time_event.Attach(pSubject);
    break;
  case SUBJECT_ID_RTC_YEAR:
    mp_rtc_year.Attach(pSubject);
    break;
  case SUBJECT_ID_RTC_YEAR_SET:
    mp_rtc_year_set.Attach(pSubject);
    break;
  case SUBJECT_ID_SCADA_CALLBACK_TEST_EVENT:
    mp_scada_callback_test_event.Attach(pSubject);
    break;
  case SUBJECT_ID_SCADA_PIN_CODE:
    mp_scada_pin_code.Attach(pSubject);
    break;
  case SUBJECT_ID_SCADA_PIN_CODE_ENABLED:
    mp_scada_pin_code_enabled.Attach(pSubject);
    break;
  case SUBJECT_ID_SERVICE_MODE_ENABLED:
    mp_service_mode_enabled.Attach(pSubject);
    break;
  case SUBJECT_ID_SET_DOSING_REF:
    mp_set_dosing_ref.Attach(pSubject);
    break;
  case SUBJECT_ID_SIGNAL_LEVEL_ACT_GENI:
    mp_signal_level_act_geni.Attach(pSubject);
    break;
  case SUBJECT_ID_SIGNAL_LEVEL_AVG_GENI:
    mp_signal_level_avg_geni.Attach(pSubject);
    break;
  case SUBJECT_ID_SIM_CARD_STATUS:
    mp_sim_card_status.Attach(pSubject);
    break;
  case SUBJECT_ID_SMS_OUT_SEQ_NUMBER:
    mp_sms_out_seq_number.Attach(pSubject);
    break;
  case SUBJECT_ID_SMS_SENT_ID:
    mp_sms_sent_id.Attach(pSubject);
    break;
  case SUBJECT_ID_START_LEVEL_PUMP_1:
    mp_start_level_pump_1.Attach(pSubject);
    break;
  case SUBJECT_ID_START_LEVEL_PUMP_2:
    mp_start_level_pump_2.Attach(pSubject);
    break;
  case SUBJECT_ID_START_LEVEL_PUMP_3:
    mp_start_level_pump_3.Attach(pSubject);
    break;
  case SUBJECT_ID_START_LEVEL_PUMP_4:
    mp_start_level_pump_4.Attach(pSubject);
    break;
  case SUBJECT_ID_START_LEVEL_PUMP_5:
    mp_start_level_pump_5.Attach(pSubject);
    break;
  case SUBJECT_ID_START_LEVEL_PUMP_6:
    mp_start_level_pump_6.Attach(pSubject);
    break;
  case SUBJECT_ID_STATUS_LED_GREEN_STATE:
    mp_status_led_green_state.Attach(pSubject);
    break;
  case SUBJECT_ID_STATUS_LED_RED_STATE:
    mp_status_led_red_state.Attach(pSubject);
    break;
  case SUBJECT_ID_STOP_LEVEL_PUMP_1:
    mp_stop_level_pump_1.Attach(pSubject);
    break;
  case SUBJECT_ID_STOP_LEVEL_PUMP_2:
    mp_stop_level_pump_2.Attach(pSubject);
    break;
  case SUBJECT_ID_STOP_LEVEL_PUMP_3:
    mp_stop_level_pump_3.Attach(pSubject);
    break;
  case SUBJECT_ID_STOP_LEVEL_PUMP_4:
    mp_stop_level_pump_4.Attach(pSubject);
    break;
  case SUBJECT_ID_STOP_LEVEL_PUMP_5:
    mp_stop_level_pump_5.Attach(pSubject);
    break;
  case SUBJECT_ID_STOP_LEVEL_PUMP_6:
    mp_stop_level_pump_6.Attach(pSubject);
    break;
  case SUBJECT_ID_SURFACE_LEVEL:
    mp_surface_level.Attach(pSubject);
    break;
  case SUBJECT_ID_SYS_ALARM_DRY_RUNNING_ALARM_CONF:
    mp_sys_alarm_dry_running_alarm_conf.Attach(pSubject);
    break;
  case SUBJECT_ID_SYS_ALARM_HIGH_LEVEL_ALARM_CONF:
    mp_sys_alarm_high_level_alarm_conf.Attach(pSubject);
    break;
  case SUBJECT_ID_SYS_ALARM_LEVEL_ALARM_CONF:
    mp_sys_alarm_level_alarm_conf.Attach(pSubject);
    break;
  case SUBJECT_ID_SYS_ALARM_OVERFLOW_ALARM_CONF:
    mp_sys_alarm_overflow_alarm_conf.Attach(pSubject);
    break;
  case SUBJECT_ID_SYSTEM_ALARM_STATUS_1:
    mp_system_alarm_status_1.Attach(pSubject);
    break;
  case SUBJECT_ID_SYSTEM_ALARM_STATUS_2:
    mp_system_alarm_status_2.Attach(pSubject);
    break;
  case SUBJECT_ID_SYSTEM_ALARM_STATUS_3:
    mp_system_alarm_status_3.Attach(pSubject);
    break;
  case SUBJECT_ID_SYSTEM_FLOW:
    mp_system_flow.Attach(pSubject);
    break;
  case SUBJECT_ID_SYSTEM_POWER:
    mp_system_power.Attach(pSubject);
    break;
  case SUBJECT_ID_SYSTEM_RUN_TIME:
    mp_system_run_time.Attach(pSubject);
    break;
  case SUBJECT_ID_SYSTEM_WARNING_STATUS_1:
    mp_system_warning_status_1.Attach(pSubject);
    break;
  case SUBJECT_ID_SYSTEM_WARNING_STATUS_2:
    mp_system_warning_status_2.Attach(pSubject);
    break;
  case SUBJECT_ID_SYSTEM_WARNING_STATUS_3:
    mp_system_warning_status_3.Attach(pSubject);
    break;
  case SUBJECT_ID_TODAY_USER_DEFINED_COUNTER_1:
    mp_today_user_defined_counter_1.Attach(pSubject);
    break;
  case SUBJECT_ID_TODAY_USER_DEFINED_COUNTER_2:
    mp_today_user_defined_counter_2.Attach(pSubject);
    break;
  case SUBJECT_ID_TODAY_USER_DEFINED_COUNTER_3:
    mp_today_user_defined_counter_3.Attach(pSubject);
    break;
  case SUBJECT_ID_TOTAL_ENERGY_KWH_FOR_LOG:
    mp_total_energy_kwh_for_log.Attach(pSubject);
    break;
  case SUBJECT_ID_TOTAL_USD_CNT_1:
    mp_total_usd_cnt_1.Attach(pSubject);
    break;
  case SUBJECT_ID_TOTAL_USD_CNT_2:
    mp_total_usd_cnt_2.Attach(pSubject);
    break;
  case SUBJECT_ID_TOTAL_USD_CNT_3:
    mp_total_usd_cnt_3.Attach(pSubject);
    break;
  case SUBJECT_ID_UPS_VOLTAGE_ACT:
    mp_ups_voltage_act.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_1_ENERGY_TEST_START_TEST:
    mp_vfd_1_energy_test_start_test.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_1_FIXED_FREQUENCY:
    mp_vfd_1_fixed_frequency.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_1_INSTALLED:
    mp_vfd_1_installed.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_1_OUTPUT_FREQUENCY:
    mp_vfd_1_output_frequency.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_1_PID_AI_FEEDBACK:
    mp_vfd_1_pid_ai_feedback.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_1_PID_AI_SETPOINT:
    mp_vfd_1_pid_ai_setpoint.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_1_PID_FIXED_SETPOINT:
    mp_vfd_1_pid_fixed_setpoint.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_1_PID_SETPOINT_TYPE:
    mp_vfd_1_pid_setpoint_type.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_1_RUN_MODE:
    mp_vfd_1_run_mode.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_1_STATE:
    mp_vfd_1_state.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_2_ENERGY_TEST_START_TEST:
    mp_vfd_2_energy_test_start_test.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_2_FIXED_FREQUENCY:
    mp_vfd_2_fixed_frequency.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_2_INSTALLED:
    mp_vfd_2_installed.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_2_OUTPUT_FREQUENCY:
    mp_vfd_2_output_frequency.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_2_PID_AI_FEEDBACK:
    mp_vfd_2_pid_ai_feedback.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_2_PID_AI_SETPOINT:
    mp_vfd_2_pid_ai_setpoint.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_2_PID_FIXED_SETPOINT:
    mp_vfd_2_pid_fixed_setpoint.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_2_PID_SETPOINT_TYPE:
    mp_vfd_2_pid_setpoint_type.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_2_RUN_MODE:
    mp_vfd_2_run_mode.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_2_STATE:
    mp_vfd_2_state.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_3_ENERGY_TEST_START_TEST:
    mp_vfd_3_energy_test_start_test.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_3_FIXED_FREQUENCY:
    mp_vfd_3_fixed_frequency.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_3_INSTALLED:
    mp_vfd_3_installed.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_3_OUTPUT_FREQUENCY:
    mp_vfd_3_output_frequency.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_3_PID_AI_FEEDBACK:
    mp_vfd_3_pid_ai_feedback.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_3_PID_AI_SETPOINT:
    mp_vfd_3_pid_ai_setpoint.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_3_PID_FIXED_SETPOINT:
    mp_vfd_3_pid_fixed_setpoint.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_3_PID_SETPOINT_TYPE:
    mp_vfd_3_pid_setpoint_type.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_3_RUN_MODE:
    mp_vfd_3_run_mode.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_3_STATE:
    mp_vfd_3_state.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_4_ENERGY_TEST_START_TEST:
    mp_vfd_4_energy_test_start_test.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_4_FIXED_FREQUENCY:
    mp_vfd_4_fixed_frequency.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_4_INSTALLED:
    mp_vfd_4_installed.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_4_OUTPUT_FREQUENCY:
    mp_vfd_4_output_frequency.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_4_PID_AI_FEEDBACK:
    mp_vfd_4_pid_ai_feedback.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_4_PID_AI_SETPOINT:
    mp_vfd_4_pid_ai_setpoint.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_4_PID_FIXED_SETPOINT:
    mp_vfd_4_pid_fixed_setpoint.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_4_PID_SETPOINT_TYPE:
    mp_vfd_4_pid_setpoint_type.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_4_RUN_MODE:
    mp_vfd_4_run_mode.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_4_STATE:
    mp_vfd_4_state.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_5_ENERGY_TEST_START_TEST:
    mp_vfd_5_energy_test_start_test.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_5_FIXED_FREQUENCY:
    mp_vfd_5_fixed_frequency.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_5_INSTALLED:
    mp_vfd_5_installed.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_5_OUTPUT_FREQUENCY:
    mp_vfd_5_output_frequency.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_5_PID_AI_FEEDBACK:
    mp_vfd_5_pid_ai_feedback.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_5_PID_AI_SETPOINT:
    mp_vfd_5_pid_ai_setpoint.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_5_PID_FIXED_SETPOINT:
    mp_vfd_5_pid_fixed_setpoint.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_5_PID_SETPOINT_TYPE:
    mp_vfd_5_pid_setpoint_type.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_5_RUN_MODE:
    mp_vfd_5_run_mode.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_5_STATE:
    mp_vfd_5_state.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_6_ENERGY_TEST_START_TEST:
    mp_vfd_6_energy_test_start_test.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_6_FIXED_FREQUENCY:
    mp_vfd_6_fixed_frequency.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_6_INSTALLED:
    mp_vfd_6_installed.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_6_OUTPUT_FREQUENCY:
    mp_vfd_6_output_frequency.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_6_PID_AI_FEEDBACK:
    mp_vfd_6_pid_ai_feedback.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_6_PID_AI_SETPOINT:
    mp_vfd_6_pid_ai_setpoint.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_6_PID_FIXED_SETPOINT:
    mp_vfd_6_pid_fixed_setpoint.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_6_PID_SETPOINT_TYPE:
    mp_vfd_6_pid_setpoint_type.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_6_RUN_MODE:
    mp_vfd_6_run_mode.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_6_STATE:
    mp_vfd_6_state.Attach(pSubject);
    break;
  case SUBJECT_ID_VFD_MIN_VELOCITY_FEATURE_ENABLED:
    mp_vfd_min_velocity_feature_enabled.Attach(pSubject);
    break;
  case SUBJECT_ID_YESTERDAY_USER_DEFINED_COUNTER_1:
    mp_yesterday_user_defined_counter_1.Attach(pSubject);
    break;
  case SUBJECT_ID_YESTERDAY_USER_DEFINED_COUNTER_2:
    mp_yesterday_user_defined_counter_2.Attach(pSubject);
    break;
  case SUBJECT_ID_YESTERDAY_USER_DEFINED_COUNTER_3:
    mp_yesterday_user_defined_counter_3.Attach(pSubject);
    break;
  }
}

void BaseGeniAppIf::ConnectToSubjects(void)
{
  mp_actual_alarm->Subscribe(this);
  mp_actual_warning->Subscribe(this);
  mp_ana_in_1_conf_measured_value->Subscribe(this);
  mp_ana_in_2_conf_measured_value->Subscribe(this);
  mp_ana_in_3_conf_measured_value->Subscribe(this);
  mp_ana_in_4_conf_measured_value->Subscribe(this);
  mp_ana_in_5_conf_measured_value->Subscribe(this);
  mp_ana_in_6_conf_measured_value->Subscribe(this);
  mp_ana_in_7_conf_measured_value->Subscribe(this);
  mp_ana_out_1_conf_func->Subscribe(this);
  mp_ana_out_2_conf_func->Subscribe(this);
  mp_ana_out_3_conf_func->Subscribe(this);
  mp_ana_out_4_conf_func->Subscribe(this);
  mp_ana_out_5_conf_func->Subscribe(this);
  mp_ana_out_6_conf_func->Subscribe(this);
  mp_ana_out_user_1->Subscribe(this);
  mp_ana_out_user_2->Subscribe(this);
  mp_ana_out_user_3->Subscribe(this);
  mp_anti_blocking_performed_counter_pump_1->Subscribe(this);
  mp_anti_blocking_performed_counter_pump_2->Subscribe(this);
  mp_anti_blocking_performed_counter_pump_3->Subscribe(this);
  mp_anti_blocking_performed_counter_pump_4->Subscribe(this);
  mp_anti_blocking_performed_counter_pump_5->Subscribe(this);
  mp_anti_blocking_performed_counter_pump_6->Subscribe(this);
  mp_application_mode->Subscribe(this);
  mp_chemical_total_dosed->Subscribe(this);
  mp_ciu_communication->Subscribe(this);
  mp_communication_card_received->Subscribe(this);
  mp_cue_pump_1_device_status->Subscribe(this);
  mp_cue_pump_1_torque->Subscribe(this);
  mp_cue_pump_2_device_status->Subscribe(this);
  mp_cue_pump_2_torque->Subscribe(this);
  mp_cue_pump_3_device_status->Subscribe(this);
  mp_cue_pump_3_torque->Subscribe(this);
  mp_cue_pump_4_device_status->Subscribe(this);
  mp_cue_pump_4_torque->Subscribe(this);
  mp_cue_pump_5_device_status->Subscribe(this);
  mp_cue_pump_5_torque->Subscribe(this);
  mp_cue_pump_6_device_status->Subscribe(this);
  mp_cue_pump_6_torque->Subscribe(this);
  mp_day_logging_start_hour->Subscribe(this);
  mp_demo_suitcase_mode_enabled->Subscribe(this);
  mp_device_no_sim->Subscribe(this);
  mp_device_type_code_sim->Subscribe(this);
  mp_dig_in_func_input_energy_cnt->Subscribe(this);
  mp_display_current_no_of_float_switches->Subscribe(this);
  mp_display_wizard_enable->Subscribe(this);
  mp_dosing_feed_tank_level->Subscribe(this);
  mp_efficiency_one_hour_avg->Subscribe(this);
  mp_energy_consumption_today_log->Subscribe(this);
  mp_energy_consumption_yesterday_log->Subscribe(this);
  mp_ethernet_mac_address_hi->Subscribe(this);
  mp_ethernet_mac_address_lo->Subscribe(this);
  mp_event_action_type_sim->Subscribe(this);
  mp_event_code_sim->Subscribe(this);
  mp_event_log_clear_id->Subscribe(this);
  mp_event_log_latest_id->Subscribe(this);
  mp_event_reset_type_sim->Subscribe(this);
  mp_event_sim_activate->Subscribe(this);
  mp_first_pump_in_pump_group_2->Subscribe(this);
  mp_float_switch_1_cnf->Subscribe(this);
  mp_float_switch_2_cnf->Subscribe(this);
  mp_float_switch_3_cnf->Subscribe(this);
  mp_float_switch_4_cnf->Subscribe(this);
  mp_float_switch_5_cnf->Subscribe(this);
  mp_float_switch_di_status->Subscribe(this);
  mp_float_switch_water_level->Subscribe(this);
  mp_flow_quality->Subscribe(this);
  mp_foam_start_level->Subscribe(this);
  mp_geni_baud_rate_config->Subscribe(this);
  mp_geni_baud_rate_set->Subscribe(this);
  mp_geni_dummy_class_11_par_1->Subscribe(this);
  mp_geni_dummy_class_11_par_2->Subscribe(this);
  mp_geni_dummy_class_11_par_3->Subscribe(this);
  mp_geni_dummy_data_point->Subscribe(this);
  mp_geni_min_reply_delay_config->Subscribe(this);
  mp_geni_min_reply_delay_set->Subscribe(this);
  mp_geni_setup->Subscribe(this);
  mp_geni_slave_group_address->Subscribe(this);
  mp_geni_slave_unit_address->Subscribe(this);
  mp_geni_unit_family->Subscribe(this);
  mp_geni_unit_type->Subscribe(this);
  mp_geni_unit_version->Subscribe(this);
  mp_gprs_ip_address->Subscribe(this);
  mp_gsm_setup->Subscribe(this);
  mp_gsm_state->Subscribe(this);
  mp_h2s_level_act->Subscribe(this);
  mp_h2s_level_today->Subscribe(this);
  mp_h2s_level_yesterday->Subscribe(this);
  mp_interlock_timeout->Subscribe(this);
  mp_latest_value_motor_current_pump_1->Subscribe(this);
  mp_latest_value_motor_current_pump_2->Subscribe(this);
  mp_latest_value_motor_current_pump_3->Subscribe(this);
  mp_latest_value_motor_current_pump_4->Subscribe(this);
  mp_latest_value_motor_current_pump_5->Subscribe(this);
  mp_latest_value_motor_current_pump_6->Subscribe(this);
  mp_lowest_start_level_variation->Subscribe(this);
  mp_lowest_start_level_variation_enabled->Subscribe(this);
  mp_measured_value_outlet_pressure->Subscribe(this);
  mp_measured_value_user_defined_source_1->Subscribe(this);
  mp_measured_value_user_defined_source_2->Subscribe(this);
  mp_measured_value_user_defined_source_3->Subscribe(this);
  mp_mixer_operating_mode->Subscribe(this);
  mp_mixer_run_time->Subscribe(this);
  mp_mixer_start_cnt->Subscribe(this);
  mp_mixer_starts_pr_hour->Subscribe(this);
  mp_modem_ctrl->Subscribe(this);
  mp_mp204_1_cos_phi->Subscribe(this);
  mp_mp204_1_current_asymmetry->Subscribe(this);
  mp_mp204_1_device_status->Subscribe(this);
  mp_mp204_2_cos_phi->Subscribe(this);
  mp_mp204_2_current_asymmetry->Subscribe(this);
  mp_mp204_2_device_status->Subscribe(this);
  mp_mp204_3_cos_phi->Subscribe(this);
  mp_mp204_3_current_asymmetry->Subscribe(this);
  mp_mp204_3_device_status->Subscribe(this);
  mp_mp204_4_cos_phi->Subscribe(this);
  mp_mp204_4_current_asymmetry->Subscribe(this);
  mp_mp204_4_device_status->Subscribe(this);
  mp_mp204_5_cos_phi->Subscribe(this);
  mp_mp204_5_current_asymmetry->Subscribe(this);
  mp_mp204_5_device_status->Subscribe(this);
  mp_mp204_6_cos_phi->Subscribe(this);
  mp_mp204_6_current_asymmetry->Subscribe(this);
  mp_mp204_6_device_status->Subscribe(this);
  mp_no_of_overflows->Subscribe(this);
  mp_operation_mode_actual_pump_1->Subscribe(this);
  mp_operation_mode_actual_pump_2->Subscribe(this);
  mp_operation_mode_actual_pump_3->Subscribe(this);
  mp_operation_mode_actual_pump_4->Subscribe(this);
  mp_operation_mode_actual_pump_5->Subscribe(this);
  mp_operation_mode_actual_pump_6->Subscribe(this);
  mp_operation_mode_req_pump_1->Subscribe(this);
  mp_operation_mode_req_pump_2->Subscribe(this);
  mp_operation_mode_req_pump_3->Subscribe(this);
  mp_operation_mode_req_pump_4->Subscribe(this);
  mp_operation_mode_req_pump_5->Subscribe(this);
  mp_operation_mode_req_pump_6->Subscribe(this);
  mp_overflow_count_today_log->Subscribe(this);
  mp_overflow_count_yesterday_log->Subscribe(this);
  mp_overflow_time->Subscribe(this);
  mp_overflow_time_today_log->Subscribe(this);
  mp_overflow_time_yesterday_log->Subscribe(this);
  mp_overflow_volume_litre_for_log->Subscribe(this);
  mp_overflow_volume_today_log->Subscribe(this);
  mp_overflow_volume_yesterday_log->Subscribe(this);
  mp_pit_depth->Subscribe(this);
  mp_pit_level_ctrl_type->Subscribe(this);
  mp_pit_level_sim_enabled->Subscribe(this);
  mp_power_on_cnt->Subscribe(this);
  mp_production_rev_date_code->Subscribe(this);
  mp_production_serial_no->Subscribe(this);
  mp_production_type_code->Subscribe(this);
  mp_pump_1_alarm_status_1->Subscribe(this);
  mp_pump_1_alarm_status_2->Subscribe(this);
  mp_pump_1_alarm_status_3->Subscribe(this);
  mp_pump_1_alarm_status_4->Subscribe(this);
  mp_pump_1_calculated_flow_filtered->Subscribe(this);
  mp_pump_1_calculated_flow_raw->Subscribe(this);
  mp_pump_1_control_source->Subscribe(this);
  mp_pump_1_energy->Subscribe(this);
  mp_pump_1_insulation_resistance->Subscribe(this);
  mp_pump_1_io111_device_status->Subscribe(this);
  mp_pump_1_latest_runtime->Subscribe(this);
  mp_pump_1_mains_voltage->Subscribe(this);
  mp_pump_1_no_of_starts_today_log->Subscribe(this);
  mp_pump_1_no_of_starts_yesterday_log->Subscribe(this);
  mp_pump_1_operation_time_today_log->Subscribe(this);
  mp_pump_1_operation_time_yesterday_log->Subscribe(this);
  mp_pump_1_power->Subscribe(this);
  mp_pump_1_run_time->Subscribe(this);
  mp_pump_1_run_time_to_service->Subscribe(this);
  mp_pump_1_start_cnt->Subscribe(this);
  mp_pump_1_starts_pr_hour->Subscribe(this);
  mp_pump_1_temperature->Subscribe(this);
  mp_pump_1_warning_status_1->Subscribe(this);
  mp_pump_1_warning_status_2->Subscribe(this);
  mp_pump_1_warning_status_3->Subscribe(this);
  mp_pump_1_warning_status_4->Subscribe(this);
  mp_pump_2_alarm_status_1->Subscribe(this);
  mp_pump_2_alarm_status_2->Subscribe(this);
  mp_pump_2_alarm_status_3->Subscribe(this);
  mp_pump_2_alarm_status_4->Subscribe(this);
  mp_pump_2_calculated_flow_filtered->Subscribe(this);
  mp_pump_2_calculated_flow_raw->Subscribe(this);
  mp_pump_2_control_source->Subscribe(this);
  mp_pump_2_energy->Subscribe(this);
  mp_pump_2_insulation_resistance->Subscribe(this);
  mp_pump_2_io111_device_status->Subscribe(this);
  mp_pump_2_latest_runtime->Subscribe(this);
  mp_pump_2_mains_voltage->Subscribe(this);
  mp_pump_2_no_of_starts_today_log->Subscribe(this);
  mp_pump_2_no_of_starts_yesterday_log->Subscribe(this);
  mp_pump_2_operation_time_today_log->Subscribe(this);
  mp_pump_2_operation_time_yesterday_log->Subscribe(this);
  mp_pump_2_power->Subscribe(this);
  mp_pump_2_run_time->Subscribe(this);
  mp_pump_2_run_time_to_service->Subscribe(this);
  mp_pump_2_start_cnt->Subscribe(this);
  mp_pump_2_starts_pr_hour->Subscribe(this);
  mp_pump_2_temperature->Subscribe(this);
  mp_pump_2_warning_status_1->Subscribe(this);
  mp_pump_2_warning_status_2->Subscribe(this);
  mp_pump_2_warning_status_3->Subscribe(this);
  mp_pump_2_warning_status_4->Subscribe(this);
  mp_pump_3_alarm_status_1->Subscribe(this);
  mp_pump_3_alarm_status_2->Subscribe(this);
  mp_pump_3_alarm_status_3->Subscribe(this);
  mp_pump_3_alarm_status_4->Subscribe(this);
  mp_pump_3_calculated_flow_filtered->Subscribe(this);
  mp_pump_3_calculated_flow_raw->Subscribe(this);
  mp_pump_3_control_source->Subscribe(this);
  mp_pump_3_energy->Subscribe(this);
  mp_pump_3_insulation_resistance->Subscribe(this);
  mp_pump_3_io111_device_status->Subscribe(this);
  mp_pump_3_latest_runtime->Subscribe(this);
  mp_pump_3_mains_voltage->Subscribe(this);
  mp_pump_3_no_of_starts_today_log->Subscribe(this);
  mp_pump_3_no_of_starts_yesterday_log->Subscribe(this);
  mp_pump_3_operation_time_today_log->Subscribe(this);
  mp_pump_3_operation_time_yesterday_log->Subscribe(this);
  mp_pump_3_power->Subscribe(this);
  mp_pump_3_run_time->Subscribe(this);
  mp_pump_3_run_time_to_service->Subscribe(this);
  mp_pump_3_start_cnt->Subscribe(this);
  mp_pump_3_starts_pr_hour->Subscribe(this);
  mp_pump_3_temperature->Subscribe(this);
  mp_pump_3_warning_status_1->Subscribe(this);
  mp_pump_3_warning_status_2->Subscribe(this);
  mp_pump_3_warning_status_3->Subscribe(this);
  mp_pump_3_warning_status_4->Subscribe(this);
  mp_pump_4_alarm_status_1->Subscribe(this);
  mp_pump_4_alarm_status_2->Subscribe(this);
  mp_pump_4_alarm_status_3->Subscribe(this);
  mp_pump_4_alarm_status_4->Subscribe(this);
  mp_pump_4_calculated_flow_filtered->Subscribe(this);
  mp_pump_4_calculated_flow_raw->Subscribe(this);
  mp_pump_4_control_source->Subscribe(this);
  mp_pump_4_energy->Subscribe(this);
  mp_pump_4_insulation_resistance->Subscribe(this);
  mp_pump_4_io111_device_status->Subscribe(this);
  mp_pump_4_latest_runtime->Subscribe(this);
  mp_pump_4_mains_voltage->Subscribe(this);
  mp_pump_4_no_of_starts_today_log->Subscribe(this);
  mp_pump_4_no_of_starts_yesterday_log->Subscribe(this);
  mp_pump_4_operation_time_today_log->Subscribe(this);
  mp_pump_4_operation_time_yesterday_log->Subscribe(this);
  mp_pump_4_power->Subscribe(this);
  mp_pump_4_run_time->Subscribe(this);
  mp_pump_4_run_time_to_service->Subscribe(this);
  mp_pump_4_start_cnt->Subscribe(this);
  mp_pump_4_starts_pr_hour->Subscribe(this);
  mp_pump_4_temperature->Subscribe(this);
  mp_pump_4_warning_status_1->Subscribe(this);
  mp_pump_4_warning_status_2->Subscribe(this);
  mp_pump_4_warning_status_3->Subscribe(this);
  mp_pump_4_warning_status_4->Subscribe(this);
  mp_pump_5_alarm_status_1->Subscribe(this);
  mp_pump_5_alarm_status_2->Subscribe(this);
  mp_pump_5_alarm_status_3->Subscribe(this);
  mp_pump_5_alarm_status_4->Subscribe(this);
  mp_pump_5_calculated_flow_filtered->Subscribe(this);
  mp_pump_5_calculated_flow_raw->Subscribe(this);
  mp_pump_5_control_source->Subscribe(this);
  mp_pump_5_energy->Subscribe(this);
  mp_pump_5_insulation_resistance->Subscribe(this);
  mp_pump_5_io111_device_status->Subscribe(this);
  mp_pump_5_latest_runtime->Subscribe(this);
  mp_pump_5_mains_voltage->Subscribe(this);
  mp_pump_5_no_of_starts_today_log->Subscribe(this);
  mp_pump_5_no_of_starts_yesterday_log->Subscribe(this);
  mp_pump_5_operation_time_today_log->Subscribe(this);
  mp_pump_5_operation_time_yesterday_log->Subscribe(this);
  mp_pump_5_power->Subscribe(this);
  mp_pump_5_run_time->Subscribe(this);
  mp_pump_5_run_time_to_service->Subscribe(this);
  mp_pump_5_start_cnt->Subscribe(this);
  mp_pump_5_starts_pr_hour->Subscribe(this);
  mp_pump_5_temperature->Subscribe(this);
  mp_pump_5_warning_status_1->Subscribe(this);
  mp_pump_5_warning_status_2->Subscribe(this);
  mp_pump_5_warning_status_3->Subscribe(this);
  mp_pump_5_warning_status_4->Subscribe(this);
  mp_pump_6_alarm_status_1->Subscribe(this);
  mp_pump_6_alarm_status_2->Subscribe(this);
  mp_pump_6_alarm_status_3->Subscribe(this);
  mp_pump_6_alarm_status_4->Subscribe(this);
  mp_pump_6_calculated_flow_filtered->Subscribe(this);
  mp_pump_6_calculated_flow_raw->Subscribe(this);
  mp_pump_6_control_source->Subscribe(this);
  mp_pump_6_energy->Subscribe(this);
  mp_pump_6_insulation_resistance->Subscribe(this);
  mp_pump_6_io111_device_status->Subscribe(this);
  mp_pump_6_latest_runtime->Subscribe(this);
  mp_pump_6_mains_voltage->Subscribe(this);
  mp_pump_6_no_of_starts_today_log->Subscribe(this);
  mp_pump_6_no_of_starts_yesterday_log->Subscribe(this);
  mp_pump_6_operation_time_today_log->Subscribe(this);
  mp_pump_6_operation_time_yesterday_log->Subscribe(this);
  mp_pump_6_power->Subscribe(this);
  mp_pump_6_run_time->Subscribe(this);
  mp_pump_6_run_time_to_service->Subscribe(this);
  mp_pump_6_start_cnt->Subscribe(this);
  mp_pump_6_starts_pr_hour->Subscribe(this);
  mp_pump_6_temperature->Subscribe(this);
  mp_pump_6_warning_status_1->Subscribe(this);
  mp_pump_6_warning_status_2->Subscribe(this);
  mp_pump_6_warning_status_3->Subscribe(this);
  mp_pump_6_warning_status_4->Subscribe(this);
  mp_pump_fault_status->Subscribe(this);
  mp_pump_group_1_alarm_motor_current_overload_alarm_conf->Subscribe(this);
  mp_pump_group_1_alarm_motor_current_underload_alarm_conf->Subscribe(this);
  mp_pump_group_2_alarm_motor_current_overload_alarm_conf->Subscribe(this);
  mp_pump_group_2_alarm_motor_current_underload_alarm_conf->Subscribe(this);
  mp_pump_monitoring_fault->Subscribe(this);
  mp_pump_run_time_0_pumps->Subscribe(this);
  mp_pump_run_time_0_pumps_today_log->Subscribe(this);
  mp_pump_run_time_0_pumps_yesterday_log->Subscribe(this);
  mp_pump_run_time_1_pumps->Subscribe(this);
  mp_pump_run_time_1_pumps_today_log->Subscribe(this);
  mp_pump_run_time_1_pumps_yesterday_log->Subscribe(this);
  mp_pump_run_time_2_pumps->Subscribe(this);
  mp_pump_run_time_2_pumps_today_log->Subscribe(this);
  mp_pump_run_time_2_pumps_yesterday_log->Subscribe(this);
  mp_pump_run_time_3_pumps->Subscribe(this);
  mp_pump_run_time_3_pumps_today_log->Subscribe(this);
  mp_pump_run_time_3_pumps_yesterday_log->Subscribe(this);
  mp_pump_run_time_4_pumps->Subscribe(this);
  mp_pump_run_time_4_pumps_today_log->Subscribe(this);
  mp_pump_run_time_4_pumps_yesterday_log->Subscribe(this);
  mp_pump_run_time_5_pumps->Subscribe(this);
  mp_pump_run_time_5_pumps_today_log->Subscribe(this);
  mp_pump_run_time_5_pumps_yesterday_log->Subscribe(this);
  mp_pump_run_time_6_pumps->Subscribe(this);
  mp_pump_run_time_6_pumps_today_log->Subscribe(this);
  mp_pump_run_time_6_pumps_yesterday_log->Subscribe(this);
  mp_pumped_volume_litre_for_log->Subscribe(this);
  mp_pumped_volume_today_log->Subscribe(this);
  mp_pumped_volume_yesterday_log->Subscribe(this);
  mp_relay_func_output_pump_1->Subscribe(this);
  mp_relay_func_output_pump_2->Subscribe(this);
  mp_relay_func_output_pump_3->Subscribe(this);
  mp_relay_func_output_pump_4->Subscribe(this);
  mp_relay_func_output_pump_5->Subscribe(this);
  mp_relay_func_output_pump_6->Subscribe(this);
  mp_relay_status_relay_func_mixer->Subscribe(this);
  mp_relay_status_relay_func_relay_custom->Subscribe(this);
  mp_relay_status_relay_func_user_io_1->Subscribe(this);
  mp_relay_status_relay_func_user_io_2->Subscribe(this);
  mp_relay_status_relay_func_user_io_3->Subscribe(this);
  mp_relay_status_relay_func_user_io_4->Subscribe(this);
  mp_relay_status_relay_func_user_io_5->Subscribe(this);
  mp_relay_status_relay_func_user_io_6->Subscribe(this);
  mp_relay_status_relay_func_user_io_7->Subscribe(this);
  mp_relay_status_relay_func_user_io_8->Subscribe(this);
  mp_resulting_value_motor_current_pump_1->Subscribe(this);
  mp_resulting_value_motor_current_pump_2->Subscribe(this);
  mp_resulting_value_motor_current_pump_3->Subscribe(this);
  mp_resulting_value_motor_current_pump_4->Subscribe(this);
  mp_resulting_value_motor_current_pump_5->Subscribe(this);
  mp_resulting_value_motor_current_pump_6->Subscribe(this);
  mp_resulting_value_water_in_oil_pump_1->Subscribe(this);
  mp_resulting_value_water_in_oil_pump_2->Subscribe(this);
  mp_resulting_value_water_in_oil_pump_3->Subscribe(this);
  mp_resulting_value_water_in_oil_pump_4->Subscribe(this);
  mp_resulting_value_water_in_oil_pump_5->Subscribe(this);
  mp_resulting_value_water_in_oil_pump_6->Subscribe(this);
  mp_rtc_day_of_month->Subscribe(this);
  mp_rtc_day_of_week->Subscribe(this);
  mp_rtc_day_set->Subscribe(this);
  mp_rtc_hour->Subscribe(this);
  mp_rtc_hour_set->Subscribe(this);
  mp_rtc_minute->Subscribe(this);
  mp_rtc_minute_set->Subscribe(this);
  mp_rtc_month_of_year->Subscribe(this);
  mp_rtc_month_set->Subscribe(this);
  mp_rtc_second->Subscribe(this);
  mp_rtc_second_set->Subscribe(this);
  mp_rtc_seconds_since_1970_act->Subscribe(this);
  mp_rtc_seconds_since_1970_set->Subscribe(this);
  mp_rtc_year->Subscribe(this);
  mp_rtc_year_set->Subscribe(this);
  mp_scada_pin_code->Subscribe(this);
  mp_scada_pin_code_enabled->Subscribe(this);
  mp_service_mode_enabled->Subscribe(this);
  mp_set_dosing_ref->Subscribe(this);
  mp_signal_level_act_geni->Subscribe(this);
  mp_signal_level_avg_geni->Subscribe(this);
  mp_sim_card_status->Subscribe(this);
  mp_sms_out_seq_number->Subscribe(this);
  mp_sms_sent_id->Subscribe(this);
  mp_start_level_pump_1->Subscribe(this);
  mp_start_level_pump_2->Subscribe(this);
  mp_start_level_pump_3->Subscribe(this);
  mp_start_level_pump_4->Subscribe(this);
  mp_start_level_pump_5->Subscribe(this);
  mp_start_level_pump_6->Subscribe(this);
  mp_status_led_green_state->Subscribe(this);
  mp_status_led_red_state->Subscribe(this);
  mp_stop_level_pump_1->Subscribe(this);
  mp_stop_level_pump_2->Subscribe(this);
  mp_stop_level_pump_3->Subscribe(this);
  mp_stop_level_pump_4->Subscribe(this);
  mp_stop_level_pump_5->Subscribe(this);
  mp_stop_level_pump_6->Subscribe(this);
  mp_surface_level->Subscribe(this);
  mp_sys_alarm_dry_running_alarm_conf->Subscribe(this);
  mp_sys_alarm_high_level_alarm_conf->Subscribe(this);
  mp_sys_alarm_level_alarm_conf->Subscribe(this);
  mp_sys_alarm_overflow_alarm_conf->Subscribe(this);
  mp_system_alarm_status_1->Subscribe(this);
  mp_system_alarm_status_2->Subscribe(this);
  mp_system_alarm_status_3->Subscribe(this);
  mp_system_flow->Subscribe(this);
  mp_system_power->Subscribe(this);
  mp_system_run_time->Subscribe(this);
  mp_system_warning_status_1->Subscribe(this);
  mp_system_warning_status_2->Subscribe(this);
  mp_system_warning_status_3->Subscribe(this);
  mp_today_user_defined_counter_1->Subscribe(this);
  mp_today_user_defined_counter_2->Subscribe(this);
  mp_today_user_defined_counter_3->Subscribe(this);
  mp_total_energy_kwh_for_log->Subscribe(this);
  mp_total_usd_cnt_1->Subscribe(this);
  mp_total_usd_cnt_2->Subscribe(this);
  mp_total_usd_cnt_3->Subscribe(this);
  mp_ups_voltage_act->Subscribe(this);
  mp_vfd_1_fixed_frequency->Subscribe(this);
  mp_vfd_1_installed->Subscribe(this);
  mp_vfd_1_output_frequency->Subscribe(this);
  mp_vfd_1_pid_ai_feedback->Subscribe(this);
  mp_vfd_1_pid_ai_setpoint->Subscribe(this);
  mp_vfd_1_pid_fixed_setpoint->Subscribe(this);
  mp_vfd_1_pid_setpoint_type->Subscribe(this);
  mp_vfd_1_run_mode->Subscribe(this);
  mp_vfd_1_state->Subscribe(this);
  mp_vfd_2_fixed_frequency->Subscribe(this);
  mp_vfd_2_installed->Subscribe(this);
  mp_vfd_2_output_frequency->Subscribe(this);
  mp_vfd_2_pid_ai_feedback->Subscribe(this);
  mp_vfd_2_pid_ai_setpoint->Subscribe(this);
  mp_vfd_2_pid_fixed_setpoint->Subscribe(this);
  mp_vfd_2_pid_setpoint_type->Subscribe(this);
  mp_vfd_2_run_mode->Subscribe(this);
  mp_vfd_2_state->Subscribe(this);
  mp_vfd_3_fixed_frequency->Subscribe(this);
  mp_vfd_3_installed->Subscribe(this);
  mp_vfd_3_output_frequency->Subscribe(this);
  mp_vfd_3_pid_ai_feedback->Subscribe(this);
  mp_vfd_3_pid_ai_setpoint->Subscribe(this);
  mp_vfd_3_pid_fixed_setpoint->Subscribe(this);
  mp_vfd_3_pid_setpoint_type->Subscribe(this);
  mp_vfd_3_run_mode->Subscribe(this);
  mp_vfd_3_state->Subscribe(this);
  mp_vfd_4_fixed_frequency->Subscribe(this);
  mp_vfd_4_installed->Subscribe(this);
  mp_vfd_4_output_frequency->Subscribe(this);
  mp_vfd_4_pid_ai_feedback->Subscribe(this);
  mp_vfd_4_pid_ai_setpoint->Subscribe(this);
  mp_vfd_4_pid_fixed_setpoint->Subscribe(this);
  mp_vfd_4_pid_setpoint_type->Subscribe(this);
  mp_vfd_4_run_mode->Subscribe(this);
  mp_vfd_4_state->Subscribe(this);
  mp_vfd_5_fixed_frequency->Subscribe(this);
  mp_vfd_5_installed->Subscribe(this);
  mp_vfd_5_output_frequency->Subscribe(this);
  mp_vfd_5_pid_ai_feedback->Subscribe(this);
  mp_vfd_5_pid_ai_setpoint->Subscribe(this);
  mp_vfd_5_pid_fixed_setpoint->Subscribe(this);
  mp_vfd_5_pid_setpoint_type->Subscribe(this);
  mp_vfd_5_run_mode->Subscribe(this);
  mp_vfd_5_state->Subscribe(this);
  mp_vfd_6_fixed_frequency->Subscribe(this);
  mp_vfd_6_installed->Subscribe(this);
  mp_vfd_6_output_frequency->Subscribe(this);
  mp_vfd_6_pid_ai_feedback->Subscribe(this);
  mp_vfd_6_pid_ai_setpoint->Subscribe(this);
  mp_vfd_6_pid_fixed_setpoint->Subscribe(this);
  mp_vfd_6_pid_setpoint_type->Subscribe(this);
  mp_vfd_6_run_mode->Subscribe(this);
  mp_vfd_6_state->Subscribe(this);
  mp_vfd_min_velocity_feature_enabled->Subscribe(this);
  mp_yesterday_user_defined_counter_1->Subscribe(this);
  mp_yesterday_user_defined_counter_2->Subscribe(this);
  mp_yesterday_user_defined_counter_3->Subscribe(this);
}

void BaseGeniAppIf::SubscribtionCancelled(Subject* pSubject)
{
}

/**************************************************************************
 Subject -> Geni
**************************************************************************/
bool BaseGeniAppIf::SubjectToGeni(Subject* pSubject)
{
  bool handled = true;
  switch (pSubject->GetSubjectId())
  {
  case SUBJECT_ID_APPLICATION_MODE:
    gai_2_71_pit_opr_mode = ToGeni8bitValue(mp_application_mode.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_DISPLAY_WIZARD_ENABLE:
    gai_4_86_display_wizard_enable = ToGeni8bitValue(mp_display_wizard_enable.GetSubject(), GENI_CONVERT_ID_BITVAR_254);
    break;
  case SUBJECT_ID_GENI_SETUP:
    gai_4_81_geni_setup = ToGeni8bitValue(mp_geni_setup.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case SUBJECT_ID_GENI_SLAVE_UNIT_ADDRESS:
    gai_4_46_slave_unit_address = ToGeni8bitValue(mp_geni_slave_unit_address.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case SUBJECT_ID_GENI_SLAVE_GROUP_ADDRESS:
    gai_4_47_slave_group_address = ToGeni8bitValue(mp_geni_slave_group_address.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case SUBJECT_ID_SURFACE_LEVEL:
    gai_11_0_pit_water_level = ToGeni16bitValue(mp_surface_level.GetSubject(), GENI_CONVERT_ID_HEAD_DIST_DOT01M);
    break;
  case SUBJECT_ID_SYSTEM_FLOW:
    gai_11_3_pit_act_flow_in = ToGeni16bitValue(mp_system_flow.GetSubject(), GENI_CONVERT_ID_FLOW_DOT1LS);
    gai_11_4_pit_avg_flow_in = ToGeni16bitValue(mp_system_flow.GetSubject(), GENI_CONVERT_ID_FLOW_DOT1LS);
    gai_11_5_pit_act_flow_out = ToGeni16bitValue(mp_system_flow.GetSubject(), GENI_CONVERT_ID_FLOW_DOT1LS);
    gai_11_6_pit_avg_flow_out = ToGeni16bitValue(mp_system_flow.GetSubject(), GENI_CONVERT_ID_FLOW_DOT1LS);
    break;
  case SUBJECT_ID_FLOAT_SWITCH_1_CNF:
    gai_2_2_float_switch_1_func = ToGeni8bitValue(mp_float_switch_1_cnf.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_FLOAT_SWITCH_2_CNF:
    gai_2_3_float_switch_2_func = ToGeni8bitValue(mp_float_switch_2_cnf.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_FLOAT_SWITCH_3_CNF:
    gai_2_4_float_switch_3_func = ToGeni8bitValue(mp_float_switch_3_cnf.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_FLOAT_SWITCH_4_CNF:
    gai_2_5_float_switch_4_func = ToGeni8bitValue(mp_float_switch_4_cnf.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_FLOAT_SWITCH_5_CNF:
    gai_2_6_float_switch_5_func = ToGeni8bitValue(mp_float_switch_5_cnf.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_PIT_DEPTH:
    gai_11_2_pit_depth = ToGeni16bitValue(mp_pit_depth.GetSubject(), GENI_CONVERT_ID_HEAD_DIST_DOT01M);
    break;
  case SUBJECT_ID_PUMP_1_RUN_TIME:
    gai_14_40_p1_opr_time = ToGeni32bitValue(mp_pump_1_run_time.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    break;
  case SUBJECT_ID_PUMP_2_RUN_TIME:
    gai_14_60_p2_opr_time = ToGeni32bitValue(mp_pump_2_run_time.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    break;
  case SUBJECT_ID_FLOAT_SWITCH_WATER_LEVEL:
    gai_11_1_pit_switch_water_level = ToGeni16bitValue(mp_float_switch_water_level.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_PUMP_1_START_CNT:
    gai_14_42_p1_start_cnt = ToGeni32bitValue(mp_pump_1_start_cnt.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_PUMP_2_START_CNT:
    gai_14_62_p2_start_cnt = ToGeni32bitValue(mp_pump_2_start_cnt.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_SYSTEM_RUN_TIME:
    gai_14_3_pit_opr_time = ToGeni32bitValue(mp_system_run_time.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    break;
  case SUBJECT_ID_OVERFLOW_TIME:
    gai_11_26_pit_overflow_time = ToGeni16bitValue(mp_overflow_time.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    gai_14_180_overflow_time = ToGeni32bitValue(mp_overflow_time.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    break;
  case SUBJECT_ID_NO_OF_OVERFLOWS:
    gai_11_29_pit_overflow_count = ToGeni16bitValue(mp_no_of_overflows.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_TOTAL_ENERGY_KWH_FOR_LOG:
    gai_14_1_pit_energy = ToGeni32bitValue(mp_total_energy_kwh_for_log.GetSubject(), GENI_CONVERT_ID_ENERGY_KWH_DOT1KWH);
    break;
  case SUBJECT_ID_START_LEVEL_PUMP_1:
    gai_12_5_start_level_p1 = ToGeni16bitValue(mp_start_level_pump_1.GetSubject(), GENI_CONVERT_ID_HEAD_DIST_DOT01M);
    break;
  case SUBJECT_ID_START_LEVEL_PUMP_2:
    gai_12_6_start_level_p2 = ToGeni16bitValue(mp_start_level_pump_2.GetSubject(), GENI_CONVERT_ID_HEAD_DIST_DOT01M);
    break;
  case SUBJECT_ID_STOP_LEVEL_PUMP_1:
    gai_12_11_stop_level_p1 = ToGeni16bitValue(mp_stop_level_pump_1.GetSubject(), GENI_CONVERT_ID_HEAD_DIST_DOT01M);
    break;
  case SUBJECT_ID_STOP_LEVEL_PUMP_2:
    gai_12_12_stop_level_p2 = ToGeni16bitValue(mp_stop_level_pump_2.GetSubject(), GENI_CONVERT_ID_HEAD_DIST_DOT01M);
    break;
  case SUBJECT_ID_MIXER_RUN_TIME:
    gai_14_30_pit_mixer_opr_time = ToGeni32bitValue(mp_mixer_run_time.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    break;
  case SUBJECT_ID_PUMP_1_STARTS_PR_HOUR:
    gai_11_65_p1_starts_pr_hour = ToGeni16bitValue(mp_pump_1_starts_pr_hour.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_PUMP_2_STARTS_PR_HOUR:
    gai_11_95_p2_starts_pr_hour = ToGeni16bitValue(mp_pump_2_starts_pr_hour.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_MIXER_STARTS_PR_HOUR:
    gai_11_22_pit_mixer_starts_per_h = ToGeni16bitValue(mp_mixer_starts_pr_hour.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_MIXER_START_CNT:
    gai_14_31_pit_mixer_start_cnt = ToGeni32bitValue(mp_mixer_start_cnt.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_POWER_ON_CNT:
    gai_11_59_power_on_counter = ToGeni16bitValue(mp_power_on_cnt.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_SYS_ALARM_HIGH_LEVEL_ALARM_CONF:
    gai_12_1_high_level = ToGeni16bitValue(mp_sys_alarm_high_level_alarm_conf.GetSubject(), GENI_CONVERT_ID_HEAD_DIST_DOT01M);
    break;
  case SUBJECT_ID_SYS_ALARM_LEVEL_ALARM_CONF:
    gai_12_2_alarm_level = ToGeni16bitValue(mp_sys_alarm_level_alarm_conf.GetSubject(), GENI_CONVERT_ID_HEAD_DIST_DOT01M);
    break;
  case SUBJECT_ID_SYS_ALARM_DRY_RUNNING_ALARM_CONF:
    gai_12_3_dry_running_level = ToGeni16bitValue(mp_sys_alarm_dry_running_alarm_conf.GetSubject(), GENI_CONVERT_ID_HEAD_DIST_DOT01M);
    break;
  case SUBJECT_ID_SYS_ALARM_OVERFLOW_ALARM_CONF:
    gai_12_0_overflow_level = ToGeni16bitValue(mp_sys_alarm_overflow_alarm_conf.GetSubject(), GENI_CONVERT_ID_HEAD_DIST_DOT01M);
    break;
  case SUBJECT_ID_RELAY_STATUS_RELAY_FUNC_RELAY_CUSTOM:
    gai_5_9_custom_relay = ToGeni8bitValue(mp_relay_status_relay_func_relay_custom.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_FOAM_START_LEVEL:
    gai_12_4_foam_drain_level = ToGeni16bitValue(mp_foam_start_level.GetSubject(), GENI_CONVERT_ID_HEAD_DIST_DOT01M);
    break;
  case SUBJECT_ID_SMS_OUT_SEQ_NUMBER:
    gai_2_239_sms_out_seq_no = ToGeni8bitValue(mp_sms_out_seq_number.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case SUBJECT_ID_SMS_SENT_ID:
    gai_5_45_sms_out_seq_no_ack = ToGeni8bitValue(mp_sms_sent_id.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case SUBJECT_ID_PUMP_1_CALCULATED_FLOW_RAW:
    gai_11_67_p1_latest_flow = ToGeni16bitValue(mp_pump_1_calculated_flow_raw.GetSubject(), GENI_CONVERT_ID_FLOW_DOT1LS);
    break;
  case SUBJECT_ID_PUMP_1_CALCULATED_FLOW_FILTERED:
    gai_11_66_p1_flow = ToGeni16bitValue(mp_pump_1_calculated_flow_filtered.GetSubject(), GENI_CONVERT_ID_FLOW_DOT1LS);
    break;
  case SUBJECT_ID_SYSTEM_POWER:
    gai_14_0_pit_power = ToGeni32bitValue(mp_system_power.GetSubject(), GENI_CONVERT_ID_POWER_1W);
    break;
  case SUBJECT_ID_SIM_CARD_STATUS:
    gai_5_49_sim_card_status = ToGeni8bitValue(mp_sim_card_status.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_MODEM_CTRL:
    gai_2_237_gsm_ctr = ToGeni8bitValue(mp_modem_ctrl.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_PUMP_2_CALCULATED_FLOW_RAW:
    gai_11_97_p2_latest_flow = ToGeni16bitValue(mp_pump_2_calculated_flow_raw.GetSubject(), GENI_CONVERT_ID_FLOW_DOT1LS);
    break;
  case SUBJECT_ID_PUMP_2_CALCULATED_FLOW_FILTERED:
    gai_11_96_p2_flow = ToGeni16bitValue(mp_pump_2_calculated_flow_filtered.GetSubject(), GENI_CONVERT_ID_FLOW_DOT1LS);
    break;
  case SUBJECT_ID_EFFICIENCY_ONE_HOUR_AVG:
    gai_11_9_pit_specific_energy = ToGeni16bitValue(mp_efficiency_one_hour_avg.GetSubject(), GENI_CONVERT_ID_EFFICIENCY_1WHM3);
    break;
  case SUBJECT_ID_PUMPED_VOLUME_YESTERDAY_LOG:
    gai_11_10_pit_pumped_volume_yesterday = ToGeni16bitValue(mp_pumped_volume_yesterday_log.GetSubject(), GENI_CONVERT_ID_VOLUME_DOT1M3);
    break;
  case SUBJECT_ID_OVERFLOW_VOLUME_YESTERDAY_LOG:
    gai_11_24_pit_overflow_volume_yesterday = ToGeni16bitValue(mp_overflow_volume_yesterday_log.GetSubject(), GENI_CONVERT_ID_VOLUME_DOT1M3);
    break;
  case SUBJECT_ID_OVERFLOW_COUNT_YESTERDAY_LOG:
    gai_11_30_pit_overflow_cnt_yesterday = ToGeni16bitValue(mp_overflow_count_yesterday_log.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_OVERFLOW_TIME_YESTERDAY_LOG:
    gai_11_27_pit_overflow_time_yesterday = ToGeni16bitValue(mp_overflow_time_yesterday_log.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    break;
  case SUBJECT_ID_ENERGY_CONSUMPTION_YESTERDAY_LOG:
    gai_11_7_pit_energy_yesterday = ToGeni16bitValue(mp_energy_consumption_yesterday_log.GetSubject(), GENI_CONVERT_ID_ENERGY_KWH_DOT1KWH);
    break;
  case SUBJECT_ID_PUMP_1_OPERATION_TIME_YESTERDAY_LOG:
    gai_11_60_p1_opr_time_yesterday = ToGeni16bitValue(mp_pump_1_operation_time_yesterday_log.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    break;
  case SUBJECT_ID_PUMP_2_OPERATION_TIME_YESTERDAY_LOG:
    gai_11_90_p2_opr_time_yesterday = ToGeni16bitValue(mp_pump_2_operation_time_yesterday_log.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    break;
  case SUBJECT_ID_PUMP_1_NO_OF_STARTS_YESTERDAY_LOG:
    gai_11_63_p1_start_cnt_yesterday = ToGeni16bitValue(mp_pump_1_no_of_starts_yesterday_log.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_PUMP_2_NO_OF_STARTS_YESTERDAY_LOG:
    gai_11_93_p2_start_cnt_yesterday = ToGeni16bitValue(mp_pump_2_no_of_starts_yesterday_log.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_INTERLOCK_TIMEOUT:
    gai_12_20_interlock_timeout_slave = ToGeni16bitValue(mp_interlock_timeout.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    break;
  case SUBJECT_ID_PUMP_1_LATEST_RUNTIME:
    gai_11_62_p1_latest_runtime = ToGeni16bitValue(mp_pump_1_latest_runtime.GetSubject(), GENI_CONVERT_ID_TIME_1SEC);
    break;
  case SUBJECT_ID_PUMP_2_LATEST_RUNTIME:
    gai_11_92_p2_latest_runtime = ToGeni16bitValue(mp_pump_2_latest_runtime.GetSubject(), GENI_CONVERT_ID_TIME_1SEC);
    break;
  case SUBJECT_ID_GPRS_IP_ADDRESS:
    gai_14_161_ip_address = ToGeni32bitValue(mp_gprs_ip_address.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case SUBJECT_ID_GENI_UNIT_FAMILY:
    gai_2_148_unit_family = ToGeni8bitValue(mp_geni_unit_family.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_GENI_UNIT_TYPE:
    gai_2_149_unit_type = ToGeni8bitValue(mp_geni_unit_type.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_GENI_UNIT_VERSION:
    gai_2_150_unit_version = ToGeni8bitValue(mp_geni_unit_version.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_GENI_DUMMY_DATA_POINT:
    gai_15_1_dummy15 = ToGeni32bitValue(mp_geni_dummy_data_point.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    gai_16_1_dummy16 = ToGeni32bitValue(mp_geni_dummy_data_point.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_GENI_BAUD_RATE_CONFIG:
    gai_4_79_baud_rate_default = ToGeni8bitValue(mp_geni_baud_rate_config.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_GENI_BAUD_RATE_SET:
    gai_5_39_set_baud_rate = ToGeni8bitValue(mp_geni_baud_rate_set.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_GSM_SETUP:
    gai_2_238_gsm_setup = ToGeni8bitValue(mp_gsm_setup.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_GENI_MIN_REPLY_DELAY_CONFIG:
    gai_4_80_min_reply_delay_default = ToGeni8bitValue(mp_geni_min_reply_delay_config.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_GENI_MIN_REPLY_DELAY_SET:
    gai_5_38_set_min_reply_delay = ToGeni8bitValue(mp_geni_min_reply_delay_set.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_RTC_SECOND:
    gai_2_145_rtc_second = ToGeni8bitValue(mp_rtc_second.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_RTC_MINUTE:
    gai_2_144_rtc_minute = ToGeni8bitValue(mp_rtc_minute.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_RTC_HOUR:
    gai_2_143_rtc_hour = ToGeni8bitValue(mp_rtc_hour.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_RTC_DAY_OF_MONTH:
    gai_2_142_rtc_day_of_month = ToGeni8bitValue(mp_rtc_day_of_month.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_RTC_MONTH_OF_YEAR:
    gai_2_141_rtc_month_of_year = ToGeni8bitValue(mp_rtc_month_of_year.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_RTC_YEAR:
    gai_2_140_rtc_year = ToGeni8bitValue(mp_rtc_year.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_RTC_DAY_OF_WEEK:
    gai_2_146_rtc_day_of_week = ToGeni8bitValue(mp_rtc_day_of_week.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_RTC_SECONDS_SINCE_1970_ACT:
    gai_14_160_real_time_clock = ToGeni32bitValue(mp_rtc_seconds_since_1970_act.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_RTC_SECONDS_SINCE_1970_SET:
    gai_16_0_set_real_time_clock = ToGeni32bitValue(mp_rtc_seconds_since_1970_set.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_PUMP_1_RUN_TIME_TO_SERVICE:
    gai_14_41_p1_time_to_service = ToGeni32bitValue(mp_pump_1_run_time_to_service.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    break;
  case SUBJECT_ID_PUMP_2_RUN_TIME_TO_SERVICE:
    gai_14_61_p2_time_to_service = ToGeni32bitValue(mp_pump_2_run_time_to_service.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    break;
  case SUBJECT_ID_FLOAT_SWITCH_DI_STATUS:
    gai_2_1_float_switch_status = ToGeni8bitValue(mp_float_switch_di_status.GetSubject(), GENI_CONVERT_ID_BITVAR_254);
    break;
  case SUBJECT_ID_SYSTEM_ALARM_STATUS_1:
    gai_11_37_pit_alarms1 = ToGeni16bitValue(mp_system_alarm_status_1.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_SYSTEM_ALARM_STATUS_2:
    gai_11_38_pit_alarms2 = ToGeni16bitValue(mp_system_alarm_status_2.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_SYSTEM_ALARM_STATUS_3:
    gai_11_39_pit_alarms3 = ToGeni16bitValue(mp_system_alarm_status_3.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_SYSTEM_WARNING_STATUS_1:
    gai_11_40_pit_warn1 = ToGeni16bitValue(mp_system_warning_status_1.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_SYSTEM_WARNING_STATUS_2:
    gai_11_41_pit_warn2 = ToGeni16bitValue(mp_system_warning_status_2.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_SYSTEM_WARNING_STATUS_3:
    gai_11_42_pit_warn3 = ToGeni16bitValue(mp_system_warning_status_3.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_PUMP_1_ALARM_STATUS_1:
    gai_11_77_p1_alarms1 = ToGeni16bitValue(mp_pump_1_alarm_status_1.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_PUMP_1_ALARM_STATUS_2:
    gai_11_78_p1_alarms2 = ToGeni16bitValue(mp_pump_1_alarm_status_2.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_PUMP_1_ALARM_STATUS_3:
    gai_11_79_p1_alarms3 = ToGeni16bitValue(mp_pump_1_alarm_status_3.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_PUMP_1_WARNING_STATUS_1:
    gai_11_80_p1_warn1 = ToGeni16bitValue(mp_pump_1_warning_status_1.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_PUMP_1_WARNING_STATUS_2:
    gai_11_81_p1_warn2 = ToGeni16bitValue(mp_pump_1_warning_status_2.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_PUMP_1_WARNING_STATUS_3:
    gai_11_82_p1_warn3 = ToGeni16bitValue(mp_pump_1_warning_status_3.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_PUMP_2_ALARM_STATUS_1:
    gai_11_107_p2_alarms1 = ToGeni16bitValue(mp_pump_2_alarm_status_1.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_PUMP_2_ALARM_STATUS_2:
    gai_11_108_p2_alarms2 = ToGeni16bitValue(mp_pump_2_alarm_status_2.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_PUMP_2_ALARM_STATUS_3:
    gai_11_109_p2_alarms3 = ToGeni16bitValue(mp_pump_2_alarm_status_3.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_PUMP_2_WARNING_STATUS_1:
    gai_11_110_p2_warn1 = ToGeni16bitValue(mp_pump_2_warning_status_1.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_PUMP_2_WARNING_STATUS_2:
    gai_11_111_p2_warn2 = ToGeni16bitValue(mp_pump_2_warning_status_2.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_PUMP_2_WARNING_STATUS_3:
    gai_11_112_p2_warn3 = ToGeni16bitValue(mp_pump_2_warning_status_3.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_PIT_LEVEL_SIM_ENABLED:
    gai_4_87_pit_level_sim_enabled = ToGeni8bitValue(mp_pit_level_sim_enabled.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_SCADA_PIN_CODE_ENABLED:
    gai_2_11_scada_pin_code_enabled = ToGeni8bitValue(mp_scada_pin_code_enabled.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_EVENT_CODE_SIM:
    gai_5_32_event_code_sim = ToGeni8bitValue(mp_event_code_sim.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_EVENT_ACTION_TYPE_SIM:
    gai_5_36_event_source_sim = ToGeni8bitValue(mp_event_action_type_sim.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_EVENT_RESET_TYPE_SIM:
    gai_5_37_event_type_and_cond_sim = ToGeni8bitValue(mp_event_reset_type_sim.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_EVENT_SIM_ACTIVATE:
    gai_5_35_event_sim_activate = ToGeni8bitValue(mp_event_sim_activate.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_EVENT_LOG_LATEST_ID:
    gai_11_43_event_log_latest_id = ToGeni16bitValue(mp_event_log_latest_id.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case SUBJECT_ID_EVENT_LOG_CLEAR_ID:
    gai_13_0_event_log_clear_id = ToGeni16bitValue(mp_event_log_clear_id.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case SUBJECT_ID_LATEST_VALUE_MOTOR_CURRENT_PUMP_1:
    gai_11_69_p1_latest_current = ToGeni16bitValue(mp_latest_value_motor_current_pump_1.GetSubject(), GENI_CONVERT_ID_CURRENT_DOT1A);
    break;
  case SUBJECT_ID_LATEST_VALUE_MOTOR_CURRENT_PUMP_2:
    gai_11_99_p2_latest_current = ToGeni16bitValue(mp_latest_value_motor_current_pump_2.GetSubject(), GENI_CONVERT_ID_CURRENT_DOT1A);
    break;
  case SUBJECT_ID_PUMPED_VOLUME_TODAY_LOG:
    gai_11_11_pit_pumped_volume_today = ToGeni16bitValue(mp_pumped_volume_today_log.GetSubject(), GENI_CONVERT_ID_VOLUME_DOT1M3);
    break;
  case SUBJECT_ID_OVERFLOW_VOLUME_TODAY_LOG:
    gai_11_25_pit_overflow_volume_today = ToGeni16bitValue(mp_overflow_volume_today_log.GetSubject(), GENI_CONVERT_ID_VOLUME_DOT1M3);
    break;
  case SUBJECT_ID_OVERFLOW_COUNT_TODAY_LOG:
    gai_11_31_pit_overflow_cnt_today = ToGeni16bitValue(mp_overflow_count_today_log.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_OVERFLOW_TIME_TODAY_LOG:
    gai_11_28_pit_overflow_time_today = ToGeni16bitValue(mp_overflow_time_today_log.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    break;
  case SUBJECT_ID_ENERGY_CONSUMPTION_TODAY_LOG:
    gai_11_8_pit_energy_today = ToGeni16bitValue(mp_energy_consumption_today_log.GetSubject(), GENI_CONVERT_ID_ENERGY_KWH_DOT1KWH);
    break;
  case SUBJECT_ID_PUMP_1_OPERATION_TIME_TODAY_LOG:
    gai_11_61_p1_opr_time_today = ToGeni16bitValue(mp_pump_1_operation_time_today_log.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    break;
  case SUBJECT_ID_PUMP_2_OPERATION_TIME_TODAY_LOG:
    gai_11_91_p2_opr_time_today = ToGeni16bitValue(mp_pump_2_operation_time_today_log.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    break;
  case SUBJECT_ID_PUMP_1_NO_OF_STARTS_TODAY_LOG:
    gai_11_64_p1_start_cnt_today = ToGeni16bitValue(mp_pump_1_no_of_starts_today_log.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_PUMP_2_NO_OF_STARTS_TODAY_LOG:
    gai_11_94_p2_start_cnt_today = ToGeni16bitValue(mp_pump_2_no_of_starts_today_log.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_DAY_LOGGING_START_HOUR:
    gai_2_8_day_cnt_zero_time = ToGeni8bitValue(mp_day_logging_start_hour.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_CIU_COMMUNICATION:
    gai_5_56_cim_heartbeat = ToGeni8bitValue(mp_ciu_communication.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case SUBJECT_ID_COMMUNICATION_CARD_RECEIVED:
    gai_5_57_cim_type = ToGeni8bitValue(mp_communication_card_received.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_GSM_STATE:
    gai_5_55_gsm_state = ToGeni8bitValue(mp_gsm_state.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_DEVICE_TYPE_CODE_SIM:
    gai_5_33_device_type_code_sim_id = ToGeni8bitValue(mp_device_type_code_sim.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case SUBJECT_ID_DEVICE_NO_SIM:
    gai_5_34_device_no_sim_id = ToGeni8bitValue(mp_device_no_sim.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case SUBJECT_ID_DISPLAY_CURRENT_NO_OF_FLOAT_SWITCHES:
    gai_2_0_no_of_float_switches = ToGeni8bitValue(mp_display_current_no_of_float_switches.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_RESULTING_VALUE_WATER_IN_OIL_PUMP_1:
    gai_11_71_p1_water_in_oil = ToGeni16bitValue(mp_resulting_value_water_in_oil_pump_1.GetSubject(), GENI_CONVERT_ID_PERCENTAGE_DOT1PCT);
    break;
  case SUBJECT_ID_RESULTING_VALUE_WATER_IN_OIL_PUMP_2:
    gai_11_101_p2_water_in_oil = ToGeni16bitValue(mp_resulting_value_water_in_oil_pump_2.GetSubject(), GENI_CONVERT_ID_PERCENTAGE_DOT1PCT);
    break;
  case SUBJECT_ID_UPS_VOLTAGE_ACT:
    gai_2_76_battery_voltage = ToGeni8bitValue(mp_ups_voltage_act.GetSubject(), GENI_CONVERT_ID_VOLTAGE_DOT1V);
    break;
  case SUBJECT_ID_RTC_YEAR_SET:
    gai_5_10_rtc_year_set = ToGeni8bitValue(mp_rtc_year_set.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_RTC_MONTH_SET:
    gai_5_11_rtc_month_set = ToGeni8bitValue(mp_rtc_month_set.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_RTC_DAY_SET:
    gai_5_12_rtc_day_set = ToGeni8bitValue(mp_rtc_day_set.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_RTC_HOUR_SET:
    gai_5_13_rtc_hour_set = ToGeni8bitValue(mp_rtc_hour_set.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_RTC_MINUTE_SET:
    gai_5_14_rtc_minute_set = ToGeni8bitValue(mp_rtc_minute_set.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_RTC_SECOND_SET:
    gai_5_15_rtc_second_set = ToGeni8bitValue(mp_rtc_second_set.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_DEMO_SUITCASE_MODE_ENABLED:
    gai_4_85_demo_suitcase_mode_enabled = ToGeni8bitValue(mp_demo_suitcase_mode_enabled.GetSubject(), GENI_CONVERT_ID_BITVAR_254);
    break;
  case SUBJECT_ID_ANA_OUT_1_CONF_FUNC:
    gai_4_110_ana_out_1_conf_func = ToGeni8bitValue(mp_ana_out_1_conf_func.GetSubject(), GENI_CONVERT_ID_BITVAR_254);
    break;
  case SUBJECT_ID_ANA_OUT_2_CONF_FUNC:
    gai_4_111_ana_out_2_conf_func = ToGeni8bitValue(mp_ana_out_2_conf_func.GetSubject(), GENI_CONVERT_ID_BITVAR_254);
    break;
  case SUBJECT_ID_ANA_OUT_3_CONF_FUNC:
    gai_4_112_ana_out_3_conf_func = ToGeni8bitValue(mp_ana_out_3_conf_func.GetSubject(), GENI_CONVERT_ID_BITVAR_254);
    break;
  case SUBJECT_ID_ANA_OUT_4_CONF_FUNC:
    gai_4_113_ana_out_4_conf_func = ToGeni8bitValue(mp_ana_out_4_conf_func.GetSubject(), GENI_CONVERT_ID_BITVAR_254);
    break;
  case SUBJECT_ID_ANA_OUT_5_CONF_FUNC:
    gai_4_114_ana_out_5_conf_func = ToGeni8bitValue(mp_ana_out_5_conf_func.GetSubject(), GENI_CONVERT_ID_BITVAR_254);
    break;
  case SUBJECT_ID_ANA_OUT_6_CONF_FUNC:
    gai_4_115_ana_out_6_conf_func = ToGeni8bitValue(mp_ana_out_6_conf_func.GetSubject(), GENI_CONVERT_ID_BITVAR_254);
    break;
  case SUBJECT_ID_MEASURED_VALUE_USER_DEFINED_SOURCE_1:
    gai_11_45_user_ana_in_1 = ToGeni16bitValue(mp_measured_value_user_defined_source_1.GetSubject(), GENI_CONVERT_ID_PERCENTAGE_DOT1PCT);
    break;
  case SUBJECT_ID_MEASURED_VALUE_USER_DEFINED_SOURCE_2:
    gai_11_46_user_ana_in_2 = ToGeni16bitValue(mp_measured_value_user_defined_source_2.GetSubject(), GENI_CONVERT_ID_PERCENTAGE_DOT1PCT);
    break;
  case SUBJECT_ID_MEASURED_VALUE_USER_DEFINED_SOURCE_3:
    gai_11_47_user_ana_in_3 = ToGeni16bitValue(mp_measured_value_user_defined_source_3.GetSubject(), GENI_CONVERT_ID_PERCENTAGE_DOT1PCT);
    break;
  case SUBJECT_ID_SIGNAL_LEVEL_ACT_GENI:
    gai_2_25_signal_level_act = ToGeni8bitValue(mp_signal_level_act_geni.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case SUBJECT_ID_SIGNAL_LEVEL_AVG_GENI:
    gai_2_26_signal_level_avg = ToGeni8bitValue(mp_signal_level_avg_geni.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case SUBJECT_ID_LATEST_VALUE_MOTOR_CURRENT_PUMP_3:
    gai_11_129_p3_latest_current = ToGeni16bitValue(mp_latest_value_motor_current_pump_3.GetSubject(), GENI_CONVERT_ID_CURRENT_DOT1A);
    break;
  case SUBJECT_ID_PUMP_3_CALCULATED_FLOW_FILTERED:
    gai_11_126_p3_flow = ToGeni16bitValue(mp_pump_3_calculated_flow_filtered.GetSubject(), GENI_CONVERT_ID_FLOW_DOT1LS);
    break;
  case SUBJECT_ID_PUMP_3_CALCULATED_FLOW_RAW:
    gai_11_127_p3_latest_flow = ToGeni16bitValue(mp_pump_3_calculated_flow_raw.GetSubject(), GENI_CONVERT_ID_FLOW_DOT1LS);
    break;
  case SUBJECT_ID_RESULTING_VALUE_WATER_IN_OIL_PUMP_3:
    gai_11_131_p3_water_in_oil = ToGeni16bitValue(mp_resulting_value_water_in_oil_pump_3.GetSubject(), GENI_CONVERT_ID_PERCENTAGE_DOT1PCT);
    break;
  case SUBJECT_ID_START_LEVEL_PUMP_3:
    gai_12_7_start_level_p3 = ToGeni16bitValue(mp_start_level_pump_3.GetSubject(), GENI_CONVERT_ID_HEAD_DIST_DOT01M);
    break;
  case SUBJECT_ID_STOP_LEVEL_PUMP_3:
    gai_12_13_stop_level_p3 = ToGeni16bitValue(mp_stop_level_pump_3.GetSubject(), GENI_CONVERT_ID_HEAD_DIST_DOT01M);
    break;
  case SUBJECT_ID_PUMP_3_ALARM_STATUS_1:
    gai_11_137_p3_alarms1 = ToGeni16bitValue(mp_pump_3_alarm_status_1.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_PUMP_3_ALARM_STATUS_2:
    gai_11_138_p3_alarms2 = ToGeni16bitValue(mp_pump_3_alarm_status_2.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_PUMP_3_ALARM_STATUS_3:
    gai_11_139_p3_alarms3 = ToGeni16bitValue(mp_pump_3_alarm_status_3.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_PUMP_3_LATEST_RUNTIME:
    gai_11_122_p3_latest_runtime = ToGeni16bitValue(mp_pump_3_latest_runtime.GetSubject(), GENI_CONVERT_ID_TIME_1SEC);
    break;
  case SUBJECT_ID_PUMP_3_NO_OF_STARTS_TODAY_LOG:
    gai_11_124_p3_start_cnt_today = ToGeni16bitValue(mp_pump_3_no_of_starts_today_log.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_PUMP_3_NO_OF_STARTS_YESTERDAY_LOG:
    gai_11_123_p3_start_cnt_yesterday = ToGeni16bitValue(mp_pump_3_no_of_starts_yesterday_log.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_PUMP_3_OPERATION_TIME_TODAY_LOG:
    gai_11_121_p3_opr_time_today = ToGeni16bitValue(mp_pump_3_operation_time_today_log.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    break;
  case SUBJECT_ID_PUMP_3_OPERATION_TIME_YESTERDAY_LOG:
    gai_11_120_p3_opr_time_yesterday = ToGeni16bitValue(mp_pump_3_operation_time_yesterday_log.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    break;
  case SUBJECT_ID_PUMP_3_RUN_TIME:
    gai_14_80_p3_opr_time = ToGeni32bitValue(mp_pump_3_run_time.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    break;
  case SUBJECT_ID_PUMP_3_RUN_TIME_TO_SERVICE:
    gai_14_81_p3_time_to_service = ToGeni32bitValue(mp_pump_3_run_time_to_service.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    break;
  case SUBJECT_ID_PUMP_3_START_CNT:
    gai_14_82_p3_start_cnt = ToGeni32bitValue(mp_pump_3_start_cnt.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_PUMP_3_STARTS_PR_HOUR:
    gai_11_125_p3_starts_pr_hour = ToGeni16bitValue(mp_pump_3_starts_pr_hour.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_PUMP_3_WARNING_STATUS_1:
    gai_11_140_p3_warn1 = ToGeni16bitValue(mp_pump_3_warning_status_1.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_PUMP_3_WARNING_STATUS_2:
    gai_11_141_p3_warn2 = ToGeni16bitValue(mp_pump_3_warning_status_2.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_PUMP_3_WARNING_STATUS_3:
    gai_11_142_p3_warn3 = ToGeni16bitValue(mp_pump_3_warning_status_3.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_LATEST_VALUE_MOTOR_CURRENT_PUMP_4:
    gai_11_159_p4_latest_current = ToGeni16bitValue(mp_latest_value_motor_current_pump_4.GetSubject(), GENI_CONVERT_ID_CURRENT_DOT1A);
    break;
  case SUBJECT_ID_PUMP_4_CALCULATED_FLOW_FILTERED:
    gai_11_156_p4_flow = ToGeni16bitValue(mp_pump_4_calculated_flow_filtered.GetSubject(), GENI_CONVERT_ID_FLOW_DOT1LS);
    break;
  case SUBJECT_ID_PUMP_4_CALCULATED_FLOW_RAW:
    gai_11_157_p4_latest_flow = ToGeni16bitValue(mp_pump_4_calculated_flow_raw.GetSubject(), GENI_CONVERT_ID_FLOW_DOT1LS);
    break;
  case SUBJECT_ID_RESULTING_VALUE_WATER_IN_OIL_PUMP_4:
    gai_11_161_p4_water_in_oil = ToGeni16bitValue(mp_resulting_value_water_in_oil_pump_4.GetSubject(), GENI_CONVERT_ID_PERCENTAGE_DOT1PCT);
    break;
  case SUBJECT_ID_START_LEVEL_PUMP_4:
    gai_12_8_start_level_p4 = ToGeni16bitValue(mp_start_level_pump_4.GetSubject(), GENI_CONVERT_ID_HEAD_DIST_DOT01M);
    break;
  case SUBJECT_ID_STOP_LEVEL_PUMP_4:
    gai_12_14_stop_level_p4 = ToGeni16bitValue(mp_stop_level_pump_4.GetSubject(), GENI_CONVERT_ID_HEAD_DIST_DOT01M);
    break;
  case SUBJECT_ID_PUMP_4_ALARM_STATUS_1:
    gai_11_167_p4_alarms1 = ToGeni16bitValue(mp_pump_4_alarm_status_1.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_PUMP_4_ALARM_STATUS_2:
    gai_11_168_p4_alarms2 = ToGeni16bitValue(mp_pump_4_alarm_status_2.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_PUMP_4_ALARM_STATUS_3:
    gai_11_169_p4_alarms3 = ToGeni16bitValue(mp_pump_4_alarm_status_3.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_PUMP_4_LATEST_RUNTIME:
    gai_11_152_p4_latest_runtime = ToGeni16bitValue(mp_pump_4_latest_runtime.GetSubject(), GENI_CONVERT_ID_TIME_1SEC);
    break;
  case SUBJECT_ID_PUMP_4_NO_OF_STARTS_TODAY_LOG:
    gai_11_154_p4_start_cnt_today = ToGeni16bitValue(mp_pump_4_no_of_starts_today_log.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_PUMP_4_NO_OF_STARTS_YESTERDAY_LOG:
    gai_11_153_p4_start_cnt_yesterday = ToGeni16bitValue(mp_pump_4_no_of_starts_yesterday_log.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_PUMP_4_OPERATION_TIME_TODAY_LOG:
    gai_11_151_p4_opr_time_today = ToGeni16bitValue(mp_pump_4_operation_time_today_log.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    break;
  case SUBJECT_ID_PUMP_4_OPERATION_TIME_YESTERDAY_LOG:
    gai_11_150_p4_opr_time_yesterday = ToGeni16bitValue(mp_pump_4_operation_time_yesterday_log.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    break;
  case SUBJECT_ID_PUMP_4_RUN_TIME:
    gai_14_100_p4_opr_time = ToGeni32bitValue(mp_pump_4_run_time.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    break;
  case SUBJECT_ID_PUMP_4_RUN_TIME_TO_SERVICE:
    gai_14_101_p4_time_to_service = ToGeni32bitValue(mp_pump_4_run_time_to_service.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    break;
  case SUBJECT_ID_PUMP_4_START_CNT:
    gai_14_102_p4_start_cnt = ToGeni32bitValue(mp_pump_4_start_cnt.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_PUMP_4_STARTS_PR_HOUR:
    gai_11_155_p4_starts_pr_hour = ToGeni16bitValue(mp_pump_4_starts_pr_hour.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_PUMP_4_WARNING_STATUS_1:
    gai_11_170_p4_warn1 = ToGeni16bitValue(mp_pump_4_warning_status_1.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_PUMP_4_WARNING_STATUS_2:
    gai_11_171_p4_warn2 = ToGeni16bitValue(mp_pump_4_warning_status_2.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_PUMP_4_WARNING_STATUS_3:
    gai_11_172_p4_warn3 = ToGeni16bitValue(mp_pump_4_warning_status_3.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_LATEST_VALUE_MOTOR_CURRENT_PUMP_5:
    gai_11_189_p5_latest_current = ToGeni16bitValue(mp_latest_value_motor_current_pump_5.GetSubject(), GENI_CONVERT_ID_CURRENT_DOT1A);
    break;
  case SUBJECT_ID_PUMP_5_CALCULATED_FLOW_FILTERED:
    gai_11_186_p5_flow = ToGeni16bitValue(mp_pump_5_calculated_flow_filtered.GetSubject(), GENI_CONVERT_ID_FLOW_DOT1LS);
    break;
  case SUBJECT_ID_PUMP_5_CALCULATED_FLOW_RAW:
    gai_11_187_p5_latest_flow = ToGeni16bitValue(mp_pump_5_calculated_flow_raw.GetSubject(), GENI_CONVERT_ID_FLOW_DOT1LS);
    break;
  case SUBJECT_ID_RESULTING_VALUE_WATER_IN_OIL_PUMP_5:
    gai_11_191_p5_water_in_oil = ToGeni16bitValue(mp_resulting_value_water_in_oil_pump_5.GetSubject(), GENI_CONVERT_ID_PERCENTAGE_DOT1PCT);
    break;
  case SUBJECT_ID_START_LEVEL_PUMP_5:
    gai_12_9_start_level_p5 = ToGeni16bitValue(mp_start_level_pump_5.GetSubject(), GENI_CONVERT_ID_HEAD_DIST_DOT01M);
    break;
  case SUBJECT_ID_STOP_LEVEL_PUMP_5:
    gai_12_15_stop_level_p5 = ToGeni16bitValue(mp_stop_level_pump_5.GetSubject(), GENI_CONVERT_ID_HEAD_DIST_DOT01M);
    break;
  case SUBJECT_ID_PUMP_5_ALARM_STATUS_1:
    gai_11_197_p5_alarms1 = ToGeni16bitValue(mp_pump_5_alarm_status_1.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_PUMP_5_ALARM_STATUS_2:
    gai_11_198_p5_alarms2 = ToGeni16bitValue(mp_pump_5_alarm_status_2.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_PUMP_5_ALARM_STATUS_3:
    gai_11_199_p5_alarms3 = ToGeni16bitValue(mp_pump_5_alarm_status_3.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_PUMP_5_LATEST_RUNTIME:
    gai_11_182_p5_latest_runtime = ToGeni16bitValue(mp_pump_5_latest_runtime.GetSubject(), GENI_CONVERT_ID_TIME_1SEC);
    break;
  case SUBJECT_ID_PUMP_5_NO_OF_STARTS_TODAY_LOG:
    gai_11_184_p5_start_cnt_today = ToGeni16bitValue(mp_pump_5_no_of_starts_today_log.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_PUMP_5_NO_OF_STARTS_YESTERDAY_LOG:
    gai_11_183_p5_start_cnt_yesterday = ToGeni16bitValue(mp_pump_5_no_of_starts_yesterday_log.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_PUMP_5_OPERATION_TIME_TODAY_LOG:
    gai_11_181_p5_opr_time_today = ToGeni16bitValue(mp_pump_5_operation_time_today_log.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    break;
  case SUBJECT_ID_PUMP_5_OPERATION_TIME_YESTERDAY_LOG:
    gai_11_180_p5_opr_time_yesterday = ToGeni16bitValue(mp_pump_5_operation_time_yesterday_log.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    break;
  case SUBJECT_ID_PUMP_5_RUN_TIME:
    gai_14_120_p5_opr_time = ToGeni32bitValue(mp_pump_5_run_time.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    break;
  case SUBJECT_ID_PUMP_5_RUN_TIME_TO_SERVICE:
    gai_14_121_p5_time_to_service = ToGeni32bitValue(mp_pump_5_run_time_to_service.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    break;
  case SUBJECT_ID_PUMP_5_START_CNT:
    gai_14_122_p5_start_cnt = ToGeni32bitValue(mp_pump_5_start_cnt.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_PUMP_5_STARTS_PR_HOUR:
    gai_11_185_p5_starts_pr_hour = ToGeni16bitValue(mp_pump_5_starts_pr_hour.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_PUMP_5_WARNING_STATUS_1:
    gai_11_200_p5_warn1 = ToGeni16bitValue(mp_pump_5_warning_status_1.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_PUMP_5_WARNING_STATUS_2:
    gai_11_201_p5_warn2 = ToGeni16bitValue(mp_pump_5_warning_status_2.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_PUMP_5_WARNING_STATUS_3:
    gai_11_202_p5_warn3 = ToGeni16bitValue(mp_pump_5_warning_status_3.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_LATEST_VALUE_MOTOR_CURRENT_PUMP_6:
    gai_11_219_p6_latest_current = ToGeni16bitValue(mp_latest_value_motor_current_pump_6.GetSubject(), GENI_CONVERT_ID_CURRENT_DOT1A);
    break;
  case SUBJECT_ID_PUMP_6_CALCULATED_FLOW_FILTERED:
    gai_11_216_p6_flow = ToGeni16bitValue(mp_pump_6_calculated_flow_filtered.GetSubject(), GENI_CONVERT_ID_FLOW_DOT1LS);
    break;
  case SUBJECT_ID_PUMP_6_CALCULATED_FLOW_RAW:
    gai_11_217_p6_latest_flow = ToGeni16bitValue(mp_pump_6_calculated_flow_raw.GetSubject(), GENI_CONVERT_ID_FLOW_DOT1LS);
    break;
  case SUBJECT_ID_RESULTING_VALUE_WATER_IN_OIL_PUMP_6:
    gai_11_221_p6_water_in_oil = ToGeni16bitValue(mp_resulting_value_water_in_oil_pump_6.GetSubject(), GENI_CONVERT_ID_PERCENTAGE_DOT1PCT);
    break;
  case SUBJECT_ID_START_LEVEL_PUMP_6:
    gai_12_10_start_level_p6 = ToGeni16bitValue(mp_start_level_pump_6.GetSubject(), GENI_CONVERT_ID_HEAD_DIST_DOT01M);
    break;
  case SUBJECT_ID_STOP_LEVEL_PUMP_6:
    gai_12_16_stop_level_p6 = ToGeni16bitValue(mp_stop_level_pump_6.GetSubject(), GENI_CONVERT_ID_HEAD_DIST_DOT01M);
    break;
  case SUBJECT_ID_PUMP_6_ALARM_STATUS_1:
    gai_11_227_p6_alarms1 = ToGeni16bitValue(mp_pump_6_alarm_status_1.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_PUMP_6_ALARM_STATUS_2:
    gai_11_228_p6_alarms2 = ToGeni16bitValue(mp_pump_6_alarm_status_2.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_PUMP_6_ALARM_STATUS_3:
    gai_11_229_p6_alarms3 = ToGeni16bitValue(mp_pump_6_alarm_status_3.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_PUMP_6_LATEST_RUNTIME:
    gai_11_212_p6_latest_runtime = ToGeni16bitValue(mp_pump_6_latest_runtime.GetSubject(), GENI_CONVERT_ID_TIME_1SEC);
    break;
  case SUBJECT_ID_PUMP_6_NO_OF_STARTS_TODAY_LOG:
    gai_11_214_p6_start_cnt_today = ToGeni16bitValue(mp_pump_6_no_of_starts_today_log.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_PUMP_6_NO_OF_STARTS_YESTERDAY_LOG:
    gai_11_213_p6_start_cnt_yesterday = ToGeni16bitValue(mp_pump_6_no_of_starts_yesterday_log.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_PUMP_6_OPERATION_TIME_TODAY_LOG:
    gai_11_211_p6_opr_time_today = ToGeni16bitValue(mp_pump_6_operation_time_today_log.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    break;
  case SUBJECT_ID_PUMP_6_OPERATION_TIME_YESTERDAY_LOG:
    gai_11_210_p6_opr_time_yesterday = ToGeni16bitValue(mp_pump_6_operation_time_yesterday_log.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    break;
  case SUBJECT_ID_PUMP_6_RUN_TIME:
    gai_14_140_p6_opr_time = ToGeni32bitValue(mp_pump_6_run_time.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    break;
  case SUBJECT_ID_PUMP_6_RUN_TIME_TO_SERVICE:
    gai_14_141_p6_time_to_service = ToGeni32bitValue(mp_pump_6_run_time_to_service.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    break;
  case SUBJECT_ID_PUMP_6_START_CNT:
    gai_14_142_p6_start_cnt = ToGeni32bitValue(mp_pump_6_start_cnt.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_PUMP_6_STARTS_PR_HOUR:
    gai_11_215_p6_starts_pr_hour = ToGeni16bitValue(mp_pump_6_starts_pr_hour.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_PUMP_6_WARNING_STATUS_1:
    gai_11_230_p6_warn1 = ToGeni16bitValue(mp_pump_6_warning_status_1.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_PUMP_6_WARNING_STATUS_2:
    gai_11_231_p6_warn2 = ToGeni16bitValue(mp_pump_6_warning_status_2.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_PUMP_6_WARNING_STATUS_3:
    gai_11_232_p6_warn3 = ToGeni16bitValue(mp_pump_6_warning_status_3.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_VFD_1_RUN_MODE:
    gai_4_122_control_mode_pump1 = ToGeni8bitValue(mp_vfd_1_run_mode.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case SUBJECT_ID_VFD_2_RUN_MODE:
    gai_4_123_control_mode_pump2 = ToGeni8bitValue(mp_vfd_2_run_mode.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case SUBJECT_ID_VFD_3_RUN_MODE:
    gai_4_124_control_mode_pump3 = ToGeni8bitValue(mp_vfd_3_run_mode.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case SUBJECT_ID_VFD_4_RUN_MODE:
    gai_4_125_control_mode_pump4 = ToGeni8bitValue(mp_vfd_4_run_mode.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case SUBJECT_ID_VFD_5_RUN_MODE:
    gai_4_126_control_mode_pump5 = ToGeni8bitValue(mp_vfd_5_run_mode.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case SUBJECT_ID_VFD_6_RUN_MODE:
    gai_4_127_control_mode_pump6 = ToGeni8bitValue(mp_vfd_6_run_mode.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case SUBJECT_ID_VFD_1_OUTPUT_FREQUENCY:
    gai_11_75_p1_freq = ToGeni16bitValue(mp_vfd_1_output_frequency.GetSubject(), GENI_CONVERT_ID_FREQUENCY_001HZ);
    break;
  case SUBJECT_ID_VFD_2_OUTPUT_FREQUENCY:
    gai_11_105_p2_freq = ToGeni16bitValue(mp_vfd_2_output_frequency.GetSubject(), GENI_CONVERT_ID_FREQUENCY_001HZ);
    break;
  case SUBJECT_ID_VFD_3_OUTPUT_FREQUENCY:
    gai_11_135_p3_freq = ToGeni16bitValue(mp_vfd_3_output_frequency.GetSubject(), GENI_CONVERT_ID_FREQUENCY_001HZ);
    break;
  case SUBJECT_ID_VFD_4_OUTPUT_FREQUENCY:
    gai_11_165_p4_freq = ToGeni16bitValue(mp_vfd_4_output_frequency.GetSubject(), GENI_CONVERT_ID_FREQUENCY_001HZ);
    break;
  case SUBJECT_ID_VFD_5_OUTPUT_FREQUENCY:
    gai_11_195_p5_freq = ToGeni16bitValue(mp_vfd_5_output_frequency.GetSubject(), GENI_CONVERT_ID_FREQUENCY_001HZ);
    break;
  case SUBJECT_ID_VFD_6_OUTPUT_FREQUENCY:
    gai_11_225_p6_freq = ToGeni16bitValue(mp_vfd_6_output_frequency.GetSubject(), GENI_CONVERT_ID_FREQUENCY_001HZ);
    break;
  case SUBJECT_ID_VFD_1_STATE:
    gai_11_85_p1_vfd_mode = ToGeni16bitValue(mp_vfd_1_state.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_VFD_2_STATE:
    gai_11_115_p2_vfd_mode = ToGeni16bitValue(mp_vfd_2_state.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_VFD_3_STATE:
    gai_11_145_p3_vfd_mode = ToGeni16bitValue(mp_vfd_3_state.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_VFD_4_STATE:
    gai_11_175_p4_vfd_mode = ToGeni16bitValue(mp_vfd_4_state.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_VFD_5_STATE:
    gai_11_205_p5_vfd_mode = ToGeni16bitValue(mp_vfd_5_state.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_VFD_6_STATE:
    gai_11_235_p6_vfd_mode = ToGeni16bitValue(mp_vfd_6_state.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_MP204_1_COS_PHI:
    gai_11_74_p1_cosine_phi = ToGeni16bitValue(mp_mp204_1_cos_phi.GetSubject(), GENI_CONVERT_ID_SCALE_DOT01);
    break;
  case SUBJECT_ID_MP204_2_COS_PHI:
    gai_11_104_p2_cosine_phi = ToGeni16bitValue(mp_mp204_2_cos_phi.GetSubject(), GENI_CONVERT_ID_SCALE_DOT01);
    break;
  case SUBJECT_ID_MP204_3_COS_PHI:
    gai_11_134_p3_cosine_phi = ToGeni16bitValue(mp_mp204_3_cos_phi.GetSubject(), GENI_CONVERT_ID_SCALE_DOT01);
    break;
  case SUBJECT_ID_MP204_4_COS_PHI:
    gai_11_164_p4_cosine_phi = ToGeni16bitValue(mp_mp204_4_cos_phi.GetSubject(), GENI_CONVERT_ID_SCALE_DOT01);
    break;
  case SUBJECT_ID_MP204_5_COS_PHI:
    gai_11_194_p5_cosine_phi = ToGeni16bitValue(mp_mp204_5_cos_phi.GetSubject(), GENI_CONVERT_ID_SCALE_DOT01);
    break;
  case SUBJECT_ID_MP204_6_COS_PHI:
    gai_11_224_p6_cosine_phi = ToGeni16bitValue(mp_mp204_6_cos_phi.GetSubject(), GENI_CONVERT_ID_SCALE_DOT01);
    break;
  case SUBJECT_ID_VFD_1_FIXED_FREQUENCY:
    gai_12_30_fixed_freq_pump1 = ToGeni16bitValue(mp_vfd_1_fixed_frequency.GetSubject(), GENI_CONVERT_ID_FREQUENCY_001HZ);
    break;
  case SUBJECT_ID_VFD_2_FIXED_FREQUENCY:
    gai_12_31_fixed_freq_pump2 = ToGeni16bitValue(mp_vfd_2_fixed_frequency.GetSubject(), GENI_CONVERT_ID_FREQUENCY_001HZ);
    break;
  case SUBJECT_ID_VFD_3_FIXED_FREQUENCY:
    gai_12_32_fixed_freq_pump3 = ToGeni16bitValue(mp_vfd_3_fixed_frequency.GetSubject(), GENI_CONVERT_ID_FREQUENCY_001HZ);
    break;
  case SUBJECT_ID_VFD_4_FIXED_FREQUENCY:
    gai_12_33_fixed_freq_pump4 = ToGeni16bitValue(mp_vfd_4_fixed_frequency.GetSubject(), GENI_CONVERT_ID_FREQUENCY_001HZ);
    break;
  case SUBJECT_ID_VFD_5_FIXED_FREQUENCY:
    gai_12_34_fixed_freq_pump5 = ToGeni16bitValue(mp_vfd_5_fixed_frequency.GetSubject(), GENI_CONVERT_ID_FREQUENCY_001HZ);
    break;
  case SUBJECT_ID_VFD_6_FIXED_FREQUENCY:
    gai_12_35_fixed_freq_pump6 = ToGeni16bitValue(mp_vfd_6_fixed_frequency.GetSubject(), GENI_CONVERT_ID_FREQUENCY_001HZ);
    break;
  case SUBJECT_ID_CUE_PUMP_1_TORQUE:
    gai_11_86_p1_torque = ToGeni16bitValue(mp_cue_pump_1_torque.GetSubject(), GENI_CONVERT_ID_TORQUE_DOT1NM);
    break;
  case SUBJECT_ID_CUE_PUMP_2_TORQUE:
    gai_11_116_p2_torque = ToGeni16bitValue(mp_cue_pump_2_torque.GetSubject(), GENI_CONVERT_ID_TORQUE_DOT1NM);
    break;
  case SUBJECT_ID_CUE_PUMP_3_TORQUE:
    gai_11_146_p3_torque = ToGeni16bitValue(mp_cue_pump_3_torque.GetSubject(), GENI_CONVERT_ID_TORQUE_DOT1NM);
    break;
  case SUBJECT_ID_CUE_PUMP_4_TORQUE:
    gai_11_176_p4_torque = ToGeni16bitValue(mp_cue_pump_4_torque.GetSubject(), GENI_CONVERT_ID_TORQUE_DOT1NM);
    break;
  case SUBJECT_ID_CUE_PUMP_5_TORQUE:
    gai_11_206_p5_torque = ToGeni16bitValue(mp_cue_pump_5_torque.GetSubject(), GENI_CONVERT_ID_TORQUE_DOT1NM);
    break;
  case SUBJECT_ID_CUE_PUMP_6_TORQUE:
    gai_11_236_p6_torque = ToGeni16bitValue(mp_cue_pump_6_torque.GetSubject(), GENI_CONVERT_ID_TORQUE_DOT1NM);
    break;
  case SUBJECT_ID_FIRST_PUMP_IN_PUMP_GROUP_2:
    gai_2_12_first_group_2_pump = ToGeni8bitValue(mp_first_pump_in_pump_group_2.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_VFD_1_PID_AI_FEEDBACK:
    gai_4_128_pid_feedback_pump1 = ToGeni8bitValue(mp_vfd_1_pid_ai_feedback.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case SUBJECT_ID_VFD_2_PID_AI_FEEDBACK:
    gai_4_129_pid_feedback_pump2 = ToGeni8bitValue(mp_vfd_2_pid_ai_feedback.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case SUBJECT_ID_VFD_3_PID_AI_FEEDBACK:
    gai_4_130_pid_feedback_pump3 = ToGeni8bitValue(mp_vfd_3_pid_ai_feedback.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case SUBJECT_ID_VFD_4_PID_AI_FEEDBACK:
    gai_4_131_pid_feedback_pump4 = ToGeni8bitValue(mp_vfd_4_pid_ai_feedback.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case SUBJECT_ID_VFD_5_PID_AI_FEEDBACK:
    gai_4_132_pid_feedback_pump5 = ToGeni8bitValue(mp_vfd_5_pid_ai_feedback.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case SUBJECT_ID_VFD_6_PID_AI_FEEDBACK:
    gai_4_133_pid_feedback_pump6 = ToGeni8bitValue(mp_vfd_6_pid_ai_feedback.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case SUBJECT_ID_VFD_1_PID_AI_SETPOINT:
    gai_4_140_ai_setpoint_pump1 = ToGeni8bitValue(mp_vfd_1_pid_ai_setpoint.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case SUBJECT_ID_VFD_2_PID_AI_SETPOINT:
    gai_4_141_ai_setpoint_pump2 = ToGeni8bitValue(mp_vfd_2_pid_ai_setpoint.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case SUBJECT_ID_VFD_3_PID_AI_SETPOINT:
    gai_4_142_ai_setpoint_pump3 = ToGeni8bitValue(mp_vfd_3_pid_ai_setpoint.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case SUBJECT_ID_VFD_4_PID_AI_SETPOINT:
    gai_4_143_ai_setpoint_pump4 = ToGeni8bitValue(mp_vfd_4_pid_ai_setpoint.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case SUBJECT_ID_VFD_5_PID_AI_SETPOINT:
    gai_4_144_ai_setpoint_pump5 = ToGeni8bitValue(mp_vfd_5_pid_ai_setpoint.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case SUBJECT_ID_VFD_6_PID_AI_SETPOINT:
    gai_4_145_ai_setpoint_pump6 = ToGeni8bitValue(mp_vfd_6_pid_ai_setpoint.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case SUBJECT_ID_VFD_1_PID_FIXED_SETPOINT:
    gai_4_146_fixed_setpoint_pump1 = ToGeni8bitValue(mp_vfd_1_pid_fixed_setpoint.GetSubject(), GENI_CONVERT_ID_PERCENTAGE_1PCT);
    break;
  case SUBJECT_ID_VFD_2_PID_FIXED_SETPOINT:
    gai_4_147_fixed_setpoint_pump2 = ToGeni8bitValue(mp_vfd_2_pid_fixed_setpoint.GetSubject(), GENI_CONVERT_ID_PERCENTAGE_1PCT);
    break;
  case SUBJECT_ID_VFD_3_PID_FIXED_SETPOINT:
    gai_4_148_fixed_setpoint_pump3 = ToGeni8bitValue(mp_vfd_3_pid_fixed_setpoint.GetSubject(), GENI_CONVERT_ID_PERCENTAGE_1PCT);
    break;
  case SUBJECT_ID_VFD_4_PID_FIXED_SETPOINT:
    gai_4_149_fixed_setpoint_pump4 = ToGeni8bitValue(mp_vfd_4_pid_fixed_setpoint.GetSubject(), GENI_CONVERT_ID_PERCENTAGE_1PCT);
    break;
  case SUBJECT_ID_VFD_5_PID_FIXED_SETPOINT:
    gai_4_150_fixed_setpoint_pump5 = ToGeni8bitValue(mp_vfd_5_pid_fixed_setpoint.GetSubject(), GENI_CONVERT_ID_PERCENTAGE_1PCT);
    break;
  case SUBJECT_ID_VFD_6_PID_FIXED_SETPOINT:
    gai_4_151_fixed_setpoint_pump6 = ToGeni8bitValue(mp_vfd_6_pid_fixed_setpoint.GetSubject(), GENI_CONVERT_ID_PERCENTAGE_1PCT);
    break;
  case SUBJECT_ID_VFD_1_PID_SETPOINT_TYPE:
    gai_4_134_set_point_type_pump1 = ToGeni8bitValue(mp_vfd_1_pid_setpoint_type.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case SUBJECT_ID_VFD_2_PID_SETPOINT_TYPE:
    gai_4_135_set_point_type_pump2 = ToGeni8bitValue(mp_vfd_2_pid_setpoint_type.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case SUBJECT_ID_VFD_3_PID_SETPOINT_TYPE:
    gai_4_136_set_point_type_pump3 = ToGeni8bitValue(mp_vfd_3_pid_setpoint_type.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case SUBJECT_ID_VFD_4_PID_SETPOINT_TYPE:
    gai_4_137_set_point_type_pump4 = ToGeni8bitValue(mp_vfd_4_pid_setpoint_type.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case SUBJECT_ID_VFD_5_PID_SETPOINT_TYPE:
    gai_4_138_set_point_type_pump5 = ToGeni8bitValue(mp_vfd_5_pid_setpoint_type.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case SUBJECT_ID_VFD_6_PID_SETPOINT_TYPE:
    gai_4_139_set_point_type_pump6 = ToGeni8bitValue(mp_vfd_6_pid_setpoint_type.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case SUBJECT_ID_PUMP_1_MAINS_VOLTAGE:
    gai_11_83_p1_voltage = ToGeni16bitValue(mp_pump_1_mains_voltage.GetSubject(), GENI_CONVERT_ID_VOLTAGE_DOT1V);
    break;
  case SUBJECT_ID_PUMP_2_MAINS_VOLTAGE:
    gai_11_113_p2_voltage = ToGeni16bitValue(mp_pump_2_mains_voltage.GetSubject(), GENI_CONVERT_ID_VOLTAGE_DOT1V);
    break;
  case SUBJECT_ID_PUMP_3_MAINS_VOLTAGE:
    gai_11_143_p3_voltage = ToGeni16bitValue(mp_pump_3_mains_voltage.GetSubject(), GENI_CONVERT_ID_VOLTAGE_DOT1V);
    break;
  case SUBJECT_ID_PUMP_4_MAINS_VOLTAGE:
    gai_11_173_p4_voltage = ToGeni16bitValue(mp_pump_4_mains_voltage.GetSubject(), GENI_CONVERT_ID_VOLTAGE_DOT1V);
    break;
  case SUBJECT_ID_PUMP_5_MAINS_VOLTAGE:
    gai_11_203_p5_voltage = ToGeni16bitValue(mp_pump_5_mains_voltage.GetSubject(), GENI_CONVERT_ID_VOLTAGE_DOT1V);
    break;
  case SUBJECT_ID_PUMP_6_MAINS_VOLTAGE:
    gai_11_233_p6_voltage = ToGeni16bitValue(mp_pump_6_mains_voltage.GetSubject(), GENI_CONVERT_ID_VOLTAGE_DOT1V);
    break;
  case SUBJECT_ID_PUMP_1_TEMPERATURE:
    gai_11_72_p1_motor_temp1 = ToGeni16bitValue(mp_pump_1_temperature.GetSubject(), GENI_CONVERT_ID_TEMPERATURE_1C);
    break;
  case SUBJECT_ID_PUMP_2_TEMPERATURE:
    gai_11_102_p2_motor_temp = ToGeni16bitValue(mp_pump_2_temperature.GetSubject(), GENI_CONVERT_ID_TEMPERATURE_1C);
    break;
  case SUBJECT_ID_PUMP_3_TEMPERATURE:
    gai_11_132_p3_motor_temp = ToGeni16bitValue(mp_pump_3_temperature.GetSubject(), GENI_CONVERT_ID_TEMPERATURE_1C);
    break;
  case SUBJECT_ID_PUMP_4_TEMPERATURE:
    gai_11_162_p4_motor_temp = ToGeni16bitValue(mp_pump_4_temperature.GetSubject(), GENI_CONVERT_ID_TEMPERATURE_1C);
    break;
  case SUBJECT_ID_PUMP_5_TEMPERATURE:
    gai_11_192_p5_motor_temp = ToGeni16bitValue(mp_pump_5_temperature.GetSubject(), GENI_CONVERT_ID_TEMPERATURE_1C);
    break;
  case SUBJECT_ID_PUMP_6_TEMPERATURE:
    gai_11_222_p6_motor_temp = ToGeni16bitValue(mp_pump_6_temperature.GetSubject(), GENI_CONVERT_ID_TEMPERATURE_1C);
    break;
  case SUBJECT_ID_PUMP_1_POWER:
    gai_14_43_p1_power = ToGeni32bitValue(mp_pump_1_power.GetSubject(), GENI_CONVERT_ID_POWER_1W);
    break;
  case SUBJECT_ID_PUMP_2_POWER:
    gai_14_63_p2_power = ToGeni32bitValue(mp_pump_2_power.GetSubject(), GENI_CONVERT_ID_POWER_1W);
    break;
  case SUBJECT_ID_PUMP_3_POWER:
    gai_14_83_p3_power = ToGeni32bitValue(mp_pump_3_power.GetSubject(), GENI_CONVERT_ID_POWER_1W);
    break;
  case SUBJECT_ID_PUMP_4_POWER:
    gai_14_103_p4_power = ToGeni32bitValue(mp_pump_4_power.GetSubject(), GENI_CONVERT_ID_POWER_1W);
    break;
  case SUBJECT_ID_PUMP_5_POWER:
    gai_14_123_p5_power = ToGeni32bitValue(mp_pump_5_power.GetSubject(), GENI_CONVERT_ID_POWER_1W);
    break;
  case SUBJECT_ID_PUMP_6_POWER:
    gai_14_143_p6_power = ToGeni32bitValue(mp_pump_6_power.GetSubject(), GENI_CONVERT_ID_POWER_1W);
    break;
  case SUBJECT_ID_ANA_OUT_USER_1:
    gai_13_1_ana_out_user_1 = ToGeni16bitValue(mp_ana_out_user_1.GetSubject(), GENI_CONVERT_ID_PERCENTAGE_DOT1PCT);
    break;
  case SUBJECT_ID_ANA_OUT_USER_2:
    gai_13_2_ana_out_user_2 = ToGeni16bitValue(mp_ana_out_user_2.GetSubject(), GENI_CONVERT_ID_PERCENTAGE_DOT1PCT);
    break;
  case SUBJECT_ID_ANA_OUT_USER_3:
    gai_13_3_ana_out_user_3 = ToGeni16bitValue(mp_ana_out_user_3.GetSubject(), GENI_CONVERT_ID_PERCENTAGE_DOT1PCT);
    break;
  case SUBJECT_ID_PUMP_RUN_TIME_0_PUMPS:
    gai_14_9_pit_0_pumps_opr_time = ToGeni32bitValue(mp_pump_run_time_0_pumps.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    break;
  case SUBJECT_ID_PUMP_RUN_TIME_1_PUMPS:
    gai_14_10_pit_1_pumps_opr_time = ToGeni32bitValue(mp_pump_run_time_1_pumps.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    break;
  case SUBJECT_ID_PUMP_RUN_TIME_2_PUMPS:
    gai_14_4_pit_2_pumps_opr_time = ToGeni32bitValue(mp_pump_run_time_2_pumps.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    break;
  case SUBJECT_ID_PUMP_RUN_TIME_3_PUMPS:
    gai_14_5_pit_3_pumps_opr_time = ToGeni32bitValue(mp_pump_run_time_3_pumps.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    break;
  case SUBJECT_ID_PUMP_RUN_TIME_4_PUMPS:
    gai_14_6_pit_4_pumps_opr_time = ToGeni32bitValue(mp_pump_run_time_4_pumps.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    break;
  case SUBJECT_ID_PUMP_RUN_TIME_5_PUMPS:
    gai_14_7_pit_5_pumps_opr_time = ToGeni32bitValue(mp_pump_run_time_5_pumps.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    break;
  case SUBJECT_ID_PUMP_RUN_TIME_6_PUMPS:
    gai_14_8_pit_6_pumps_opr_time = ToGeni32bitValue(mp_pump_run_time_6_pumps.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    break;
  case SUBJECT_ID_MP204_1_CURRENT_ASYMMETRY:
    gai_11_87_p1_i_asym = ToGeni16bitValue(mp_mp204_1_current_asymmetry.GetSubject(), GENI_CONVERT_ID_PERCENTAGE_DOT1PCT);
    break;
  case SUBJECT_ID_MP204_2_CURRENT_ASYMMETRY:
    gai_11_117_p2_i_asym = ToGeni16bitValue(mp_mp204_2_current_asymmetry.GetSubject(), GENI_CONVERT_ID_PERCENTAGE_DOT1PCT);
    break;
  case SUBJECT_ID_MP204_3_CURRENT_ASYMMETRY:
    gai_11_147_p3_i_asym = ToGeni16bitValue(mp_mp204_3_current_asymmetry.GetSubject(), GENI_CONVERT_ID_PERCENTAGE_DOT1PCT);
    break;
  case SUBJECT_ID_MP204_4_CURRENT_ASYMMETRY:
    gai_11_177_p4_i_asym = ToGeni16bitValue(mp_mp204_4_current_asymmetry.GetSubject(), GENI_CONVERT_ID_PERCENTAGE_DOT1PCT);
    break;
  case SUBJECT_ID_MP204_5_CURRENT_ASYMMETRY:
    gai_11_207_p5_i_asym = ToGeni16bitValue(mp_mp204_5_current_asymmetry.GetSubject(), GENI_CONVERT_ID_PERCENTAGE_DOT1PCT);
    break;
  case SUBJECT_ID_MP204_6_CURRENT_ASYMMETRY:
    gai_11_237_p6_i_asym = ToGeni16bitValue(mp_mp204_6_current_asymmetry.GetSubject(), GENI_CONVERT_ID_PERCENTAGE_DOT1PCT);
    break;
  case SUBJECT_ID_PUMP_RUN_TIME_0_PUMPS_YESTERDAY_LOG:
    gai_11_49_pit_0_pumps_opr_time_yesterday = ToGeni16bitValue(mp_pump_run_time_0_pumps_yesterday_log.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    break;
  case SUBJECT_ID_PUMP_RUN_TIME_0_PUMPS_TODAY_LOG:
    gai_11_51_pit_0_pumps_opr_time_today = ToGeni16bitValue(mp_pump_run_time_0_pumps_today_log.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    break;
  case SUBJECT_ID_PUMP_RUN_TIME_1_PUMPS_YESTERDAY_LOG:
    gai_11_50_pit_1_pumps_opr_time_yesterday = ToGeni16bitValue(mp_pump_run_time_1_pumps_yesterday_log.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    break;
  case SUBJECT_ID_PUMP_RUN_TIME_1_PUMPS_TODAY_LOG:
    gai_11_52_pit_1_pumps_opr_time_today = ToGeni16bitValue(mp_pump_run_time_1_pumps_today_log.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    break;
  case SUBJECT_ID_PUMP_RUN_TIME_2_PUMPS_YESTERDAY_LOG:
    gai_11_12_pit_2_pumps_opr_time_yesterday = ToGeni16bitValue(mp_pump_run_time_2_pumps_yesterday_log.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    break;
  case SUBJECT_ID_PUMP_RUN_TIME_2_PUMPS_TODAY_LOG:
    gai_11_17_pit_2_pumps_opr_time_today = ToGeni16bitValue(mp_pump_run_time_2_pumps_today_log.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    break;
  case SUBJECT_ID_PUMP_RUN_TIME_3_PUMPS_YESTERDAY_LOG:
    gai_11_13_pit_3_pumps_opr_time_yesterday = ToGeni16bitValue(mp_pump_run_time_3_pumps_yesterday_log.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    break;
  case SUBJECT_ID_PUMP_RUN_TIME_3_PUMPS_TODAY_LOG:
    gai_11_18_pit_3_pumps_opr_time_today = ToGeni16bitValue(mp_pump_run_time_3_pumps_today_log.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    break;
  case SUBJECT_ID_PUMP_RUN_TIME_4_PUMPS_YESTERDAY_LOG:
    gai_11_14_pit_4_pumps_opr_time_yesterday = ToGeni16bitValue(mp_pump_run_time_4_pumps_yesterday_log.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    break;
  case SUBJECT_ID_PUMP_RUN_TIME_4_PUMPS_TODAY_LOG:
    gai_11_19_pit_4_pumps_opr_time_today = ToGeni16bitValue(mp_pump_run_time_4_pumps_today_log.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    break;
  case SUBJECT_ID_PUMP_RUN_TIME_5_PUMPS_YESTERDAY_LOG:
    gai_11_15_pit_5_pumps_opr_time_yesterday = ToGeni16bitValue(mp_pump_run_time_5_pumps_yesterday_log.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    break;
  case SUBJECT_ID_PUMP_RUN_TIME_5_PUMPS_TODAY_LOG:
    gai_11_20_pit_5_pumps_opr_time_today = ToGeni16bitValue(mp_pump_run_time_5_pumps_today_log.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    break;
  case SUBJECT_ID_PUMP_RUN_TIME_6_PUMPS_YESTERDAY_LOG:
    gai_11_16_pit_6_pumps_opr_time_yesterday = ToGeni16bitValue(mp_pump_run_time_6_pumps_yesterday_log.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    break;
  case SUBJECT_ID_PUMP_RUN_TIME_6_PUMPS_TODAY_LOG:
    gai_11_21_pit_6_pumps_opr_time_today = ToGeni16bitValue(mp_pump_run_time_6_pumps_today_log.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    break;
  case SUBJECT_ID_PUMP_1_ENERGY:
    gai_14_44_p1_energy = ToGeni32bitValue(mp_pump_1_energy.GetSubject(), GENI_CONVERT_ID_ENERGY_JOULE_DOT1KWH);
    break;
  case SUBJECT_ID_PUMP_2_ENERGY:
    gai_14_64_p2_energy = ToGeni32bitValue(mp_pump_2_energy.GetSubject(), GENI_CONVERT_ID_ENERGY_JOULE_DOT1KWH);
    break;
  case SUBJECT_ID_PUMP_3_ENERGY:
    gai_14_84_p3_energy = ToGeni32bitValue(mp_pump_3_energy.GetSubject(), GENI_CONVERT_ID_ENERGY_JOULE_DOT1KWH);
    break;
  case SUBJECT_ID_PUMP_4_ENERGY:
    gai_14_104_p4_energy = ToGeni32bitValue(mp_pump_4_energy.GetSubject(), GENI_CONVERT_ID_ENERGY_JOULE_DOT1KWH);
    break;
  case SUBJECT_ID_PUMP_5_ENERGY:
    gai_14_124_p5_energy = ToGeni32bitValue(mp_pump_5_energy.GetSubject(), GENI_CONVERT_ID_ENERGY_JOULE_DOT1KWH);
    break;
  case SUBJECT_ID_PUMP_6_ENERGY:
    gai_14_144_p6_energy = ToGeni32bitValue(mp_pump_6_energy.GetSubject(), GENI_CONVERT_ID_ENERGY_JOULE_DOT1KWH);
    break;
  case SUBJECT_ID_PUMP_1_INSULATION_RESISTANCE:
    gai_11_70_p1_insulation = ToGeni16bitValue(mp_pump_1_insulation_resistance.GetSubject(), GENI_CONVERT_ID_RESISTANCE_10KOHM);
    break;
  case SUBJECT_ID_PUMP_2_INSULATION_RESISTANCE:
    gai_11_100_p2_insulation = ToGeni16bitValue(mp_pump_2_insulation_resistance.GetSubject(), GENI_CONVERT_ID_RESISTANCE_10KOHM);
    break;
  case SUBJECT_ID_PUMP_3_INSULATION_RESISTANCE:
    gai_11_130_p3_insulation = ToGeni16bitValue(mp_pump_3_insulation_resistance.GetSubject(), GENI_CONVERT_ID_RESISTANCE_10KOHM);
    break;
  case SUBJECT_ID_PUMP_4_INSULATION_RESISTANCE:
    gai_11_160_p4_insulation = ToGeni16bitValue(mp_pump_4_insulation_resistance.GetSubject(), GENI_CONVERT_ID_RESISTANCE_10KOHM);
    break;
  case SUBJECT_ID_PUMP_5_INSULATION_RESISTANCE:
    gai_11_190_p5_insulation = ToGeni16bitValue(mp_pump_5_insulation_resistance.GetSubject(), GENI_CONVERT_ID_RESISTANCE_10KOHM);
    break;
  case SUBJECT_ID_PUMP_6_INSULATION_RESISTANCE:
    gai_11_220_p6_insulation = ToGeni16bitValue(mp_pump_6_insulation_resistance.GetSubject(), GENI_CONVERT_ID_RESISTANCE_10KOHM);
    break;
  case SUBJECT_ID_RESULTING_VALUE_MOTOR_CURRENT_PUMP_1:
    gai_11_68_p1_current = ToGeni16bitValue(mp_resulting_value_motor_current_pump_1.GetSubject(), GENI_CONVERT_ID_CURRENT_DOT1A);
    break;
  case SUBJECT_ID_RESULTING_VALUE_MOTOR_CURRENT_PUMP_2:
    gai_11_98_p2_current = ToGeni16bitValue(mp_resulting_value_motor_current_pump_2.GetSubject(), GENI_CONVERT_ID_CURRENT_DOT1A);
    break;
  case SUBJECT_ID_RESULTING_VALUE_MOTOR_CURRENT_PUMP_3:
    gai_11_128_p3_current = ToGeni16bitValue(mp_resulting_value_motor_current_pump_3.GetSubject(), GENI_CONVERT_ID_CURRENT_DOT1A);
    break;
  case SUBJECT_ID_RESULTING_VALUE_MOTOR_CURRENT_PUMP_4:
    gai_11_158_p4_current = ToGeni16bitValue(mp_resulting_value_motor_current_pump_4.GetSubject(), GENI_CONVERT_ID_CURRENT_DOT1A);
    break;
  case SUBJECT_ID_RESULTING_VALUE_MOTOR_CURRENT_PUMP_5:
    gai_11_188_p5_current = ToGeni16bitValue(mp_resulting_value_motor_current_pump_5.GetSubject(), GENI_CONVERT_ID_CURRENT_DOT1A);
    break;
  case SUBJECT_ID_RESULTING_VALUE_MOTOR_CURRENT_PUMP_6:
    gai_11_218_p6_current = ToGeni16bitValue(mp_resulting_value_motor_current_pump_6.GetSubject(), GENI_CONVERT_ID_CURRENT_DOT1A);
    break;
  case SUBJECT_ID_PUMP_1_ALARM_STATUS_4:
    gai_11_88_p1_alarms4 = ToGeni16bitValue(mp_pump_1_alarm_status_4.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_PUMP_2_ALARM_STATUS_4:
    gai_11_118_p2_alarms4 = ToGeni16bitValue(mp_pump_2_alarm_status_4.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_PUMP_3_ALARM_STATUS_4:
    gai_11_148_p3_alarms4 = ToGeni16bitValue(mp_pump_3_alarm_status_4.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_PUMP_4_ALARM_STATUS_4:
    gai_11_178_p4_alarms4 = ToGeni16bitValue(mp_pump_4_alarm_status_4.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_PUMP_5_ALARM_STATUS_4:
    gai_11_208_p5_alarms4 = ToGeni16bitValue(mp_pump_5_alarm_status_4.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_PUMP_6_ALARM_STATUS_4:
    gai_11_238_p6_alarms4 = ToGeni16bitValue(mp_pump_6_alarm_status_4.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_PUMP_1_WARNING_STATUS_4:
    gai_11_89_p1_warn4 = ToGeni16bitValue(mp_pump_1_warning_status_4.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_PUMP_2_WARNING_STATUS_4:
    gai_11_119_p2_warn4 = ToGeni16bitValue(mp_pump_2_warning_status_4.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_PUMP_3_WARNING_STATUS_4:
    gai_11_149_p3_warn4 = ToGeni16bitValue(mp_pump_3_warning_status_4.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_PUMP_4_WARNING_STATUS_4:
    gai_11_179_p4_warn4 = ToGeni16bitValue(mp_pump_4_warning_status_4.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_PUMP_5_WARNING_STATUS_4:
    gai_11_209_p5_warn4 = ToGeni16bitValue(mp_pump_5_warning_status_4.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_PUMP_6_WARNING_STATUS_4:
    gai_11_239_p6_warn4 = ToGeni16bitValue(mp_pump_6_warning_status_4.GetSubject(), GENI_CONVERT_ID_BITVAR_255);
    break;
  case SUBJECT_ID_MEASURED_VALUE_OUTLET_PRESSURE:
    gai_11_53_discharge_pressure = ToGeni16bitValue(mp_measured_value_outlet_pressure.GetSubject(), GENI_CONVERT_ID_PRESSURE_1MBAR);
    break;
  case SUBJECT_ID_ANTI_BLOCKING_PERFORMED_COUNTER_PUMP_1:
    gai_14_45_p1_anti_blocking_cnt = ToGeni32bitValue(mp_anti_blocking_performed_counter_pump_1.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_ANTI_BLOCKING_PERFORMED_COUNTER_PUMP_2:
    gai_14_65_p2_anti_blocking_cnt = ToGeni32bitValue(mp_anti_blocking_performed_counter_pump_2.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_ANTI_BLOCKING_PERFORMED_COUNTER_PUMP_3:
    gai_14_85_p3_anti_blocking_cnt = ToGeni32bitValue(mp_anti_blocking_performed_counter_pump_3.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_ANTI_BLOCKING_PERFORMED_COUNTER_PUMP_4:
    gai_14_105_p4_anti_blocking_cnt = ToGeni32bitValue(mp_anti_blocking_performed_counter_pump_4.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_ANTI_BLOCKING_PERFORMED_COUNTER_PUMP_5:
    gai_14_125_p5_anti_blocking_cnt = ToGeni32bitValue(mp_anti_blocking_performed_counter_pump_5.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_ANTI_BLOCKING_PERFORMED_COUNTER_PUMP_6:
    gai_14_145_p6_anti_blocking_cnt = ToGeni32bitValue(mp_anti_blocking_performed_counter_pump_6.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_VFD_MIN_VELOCITY_FEATURE_ENABLED:
    gai_2_240_vfd_min_velocity_feature_enabled = ToGeni8bitValue(mp_vfd_min_velocity_feature_enabled.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_TOTAL_USD_CNT_1:
    gai_14_170_user_defined_cnt_1 = ToGeni32bitValue(mp_total_usd_cnt_1.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_TOTAL_USD_CNT_2:
    gai_14_171_user_defined_cnt_2 = ToGeni32bitValue(mp_total_usd_cnt_2.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_TOTAL_USD_CNT_3:
    gai_14_172_user_defined_cnt_3 = ToGeni32bitValue(mp_total_usd_cnt_3.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_OVERFLOW_VOLUME_LITRE_FOR_LOG:
    gai_11_23_pit_overflow_volume = ToGeni16bitValue(mp_overflow_volume_litre_for_log.GetSubject(), GENI_CONVERT_ID_OVER_VOLUME_DOT1M3);
    gai_14_179_overflow_volume = ToGeni32bitValue(mp_overflow_volume_litre_for_log.GetSubject(), GENI_CONVERT_ID_OVER_VOLUME_DOT1M3);
    break;
  case SUBJECT_ID_PUMPED_VOLUME_LITRE_FOR_LOG:
    gai_14_2_pit_pumped_volume = ToGeni32bitValue(mp_pumped_volume_litre_for_log.GetSubject(), GENI_CONVERT_ID_TOTAL_VOLUME_DOT1M3);
    break;
  case SUBJECT_ID_YESTERDAY_USER_DEFINED_COUNTER_1:
    gai_14_176_yesterday_udc_counter1 = ToGeni32bitValue(mp_yesterday_user_defined_counter_1.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_YESTERDAY_USER_DEFINED_COUNTER_2:
    gai_14_177_yesterday_udc_counter2 = ToGeni32bitValue(mp_yesterday_user_defined_counter_2.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_YESTERDAY_USER_DEFINED_COUNTER_3:
    gai_14_178_yesterday_udc_counter3 = ToGeni32bitValue(mp_yesterday_user_defined_counter_3.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_TODAY_USER_DEFINED_COUNTER_1:
    gai_14_173_today_udc_counter1 = ToGeni32bitValue(mp_today_user_defined_counter_1.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_TODAY_USER_DEFINED_COUNTER_2:
    gai_14_174_today_udc_counter2 = ToGeni32bitValue(mp_today_user_defined_counter_2.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_TODAY_USER_DEFINED_COUNTER_3:
    gai_14_175_today_udc_counter3 = ToGeni32bitValue(mp_today_user_defined_counter_3.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_H2S_LEVEL_ACT:
    gai_14_190_h2s_level = ToGeni32bitValue(mp_h2s_level_act.GetSubject(), GENI_CONVERT_ID_PERCENTAGE_1PPM);
    break;
  case SUBJECT_ID_H2S_LEVEL_TODAY:
    gai_14_191_h2s_level_today = ToGeni32bitValue(mp_h2s_level_today.GetSubject(), GENI_CONVERT_ID_PERCENTAGE_1PPM);
    break;
  case SUBJECT_ID_H2S_LEVEL_YESTERDAY:
    gai_14_192_h2s_level_yesterday = ToGeni32bitValue(mp_h2s_level_yesterday.GetSubject(), GENI_CONVERT_ID_PERCENTAGE_1PPM);
    break;
  case SUBJECT_ID_DOSING_FEED_TANK_LEVEL:
    gai_14_193_dosing_feed_tank_level = ToGeni32bitValue(mp_dosing_feed_tank_level.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case SUBJECT_ID_CHEMICAL_TOTAL_DOSED:
    gai_14_194_chemical_total_dosed = ToGeni32bitValue(mp_chemical_total_dosed.GetSubject(), GENI_CONVERT_ID_VOLUME_1ML);
    break;
  case SUBJECT_ID_SET_DOSING_REF:
    gai_13_6_set_dosing_ref = ToGeni16bitValue(mp_set_dosing_ref.GetSubject(), GENI_CONVERT_ID_FLOW_DOT1LH);
    break;
  default:
    handled = false;
    break;
  }
  return handled;
}

/**************************************************************************
 Geni -> Subject - commands (class 3)
**************************************************************************/
bool BaseGeniAppIf::HandleCommand(GAI_CMD_TYPE geniCmd)
{
  bool handled = true;
  switch (geniCmd)
  {
  case GAI_CMD_ALARM_RESET:
    mp_alarm_reset_event->SetEvent();
    break;
  case GAI_CMD_ENABLE_TEST_MODE:
    mp_enable_test_mode->SetEvent();
    break;
  case GAI_CMD_DISABLE_TEST_MODE:
    mp_disable_test_mode->SetEvent();
    break;
  case GAI_CMD_INTERLOCK_PIT:
    mp_interlock_request->SetEvent();
    break;
  case GAI_CMD_AUTO_PIT:
    mp_interlock_off_request->SetEvent();
    break;
  case GAI_CMD_STOP_P1:
    mp_bus_cmd_pump_1_stop->SetEvent();
    break;
  case GAI_CMD_START_P1:
    mp_bus_cmd_pump_1_start->SetEvent();
    break;
  case GAI_CMD_AUTO_P1:
    mp_bus_cmd_pump_1_auto->SetEvent();
    break;
  case GAI_CMD_STOP_P2:
    mp_bus_cmd_pump_2_stop->SetEvent();
    break;
  case GAI_CMD_START_P2:
    mp_bus_cmd_pump_2_start->SetEvent();
    break;
  case GAI_CMD_AUTO_P2:
    mp_bus_cmd_pump_2_auto->SetEvent();
    break;
  case GAI_CMD_RTC_USE_NEW_TIME_EVENT:
    mp_rtc_use_new_time_event->SetEvent();
    break;
  case GAI_CMD_SCADA_CALL_BACK_ACK:
    mp_clear_pending_scada_event->SetEvent();
    break;
  case GAI_CMD_FILL_SIMULATED_LOG_DATA:
    mp_fill_simulated_log_data->SetEvent();
    break;
  case GAI_CMD_AUTO_P3:
    mp_bus_cmd_pump_3_auto->SetEvent();
    break;
  case GAI_CMD_START_P3:
    mp_bus_cmd_pump_3_start->SetEvent();
    break;
  case GAI_CMD_STOP_P3:
    mp_bus_cmd_pump_3_stop->SetEvent();
    break;
  case GAI_CMD_AUTO_P4:
    mp_bus_cmd_pump_4_auto->SetEvent();
    break;
  case GAI_CMD_START_P4:
    mp_bus_cmd_pump_4_start->SetEvent();
    break;
  case GAI_CMD_STOP_P4:
    mp_bus_cmd_pump_4_stop->SetEvent();
    break;
  case GAI_CMD_AUTO_P5:
    mp_bus_cmd_pump_5_auto->SetEvent();
    break;
  case GAI_CMD_START_P5:
    mp_bus_cmd_pump_5_start->SetEvent();
    break;
  case GAI_CMD_STOP_P5:
    mp_bus_cmd_pump_5_stop->SetEvent();
    break;
  case GAI_CMD_AUTO_P6:
    mp_bus_cmd_pump_6_auto->SetEvent();
    break;
  case GAI_CMD_START_P6:
    mp_bus_cmd_pump_6_start->SetEvent();
    break;
  case GAI_CMD_STOP_P6:
    mp_bus_cmd_pump_6_stop->SetEvent();
    break;
  case GAI_CMD_CUSTOM_RELAY_ON:
    mp_custom_relay_activate_cmd_event->SetEvent();
    break;
  case GAI_CMD_CUSTOM_RELAY_OFF:
    mp_custom_relay_deactivate_cmd_event->SetEvent();
    break;
  case GAI_CMD_CUSTOM_RELAY_PULSE:
    mp_custom_relay_pulse_cmd_event->SetEvent();
    break;
  case GAI_CMD_SPECIFIC_ENERGY_TEST_RUN_P1:
    mp_vfd_1_energy_test_start_test->SetEvent();
    break;
  case GAI_CMD_SPECIFIC_ENERGY_TEST_RUN_P2:
    mp_vfd_2_energy_test_start_test->SetEvent();
    break;
  case GAI_CMD_SPECIFIC_ENERGY_TEST_RUN_P3:
    mp_vfd_3_energy_test_start_test->SetEvent();
    break;
  case GAI_CMD_SPECIFIC_ENERGY_TEST_RUN_P4:
    mp_vfd_4_energy_test_start_test->SetEvent();
    break;
  case GAI_CMD_SPECIFIC_ENERGY_TEST_RUN_P5:
    mp_vfd_5_energy_test_start_test->SetEvent();
    break;
  case GAI_CMD_SPECIFIC_ENERGY_TEST_RUN_P6:
    mp_vfd_6_energy_test_start_test->SetEvent();
    break;
  case GAI_CMD_ACTIVATE_ADVANCED_FLOW_CALC_LEARNING:
    mp_adv_flow_calculation_start_learning_event->SetEvent();
    break;
  case GAI_CMD_ACTIVATE_ANTIBLOCK_PARAMETER_LEARNING:
    mp_antiblock_normal_store_parameters_event->SetEvent();
    break;
  case GAI_CMD_RESET_USER_DEF_CNT_1:
    mp_reset_usd_cnt_1_event->SetEvent();
    break;
  case GAI_CMD_RESET_USER_DEF_CNT_2:
    mp_reset_usd_cnt_2_event->SetEvent();
    break;
  case GAI_CMD_RESET_USER_DEF_CNT_3:
    mp_reset_usd_cnt_3_event->SetEvent();
    break;
  case GAI_CMD_CALL_BACK_TEST:
    mp_scada_callback_test_event->SetEvent();
    break;
  default:
    handled = false;
    break;
  }
  return handled;
}

/**************************************************************************
 Geni -> Subject - 8 bit
**************************************************************************/
bool BaseGeniAppIf::GeniToSubject(GAI_VAR_TYPE geniVar, U8 newValue)
{
  bool handled = true;
  switch (geniVar)
  {
  case GAI_VAR_DISPLAY_WIZARD_ENABLE:
    GeniToDataPoint(newValue, mp_display_wizard_enable.GetSubject(), GENI_CONVERT_ID_BITVAR_254);
    break;
  case GAI_VAR_GENI_SETUP:
    GeniToDataPoint(newValue, mp_geni_setup.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case GAI_VAR_SLAVE_UNIT_ADDRESS:
    GeniToDataPoint(newValue, mp_geni_slave_unit_address.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case GAI_VAR_SLAVE_GROUP_ADDRESS:
    GeniToDataPoint(newValue, mp_geni_slave_group_address.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case GAI_VAR_CUSTOM_RELAY:
    GeniToDataPoint(newValue, mp_relay_status_relay_func_relay_custom.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case GAI_VAR_SMS_OUT_SEQ_NO_ACK:
    GeniToDataPoint(newValue, mp_sms_sent_id.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case GAI_VAR_SIM_CARD_STATUS:
    GeniToDataPoint(newValue, mp_sim_card_status.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case GAI_VAR_BAUD_RATE_DEFAULT:
    GeniToDataPoint(newValue, mp_geni_baud_rate_config.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case GAI_VAR_SET_BAUD_RATE:
    GeniToDataPoint(newValue, mp_geni_baud_rate_set.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case GAI_VAR_MIN_REPLY_DELAY_DEFAULT:
    GeniToDataPoint(newValue, mp_geni_min_reply_delay_config.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case GAI_VAR_SET_MIN_REPLY_DELAY:
    GeniToDataPoint(newValue, mp_geni_min_reply_delay_set.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case GAI_VAR_PIT_LEVEL_SIM_ENABLED:
    GeniToDataPoint(newValue, mp_pit_level_sim_enabled.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case GAI_VAR_EVENT_CODE_SIM:
    GeniToDataPoint(newValue, mp_event_code_sim.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case GAI_VAR_EVENT_SOURCE_SIM:
    GeniToDataPoint(newValue, mp_event_action_type_sim.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case GAI_VAR_EVENT_TYPE_AND_COND_SIM:
    GeniToDataPoint(newValue, mp_event_reset_type_sim.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case GAI_VAR_EVENT_SIM_ACTIVATE:
    GeniToDataPoint(newValue, mp_event_sim_activate.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case GAI_VAR_CIM_HEARTBEAT:
    GeniToDataPoint(newValue, mp_ciu_communication.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case GAI_VAR_CIM_TYPE:
    GeniToDataPoint(newValue, mp_communication_card_received.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case GAI_VAR_GSM_STATE:
    GeniToDataPoint(newValue, mp_gsm_state.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case GAI_VAR_DEVICE_TYPE_CODE_SIM_ID:
    GeniToDataPoint(newValue, mp_device_type_code_sim.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case GAI_VAR_DEVICE_NO_SIM_ID:
    GeniToDataPoint(newValue, mp_device_no_sim.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case GAI_VAR_RTC_YEAR_SET:
    GeniToDataPoint(newValue, mp_rtc_year_set.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case GAI_VAR_RTC_MONTH_SET:
    GeniToDataPoint(newValue, mp_rtc_month_set.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case GAI_VAR_RTC_DAY_SET:
    GeniToDataPoint(newValue, mp_rtc_day_set.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case GAI_VAR_RTC_HOUR_SET:
    GeniToDataPoint(newValue, mp_rtc_hour_set.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case GAI_VAR_RTC_MINUTE_SET:
    GeniToDataPoint(newValue, mp_rtc_minute_set.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case GAI_VAR_RTC_SECOND_SET:
    GeniToDataPoint(newValue, mp_rtc_second_set.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case GAI_VAR_DEMO_SUITCASE_MODE_ENABLED:
    GeniToDataPoint(newValue, mp_demo_suitcase_mode_enabled.GetSubject(), GENI_CONVERT_ID_BITVAR_254);
    break;
  case GAI_VAR_ANA_OUT_1_CONF_FUNC:
    GeniToDataPoint(newValue, mp_ana_out_1_conf_func.GetSubject(), GENI_CONVERT_ID_BITVAR_254);
    break;
  case GAI_VAR_ANA_OUT_2_CONF_FUNC:
    GeniToDataPoint(newValue, mp_ana_out_2_conf_func.GetSubject(), GENI_CONVERT_ID_BITVAR_254);
    break;
  case GAI_VAR_ANA_OUT_3_CONF_FUNC:
    GeniToDataPoint(newValue, mp_ana_out_3_conf_func.GetSubject(), GENI_CONVERT_ID_BITVAR_254);
    break;
  case GAI_VAR_ANA_OUT_4_CONF_FUNC:
    GeniToDataPoint(newValue, mp_ana_out_4_conf_func.GetSubject(), GENI_CONVERT_ID_BITVAR_254);
    break;
  case GAI_VAR_ANA_OUT_5_CONF_FUNC:
    GeniToDataPoint(newValue, mp_ana_out_5_conf_func.GetSubject(), GENI_CONVERT_ID_BITVAR_254);
    break;
  case GAI_VAR_ANA_OUT_6_CONF_FUNC:
    GeniToDataPoint(newValue, mp_ana_out_6_conf_func.GetSubject(), GENI_CONVERT_ID_BITVAR_254);
    break;
  case GAI_VAR_CONTROL_MODE_PUMP1:
    GeniToDataPoint(newValue, mp_vfd_1_run_mode.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case GAI_VAR_CONTROL_MODE_PUMP2:
    GeniToDataPoint(newValue, mp_vfd_2_run_mode.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case GAI_VAR_CONTROL_MODE_PUMP3:
    GeniToDataPoint(newValue, mp_vfd_3_run_mode.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case GAI_VAR_CONTROL_MODE_PUMP4:
    GeniToDataPoint(newValue, mp_vfd_4_run_mode.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case GAI_VAR_CONTROL_MODE_PUMP5:
    GeniToDataPoint(newValue, mp_vfd_5_run_mode.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case GAI_VAR_CONTROL_MODE_PUMP6:
    GeniToDataPoint(newValue, mp_vfd_6_run_mode.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case GAI_VAR_PID_FEEDBACK_PUMP1:
    GeniToDataPoint(newValue, mp_vfd_1_pid_ai_feedback.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case GAI_VAR_PID_FEEDBACK_PUMP2:
    GeniToDataPoint(newValue, mp_vfd_2_pid_ai_feedback.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case GAI_VAR_PID_FEEDBACK_PUMP3:
    GeniToDataPoint(newValue, mp_vfd_3_pid_ai_feedback.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case GAI_VAR_PID_FEEDBACK_PUMP4:
    GeniToDataPoint(newValue, mp_vfd_4_pid_ai_feedback.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case GAI_VAR_PID_FEEDBACK_PUMP5:
    GeniToDataPoint(newValue, mp_vfd_5_pid_ai_feedback.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case GAI_VAR_PID_FEEDBACK_PUMP6:
    GeniToDataPoint(newValue, mp_vfd_6_pid_ai_feedback.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case GAI_VAR_AI_SETPOINT_PUMP1:
    GeniToDataPoint(newValue, mp_vfd_1_pid_ai_setpoint.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case GAI_VAR_AI_SETPOINT_PUMP2:
    GeniToDataPoint(newValue, mp_vfd_2_pid_ai_setpoint.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case GAI_VAR_AI_SETPOINT_PUMP3:
    GeniToDataPoint(newValue, mp_vfd_3_pid_ai_setpoint.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case GAI_VAR_AI_SETPOINT_PUMP4:
    GeniToDataPoint(newValue, mp_vfd_4_pid_ai_setpoint.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case GAI_VAR_AI_SETPOINT_PUMP5:
    GeniToDataPoint(newValue, mp_vfd_5_pid_ai_setpoint.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case GAI_VAR_AI_SETPOINT_PUMP6:
    GeniToDataPoint(newValue, mp_vfd_6_pid_ai_setpoint.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case GAI_VAR_FIXED_SETPOINT_PUMP1:
    GeniToDataPoint(newValue, mp_vfd_1_pid_fixed_setpoint.GetSubject(), GENI_CONVERT_ID_PERCENTAGE_1PCT);
    break;
  case GAI_VAR_FIXED_SETPOINT_PUMP2:
    GeniToDataPoint(newValue, mp_vfd_2_pid_fixed_setpoint.GetSubject(), GENI_CONVERT_ID_PERCENTAGE_1PCT);
    break;
  case GAI_VAR_FIXED_SETPOINT_PUMP3:
    GeniToDataPoint(newValue, mp_vfd_3_pid_fixed_setpoint.GetSubject(), GENI_CONVERT_ID_PERCENTAGE_1PCT);
    break;
  case GAI_VAR_FIXED_SETPOINT_PUMP4:
    GeniToDataPoint(newValue, mp_vfd_4_pid_fixed_setpoint.GetSubject(), GENI_CONVERT_ID_PERCENTAGE_1PCT);
    break;
  case GAI_VAR_FIXED_SETPOINT_PUMP5:
    GeniToDataPoint(newValue, mp_vfd_5_pid_fixed_setpoint.GetSubject(), GENI_CONVERT_ID_PERCENTAGE_1PCT);
    break;
  case GAI_VAR_FIXED_SETPOINT_PUMP6:
    GeniToDataPoint(newValue, mp_vfd_6_pid_fixed_setpoint.GetSubject(), GENI_CONVERT_ID_PERCENTAGE_1PCT);
    break;
  case GAI_VAR_SET_POINT_TYPE_PUMP1:
    GeniToDataPoint(newValue, mp_vfd_1_pid_setpoint_type.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case GAI_VAR_SET_POINT_TYPE_PUMP2:
    GeniToDataPoint(newValue, mp_vfd_2_pid_setpoint_type.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case GAI_VAR_SET_POINT_TYPE_PUMP3:
    GeniToDataPoint(newValue, mp_vfd_3_pid_setpoint_type.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case GAI_VAR_SET_POINT_TYPE_PUMP4:
    GeniToDataPoint(newValue, mp_vfd_4_pid_setpoint_type.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case GAI_VAR_SET_POINT_TYPE_PUMP5:
    GeniToDataPoint(newValue, mp_vfd_5_pid_setpoint_type.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case GAI_VAR_SET_POINT_TYPE_PUMP6:
    GeniToDataPoint(newValue, mp_vfd_6_pid_setpoint_type.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  default:
    handled = false;
    break;
  }
  return handled;
}

/**************************************************************************
 Geni -> Subject - 16 bit
**************************************************************************/
bool BaseGeniAppIf::GeniToSubject(GAI_VAR_TYPE geniVar, U16 newValue)
{
  bool handled = true;
  switch (geniVar)
  {
  case GAI_VAR_START_LEVEL_P1:
    GeniToDataPoint(newValue, mp_start_level_pump_1.GetSubject(), GENI_CONVERT_ID_HEAD_DIST_DOT01M);
    break;
  case GAI_VAR_START_LEVEL_P2:
    GeniToDataPoint(newValue, mp_start_level_pump_2.GetSubject(), GENI_CONVERT_ID_HEAD_DIST_DOT01M);
    break;
  case GAI_VAR_STOP_LEVEL_P1:
    GeniToDataPoint(newValue, mp_stop_level_pump_1.GetSubject(), GENI_CONVERT_ID_HEAD_DIST_DOT01M);
    break;
  case GAI_VAR_STOP_LEVEL_P2:
    GeniToDataPoint(newValue, mp_stop_level_pump_2.GetSubject(), GENI_CONVERT_ID_HEAD_DIST_DOT01M);
    break;
  case GAI_VAR_HIGH_LEVEL:
    GeniToDataPoint(newValue, mp_sys_alarm_high_level_alarm_conf.GetSubject(), GENI_CONVERT_ID_HEAD_DIST_DOT01M);
    break;
  case GAI_VAR_ALARM_LEVEL:
    GeniToDataPoint(newValue, mp_sys_alarm_level_alarm_conf.GetSubject(), GENI_CONVERT_ID_HEAD_DIST_DOT01M);
    break;
  case GAI_VAR_DRY_RUNNING_LEVEL:
    GeniToDataPoint(newValue, mp_sys_alarm_dry_running_alarm_conf.GetSubject(), GENI_CONVERT_ID_HEAD_DIST_DOT01M);
    break;
  case GAI_VAR_OVERFLOW_LEVEL:
    GeniToDataPoint(newValue, mp_sys_alarm_overflow_alarm_conf.GetSubject(), GENI_CONVERT_ID_HEAD_DIST_DOT01M);
    break;
  case GAI_VAR_FOAM_DRAIN_LEVEL:
    GeniToDataPoint(newValue, mp_foam_start_level.GetSubject(), GENI_CONVERT_ID_HEAD_DIST_DOT01M);
    break;
  case GAI_VAR_INTERLOCK_TIMEOUT_SLAVE:
    GeniToDataPoint(newValue, mp_interlock_timeout.GetSubject(), GENI_CONVERT_ID_TIME_1MIN);
    break;
  case GAI_VAR_EVENT_LOG_CLEAR_ID:
    GeniToDataPoint(newValue, mp_event_log_clear_id.GetSubject(), GENI_CONVERT_ID_DIMLESS_255);
    break;
  case GAI_VAR_START_LEVEL_P3:
    GeniToDataPoint(newValue, mp_start_level_pump_3.GetSubject(), GENI_CONVERT_ID_HEAD_DIST_DOT01M);
    break;
  case GAI_VAR_STOP_LEVEL_P3:
    GeniToDataPoint(newValue, mp_stop_level_pump_3.GetSubject(), GENI_CONVERT_ID_HEAD_DIST_DOT01M);
    break;
  case GAI_VAR_START_LEVEL_P4:
    GeniToDataPoint(newValue, mp_start_level_pump_4.GetSubject(), GENI_CONVERT_ID_HEAD_DIST_DOT01M);
    break;
  case GAI_VAR_STOP_LEVEL_P4:
    GeniToDataPoint(newValue, mp_stop_level_pump_4.GetSubject(), GENI_CONVERT_ID_HEAD_DIST_DOT01M);
    break;
  case GAI_VAR_START_LEVEL_P5:
    GeniToDataPoint(newValue, mp_start_level_pump_5.GetSubject(), GENI_CONVERT_ID_HEAD_DIST_DOT01M);
    break;
  case GAI_VAR_STOP_LEVEL_P5:
    GeniToDataPoint(newValue, mp_stop_level_pump_5.GetSubject(), GENI_CONVERT_ID_HEAD_DIST_DOT01M);
    break;
  case GAI_VAR_START_LEVEL_P6:
    GeniToDataPoint(newValue, mp_start_level_pump_6.GetSubject(), GENI_CONVERT_ID_HEAD_DIST_DOT01M);
    break;
  case GAI_VAR_STOP_LEVEL_P6:
    GeniToDataPoint(newValue, mp_stop_level_pump_6.GetSubject(), GENI_CONVERT_ID_HEAD_DIST_DOT01M);
    break;
  case GAI_VAR_FIXED_FREQ_PUMP1:
    GeniToDataPoint(newValue, mp_vfd_1_fixed_frequency.GetSubject(), GENI_CONVERT_ID_FREQUENCY_001HZ);
    break;
  case GAI_VAR_FIXED_FREQ_PUMP2:
    GeniToDataPoint(newValue, mp_vfd_2_fixed_frequency.GetSubject(), GENI_CONVERT_ID_FREQUENCY_001HZ);
    break;
  case GAI_VAR_FIXED_FREQ_PUMP3:
    GeniToDataPoint(newValue, mp_vfd_3_fixed_frequency.GetSubject(), GENI_CONVERT_ID_FREQUENCY_001HZ);
    break;
  case GAI_VAR_FIXED_FREQ_PUMP4:
    GeniToDataPoint(newValue, mp_vfd_4_fixed_frequency.GetSubject(), GENI_CONVERT_ID_FREQUENCY_001HZ);
    break;
  case GAI_VAR_FIXED_FREQ_PUMP5:
    GeniToDataPoint(newValue, mp_vfd_5_fixed_frequency.GetSubject(), GENI_CONVERT_ID_FREQUENCY_001HZ);
    break;
  case GAI_VAR_FIXED_FREQ_PUMP6:
    GeniToDataPoint(newValue, mp_vfd_6_fixed_frequency.GetSubject(), GENI_CONVERT_ID_FREQUENCY_001HZ);
    break;
  case GAI_VAR_ANA_OUT_USER_1:
    GeniToDataPoint(newValue, mp_ana_out_user_1.GetSubject(), GENI_CONVERT_ID_PERCENTAGE_DOT1PCT);
    break;
  case GAI_VAR_ANA_OUT_USER_2:
    GeniToDataPoint(newValue, mp_ana_out_user_2.GetSubject(), GENI_CONVERT_ID_PERCENTAGE_DOT1PCT);
    break;
  case GAI_VAR_ANA_OUT_USER_3:
    GeniToDataPoint(newValue, mp_ana_out_user_3.GetSubject(), GENI_CONVERT_ID_PERCENTAGE_DOT1PCT);
    break;
  case GAI_VAR_SET_DOSING_REF:
    GeniToDataPoint(newValue, mp_set_dosing_ref.GetSubject(), GENI_CONVERT_ID_FLOW_DOT1LH);
    break;
  default:
    handled = false;
    break;
  }
  return handled;
}

/**************************************************************************
 Geni -> Subject - 32 bit
**************************************************************************/
bool BaseGeniAppIf::GeniToSubject(GAI_VAR_TYPE geniVar, U32 newValue)
{
  bool handled = true;
  switch (geniVar)
  {
  case GAI_VAR_DUMMY15:
    GeniToDataPoint(newValue, mp_geni_dummy_data_point.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case GAI_VAR_DUMMY16:
    GeniToDataPoint(newValue, mp_geni_dummy_data_point.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  case GAI_VAR_SET_REAL_TIME_CLOCK:
    GeniToDataPoint(newValue, mp_rtc_seconds_since_1970_set.GetSubject(), GENI_CONVERT_ID_DIMLESS_254);
    break;
  default:
    handled = false;
    break;
  }
  return handled;
}

